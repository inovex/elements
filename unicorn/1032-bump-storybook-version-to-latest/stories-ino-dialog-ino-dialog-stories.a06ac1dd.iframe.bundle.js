(self.webpackChunk_inovex_de_elements_storybook=self.webpackChunk_inovex_de_elements_storybook||[]).push([[2007],{"./src/stories/ino-dialog/ino-dialog.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClosingAction:()=>ClosingAction,ConfirmationDialogWithIcon:()=>ConfirmationDialogWithIcon,ConfirmationDialogWithText:()=>ConfirmationDialogWithText,Default:()=>Default,Dismissible:()=>Dismissible,FullWidth:()=>FullWidth,UsingSlots:()=>UsingSlots,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ino_dialog_stories});var lit_html=__webpack_require__("../../node_modules/lit-html/lit-html.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),StoryWrapper=__webpack_require__("./src/stories/StoryWrapper.ts"),lightning=__webpack_require__("./src/assets/images/lightning.jpg"),mountains=__webpack_require__("./src/assets/images/mountains.jpg"),nidaros=__webpack_require__("./src/assets/images/nidaros.jpg"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ino_dialog=__webpack_require__("../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-dialog/ino-dialog.scss"),ino_dialog_default=__webpack_require__.n(ino_dialog),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ino_dialog_default(),options);ino_dialog_default()&&ino_dialog_default().locals&&ino_dialog_default().locals;const onSlideChanged=ev=>{ev.target.value=ev.detail},InoDialogMeta={title:"Structure/ino-dialog",component:"ino-dialog",decorators:[story=>((0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{const handleOpen=e=>{document.getElementById(e.target.parentElement.getAttribute("data-dialog-id")).open=!0},btns=document.querySelectorAll(".open-dialog-btn");btns.forEach((btn=>btn.addEventListener("click",handleOpen)));const dialogs=document.querySelectorAll("ino-dialog"),handleClose=e=>{if(e.target.open=!1,"demo-action-dialog"==e.target.id){const snackbar=document.createElement("ino-snackbar");snackbar.innerText=`Closed with action: ${e.detail}`,document.body.appendChild(snackbar)}};return dialogs.forEach((dialog=>dialog.addEventListener("close",handleClose))),dialogs.forEach((dialog=>dialog.addEventListener("action",handleClose))),()=>{btns.forEach((btn=>btn.removeEventListener("click",handleOpen))),dialogs.forEach((dialog=>dialog.removeEventListener("close",handleClose))),dialogs.forEach((dialog=>dialog.removeEventListener("action",handleClose)))}})),story())],render:args=>lit_html.dy`
    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"
      >${args.buttonText}</ino-button
    >
    <ino-dialog
      id="${args.dataDialogId}"
      open="${args.open}"
      fullwidth="${args.fullwidth}"
      dismissible="${args.dismissible}"
      attach-to="${args.attachTo}"
      header-text="${args.headerText}"
      body-text="${args.bodyText}"
      action-text="${args.actionText}"
      cancel-text="${args.cancelText}"
      icon="${args.icon}"
    >
    </ino-dialog>
  `,args:{attachTo:"",open:!1,dialogRole:"dialog",fullwidth:!1,dismissible:!0,headerText:"Hi, I am a headline",bodyText:"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, conset",actionText:"submit",cancelText:"cancel",icon:"search",buttonText:"Open Dialog",dataDialogId:"ino-dialog-1"}},ino_dialog_stories=InoDialogMeta,Default=(0,StoryWrapper.Z)({...InoDialogMeta}),ConfirmationDialogWithText=(0,StoryWrapper.Z)({...Default,render:args=>lit_html.dy`
    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"
      >${args.buttonText}</ino-button
    >
    <ino-dialog
      id="${args.dataDialogId}"
      open="${args.open}"
      fullwidth="${args.fullwidth}"
      dismissible="${args.dismissible}"
      attach-to="${args.attachTo}"
      header-text="${args.headerText}"
      action-text="${args.actionText}"
      cancel-text="${args.cancelText}"
      body-text="${args.bodyText}"
    >
    </ino-dialog>
  `,args:{headerText:"Do you really want to delete your account?",bodyText:"After deleting your account, you will no longer be able to access your saved items.",cancelText:"Cancel",actionText:"Delete account",dataDialogId:"demo-conformation-with-text-dialog",buttonText:"Open confirmation Dialog with text"}});ConfirmationDialogWithText.story={parameters:{docs:{storyDescription:"A Confirmation Dialog with Text requires an action to be taken in order for the dialog to be completed and closed.\n\nContains a `headerText`, `bodyText`, `cancelText` and `actionText`."}}};const ConfirmationDialogWithIcon=(0,StoryWrapper.Z)({...Default,render:args=>lit_html.dy`
    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"
      >${args.buttonText}</ino-button
    >
    <ino-dialog
      id="${args.dataDialogId}"
      open="${args.open}"
      fullwidth="${args.fullwidth}"
      dismissible="${args.dismissible}"
      attach-to="${args.attachTo}"
      header-text="${args.headerText}"
      action-text="${args.actionText}"
      body-text="${args.bodyText}"
      icon="${args.icon}"
    >
    </ino-dialog>
  `,args:{headerText:"Perfect! You almost made it...",bodyText:"A confirmation email is on the way. Please click on the link in the email to complete the registration and secure your discount code.",actionText:"Confirm",dataDialogId:"demo-conformation-with-icon-dialog",buttonText:"Open confirmation Dialog with icon",icon:"message"}});ConfirmationDialogWithIcon.story={parameters:{docs:{storyDescription:'A Confirmation Dialog with Hero Icon requires an acknowledgement of the information from the user. User has to confirm with one klick on the primary button.\n\n\nContains a `ino-icon` (use `icon="iconID"` on the `ino-dialog` to select one of the given [ino-icons](https://elements.inovex.de/version/v8.0.0/?path=/docs/graphic-ino-icon--all-icons)), `headerText`, `bodyText`, `canceltext` and `actionText`.'}}};const UsingSlots=(0,StoryWrapper.Z)({...Default,render:args=>lit_html.dy`
    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"
      >${args.buttonText}</ino-button
    >
    <ino-dialog
      id="${args.dataDialogId}"
      open="${args.open}"
      fullwidth="${args.fullwidth}"
      dismissible="${args.dismissible}"
      attach-to="${args.attachTo}"
      action-text="${args.actionText}"
      cancel-text="${args.cancelText}"
    >
      <header slot="header">
        <h3>Custom Header</h3>
        <ino-icon icon="info"></ino-icon>
      </header>
      <section slot="body">
        <ino-carousel
          class="customizable-carousel"
          value="0"
          autoplay="true"
          hide-buttons="true"
          infinite="true"
          intermission="2000"
          reverse="false"
          @valueChange="${onSlideChanged}"
        >
          <ino-carousel-slide
            src=${lightning}
            value="0"
          ></ino-carousel-slide>
          <ino-carousel-slide
            src=${mountains}
            value="1"
          ></ino-carousel-slide>
          <ino-carousel-slide src=${nidaros} value="2"></ino-carousel-slide>
        </ino-carousel>
      </section>
      <footer slot="footer">
        <ino-button>Button 1</ino-button>
        <ino-button>Button 2</ino-button>
        <ino-button variant="outlined">Button 3</ino-button>
      </footer>
    </ino-dialog>
  `,args:{buttonText:"Open Dialog with slot",dataDialogId:"demo-custom-content-dialog"}});UsingSlots.story={parameters:{docs:{storyDescription:'By using `slot name="header"`, `slot name="body"` or `slot name="footer"` you can respectively replace the default `<header>`, `<section>` (body) or `<footer>` elements of the `ino-dialog` with your own custom content.\n\nBy using the default slot you can completely replace the elements of the `ino-dialog` with your own markdown.'}}};const FullWidth=(0,StoryWrapper.Z)({...Default,docsFromProperty:"fullwidth",args:{fullwidth:!0,buttonText:"Open full width Dialog",dataDialogId:"demo-fullwidth-dialog"}}),Dismissible=(0,StoryWrapper.Z)({...Default,docsFromProperty:"dismissible",args:{dismissible:!0,buttonText:"Open dismissible Dialog",dataDialogId:"demo-dismissible-dialog"}}),ClosingAction=(0,StoryWrapper.Z)({...Default,args:{dataDialogId:"demo-action-dialog",buttonText:"open closing action Dialog"}});ClosingAction.story={parameters:{docs:{storyDescription:"Closing actions allow you to handle different button actions (like confirm, cancel, ...) using the `close` event listener on the dialog.\nClose the dialog and see the snackbar afterwards."}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"Story({\n  ...InoDialogMeta\n})",...Default.parameters?.docs?.source}}},ConfirmationDialogWithText.parameters={...ConfirmationDialogWithText.parameters,docs:{...ConfirmationDialogWithText.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: args => html`\n    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"\n      >${args.buttonText}</ino-button\n    >\n    <ino-dialog\n      id="${args.dataDialogId}"\n      open="${args.open}"\n      fullwidth="${args.fullwidth}"\n      dismissible="${args.dismissible}"\n      attach-to="${args.attachTo}"\n      header-text="${args.headerText}"\n      action-text="${args.actionText}"\n      cancel-text="${args.cancelText}"\n      body-text="${args.bodyText}"\n    >\n    </ino-dialog>\n  `,\n  args: {\n    headerText: \'Do you really want to delete your account?\',\n    bodyText: \'After deleting your account, you will no longer be able to access your saved items.\',\n    cancelText: \'Cancel\',\n    actionText: \'Delete account\',\n    dataDialogId: \'demo-conformation-with-text-dialog\',\n    buttonText: \'Open confirmation Dialog with text\'\n  }\n})',...ConfirmationDialogWithText.parameters?.docs?.source},description:{story:"A Confirmation Dialog with Text requires an action to be taken in order for the dialog to be completed and closed.\n\nContains a `headerText`, `bodyText`, `cancelText` and `actionText`.",...ConfirmationDialogWithText.parameters?.docs?.description}}},ConfirmationDialogWithIcon.parameters={...ConfirmationDialogWithIcon.parameters,docs:{...ConfirmationDialogWithIcon.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: args => html`\n    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"\n      >${args.buttonText}</ino-button\n    >\n    <ino-dialog\n      id="${args.dataDialogId}"\n      open="${args.open}"\n      fullwidth="${args.fullwidth}"\n      dismissible="${args.dismissible}"\n      attach-to="${args.attachTo}"\n      header-text="${args.headerText}"\n      action-text="${args.actionText}"\n      body-text="${args.bodyText}"\n      icon="${args.icon}"\n    >\n    </ino-dialog>\n  `,\n  args: {\n    headerText: \'Perfect! You almost made it...\',\n    bodyText: \'A confirmation email is on the way. Please click on the link in the email to complete the registration and secure your discount code.\',\n    actionText: \'Confirm\',\n    dataDialogId: \'demo-conformation-with-icon-dialog\',\n    buttonText: \'Open confirmation Dialog with icon\',\n    icon: \'message\'\n  }\n})',...ConfirmationDialogWithIcon.parameters?.docs?.source},description:{story:'A Confirmation Dialog with Hero Icon requires an acknowledgement of the information from the user. User has to confirm with one klick on the primary button.\n\n\nContains a `ino-icon` (use `icon="iconID"` on the `ino-dialog` to select one of the given [ino-icons](https://elements.inovex.de/version/v8.0.0/?path=/docs/graphic-ino-icon--all-icons)), `headerText`, `bodyText`, `canceltext` and `actionText`.',...ConfirmationDialogWithIcon.parameters?.docs?.description}}},UsingSlots.parameters={...UsingSlots.parameters,docs:{...UsingSlots.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: args => html`\n    <ino-button class="open-dialog-btn" data-dialog-id="${args.dataDialogId}"\n      >${args.buttonText}</ino-button\n    >\n    <ino-dialog\n      id="${args.dataDialogId}"\n      open="${args.open}"\n      fullwidth="${args.fullwidth}"\n      dismissible="${args.dismissible}"\n      attach-to="${args.attachTo}"\n      action-text="${args.actionText}"\n      cancel-text="${args.cancelText}"\n    >\n      <header slot="header">\n        <h3>Custom Header</h3>\n        <ino-icon icon="info"></ino-icon>\n      </header>\n      <section slot="body">\n        <ino-carousel\n          class="customizable-carousel"\n          value="0"\n          autoplay="true"\n          hide-buttons="true"\n          infinite="true"\n          intermission="2000"\n          reverse="false"\n          @valueChange="${onSlideChanged}"\n        >\n          <ino-carousel-slide\n            src=${lightningImg}\n            value="0"\n          ></ino-carousel-slide>\n          <ino-carousel-slide\n            src=${mountainsImg}\n            value="1"\n          ></ino-carousel-slide>\n          <ino-carousel-slide src=${nidarosImg} value="2"></ino-carousel-slide>\n        </ino-carousel>\n      </section>\n      <footer slot="footer">\n        <ino-button>Button 1</ino-button>\n        <ino-button>Button 2</ino-button>\n        <ino-button variant="outlined">Button 3</ino-button>\n      </footer>\n    </ino-dialog>\n  `,\n  args: {\n    buttonText: \'Open Dialog with slot\',\n    dataDialogId: \'demo-custom-content-dialog\'\n  }\n})',...UsingSlots.parameters?.docs?.source},description:{story:'By using `slot name="header"`, `slot name="body"` or `slot name="footer"` you can respectively replace the default `<header>`, `<section>` (body) or `<footer>` elements of the `ino-dialog` with your own custom content.\n\nBy using the default slot you can completely replace the elements of the `ino-dialog` with your own markdown.',...UsingSlots.parameters?.docs?.description}}},FullWidth.parameters={...FullWidth.parameters,docs:{...FullWidth.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'fullwidth',\n  args: {\n    fullwidth: true,\n    buttonText: 'Open full width Dialog',\n    dataDialogId: 'demo-fullwidth-dialog'\n  }\n})",...FullWidth.parameters?.docs?.source}}},Dismissible.parameters={...Dismissible.parameters,docs:{...Dismissible.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'dismissible',\n  args: {\n    dismissible: true,\n    buttonText: 'Open dismissible Dialog',\n    dataDialogId: 'demo-dismissible-dialog'\n  }\n})",...Dismissible.parameters?.docs?.source}}},ClosingAction.parameters={...ClosingAction.parameters,docs:{...ClosingAction.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  args: {\n    dataDialogId: 'demo-action-dialog',\n    buttonText: 'open closing action Dialog'\n  }\n})",...ClosingAction.parameters?.docs?.source},description:{story:"Closing actions allow you to handle different button actions (like confirm, cancel, ...) using the `close` event listener on the dialog.\nClose the dialog and see the snackbar afterwards.",...ClosingAction.parameters?.docs?.description}}};const __namedExportsOrder=["Default","ConfirmationDialogWithText","ConfirmationDialogWithIcon","UsingSlots","FullWidth","Dismissible","ClosingAction"]},"./src/stories/StoryWrapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>Story});var _elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./elements-stencil-docs.json"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/lodash/lodash.js");function Story(meta){if(meta.docsFromProperty){if(!meta.component)throw new Error("Component name needs to be provided");const doc=function findPropertyDocumentationInJsonDoc(tagName,property){const componentDocs=_elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__.components.find((doc=>doc.tag===tagName));if(!componentDocs)throw new Error(`Could not find docs for component ${tagName}.`);const propDocs=componentDocs.props.find((prop=>prop.name===property));if(!propDocs)throw new Error(`Could not find docs for property ${property}.`);return propDocs.docs}(meta.component,meta.docsFromProperty);return(0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)({},meta,{parameters:{docs:{description:{story:doc}}}})}return meta}},"../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-dialog/ino-dialog.scss":(module,exports,__webpack_require__)=>{(module.exports=__webpack_require__("../../node_modules/css-loader/lib/css-base.js")(!1)).push([module.id,"ino-button .button__label{pointer-events:none}#demo-custom-content-dialog .customizable-carousel{display:block;width:100%;height:20rem}#demo-custom-content-dialog header{display:flex;justify-content:space-between;align-items:center;margin-bottom:2rem}#demo-custom-content-dialog header ino-icon{--icon-width: 2rem;--icon-height: 2rem}#demo-custom-content-dialog header h3{margin:0}#demo-custom-content-dialog footer{margin-top:2rem;display:flex;justify-content:space-between}",""])},"./src/assets/images/lightning.jpg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/lightning.77c39bba.jpg"},"./src/assets/images/mountains.jpg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/mountains.1558ed75.jpg"},"./src/assets/images/nidaros.jpg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/nidaros.d948f31d.jpg"}}]);
//# sourceMappingURL=stories-ino-dialog-ino-dialog-stories.a06ac1dd.iframe.bundle.js.map