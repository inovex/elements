/*! For license information please see main.45cc62a8.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_inovex_de_elements_storybook=self.webpackChunk_inovex_de_elements_storybook||[]).push([[179],{"../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[9].use[1]!../elements/dist/inovex-elements/inovex-elements.css":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_storybook_builder_webpack5_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".inovex-elements-typo{font-family:Lato, Verdana, sans-serif;}.inovex-elements-typo a{background-color:transparent;color:#2c02ff;font-weight:bold;text-decoration:none}.inovex-elements-typo h1.display,.inovex-elements-typo .header-d1{font-family:Lato, Verdana, sans-serif;font-size:4rem;line-height:4.75rem;letter-spacing:0.005em;font-weight:700}.inovex-elements-typo h2.display,.inovex-elements-typo .header-d2{font-family:Lato, Verdana, sans-serif;font-size:3.1875rem;line-height:3.875rem;letter-spacing:0.008em;font-weight:700}.inovex-elements-typo h3.display,.inovex-elements-typo .header-d3{font-family:Lato, Verdana, sans-serif;font-size:2.5rem;line-height:3.0625rem;letter-spacing:0.01em;font-weight:700}.inovex-elements-typo h1,.inovex-elements-typo .header-h1{font-family:Lato, Verdana, sans-serif;font-size:2rem;line-height:2.4375rem;letter-spacing:0.006em;font-weight:400}.inovex-elements-typo h2,.inovex-elements-typo .header-h2{font-family:Lato, Verdana, sans-serif;font-size:1.75rem;line-height:2.0625rem;letter-spacing:0.005em;font-weight:400}.inovex-elements-typo h3,.inovex-elements-typo .header-h3{font-family:Lato, Verdana, sans-serif;font-size:1.5625rem;line-height:1.875rem;letter-spacing:0.005em;font-weight:400}.inovex-elements-typo h4,.inovex-elements-typo .title-l{font-family:Lato, Verdana, sans-serif;font-size:1.25rem;line-height:1.5625rem;letter-spacing:0.009em;font-weight:600}.inovex-elements-typo h5,.inovex-elements-typo .title-m{font-family:Lato, Verdana, sans-serif;font-size:1rem;line-height:1.1875rem;letter-spacing:0.004em;font-weight:600}.inovex-elements-typo h6,.inovex-elements-typo .title-s{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1rem;letter-spacing:0.002em;font-weight:600}.inovex-elements-typo .label-l{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1.3125rem;letter-spacing:0.01em;font-weight:500}.inovex-elements-typo .label-m{font-family:Lato, Verdana, sans-serif;font-size:0.75rem;line-height:1.1875rem;letter-spacing:0.04em;font-weight:500}.inovex-elements-typo .label-s{font-family:Lato, Verdana, sans-serif;font-size:0.625rem;line-height:1rem;letter-spacing:0.04em;font-weight:500}.inovex-elements-typo .body-l{font-family:Lato, Verdana, sans-serif;font-size:1rem;line-height:1.5625rem;letter-spacing:0.009em;font-weight:400}.inovex-elements-typo .body-m{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1.375rem;letter-spacing:0.001em;font-weight:400}.inovex-elements-typo .body-s{font-family:Lato, Verdana, sans-serif;font-size:0.75rem;line-height:1.1875rem;letter-spacing:0.0014em;font-weight:400}.inovex-elements-theme{--inovex-elements-white:#fff;--inovex-elements-black:#000;--inovex-elements-transparent:rgba(255, 255, 255, 0);--inovex-elements-n-1:#f4f4f7;--inovex-elements-n-2:#dfdee6;--inovex-elements-n-3:#cac8d5;--inovex-elements-n-4:#b6b4c4;--inovex-elements-n-5:#a3a0b3;--inovex-elements-n-6:#908da2;--inovex-elements-n-7:#7e7b91;--inovex-elements-n-8:#6d6a80;--inovex-elements-n-9:#5d5b69;--inovex-elements-n-10:#4c4b52;--inovex-elements-n-11:#39383c;--inovex-elements-n-12:#191919;--inovex-elements-primary:#2c02ff;--inovex-elements-primary-focus:rgba(45, 93, 255, 0.3019607843);--inovex-elements-p-1:#f6fafe;--inovex-elements-p-2:#e2ecff;--inovex-elements-p-3:#beccff;--inovex-elements-p-4:#8aa1ff;--inovex-elements-p-5:#4655ff;--inovex-elements-p-6:#2d02ff;--inovex-elements-p-7:#1801e1;--inovex-elements-p-8:#0801c4;--inovex-elements-p-9:#0106a6;--inovex-elements-p-10:#000e88;--inovex-elements-p-11:#00126a;--inovex-elements-p-12:#00124d;--inovex-elements-informational:#2d5dff;--inovex-elements-informational-light:#d6e0ff;--inovex-elements-success:#6cf070;--inovex-elements-success-light:#d7fad8;--inovex-elements-error:#ff2e54;--inovex-elements-error-light:#ffd6de;--inovex-elements-warning:#ffa42e;--inovex-elements-warning-light:#ffeed6}","",{version:3,sources:["webpack://./../elements/dist/inovex-elements/inovex-elements.css"],names:[],mappings:"AAAA,sBAAsB,qCAAqC,CAAC,CAAC,wBAAwB,4BAA4B,CAAC,aAAa,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,kEAAkE,qCAAqC,CAAC,cAAc,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,eAAe,CAAC,kEAAkE,qCAAqC,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,eAAe,CAAC,kEAAkE,qCAAqC,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,eAAe,CAAC,0DAA0D,qCAAqC,CAAC,cAAc,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,eAAe,CAAC,0DAA0D,qCAAqC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,eAAe,CAAC,0DAA0D,qCAAqC,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,eAAe,CAAC,wDAAwD,qCAAqC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,eAAe,CAAC,wDAAwD,qCAAqC,CAAC,cAAc,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,eAAe,CAAC,wDAAwD,qCAAqC,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,eAAe,CAAC,+BAA+B,qCAAqC,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,eAAe,CAAC,+BAA+B,qCAAqC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,eAAe,CAAC,+BAA+B,qCAAqC,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,eAAe,CAAC,8BAA8B,qCAAqC,CAAC,cAAc,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,eAAe,CAAC,8BAA8B,qCAAqC,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,eAAe,CAAC,8BAA8B,qCAAqC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,eAAe,CAAC,uBAAuB,4BAA4B,CAAC,4BAA4B,CAAC,oDAAoD,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,iCAAiC,CAAC,+DAA+D,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,6BAA6B,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,uCAAuC,CAAC,6CAA6C,CAAC,iCAAiC,CAAC,uCAAuC,CAAC,+BAA+B,CAAC,qCAAqC,CAAC,iCAAiC,CAAC,uCAAuC",sourcesContent:[".inovex-elements-typo{font-family:Lato, Verdana, sans-serif;}.inovex-elements-typo a{background-color:transparent;color:#2c02ff;font-weight:bold;text-decoration:none}.inovex-elements-typo h1.display,.inovex-elements-typo .header-d1{font-family:Lato, Verdana, sans-serif;font-size:4rem;line-height:4.75rem;letter-spacing:0.005em;font-weight:700}.inovex-elements-typo h2.display,.inovex-elements-typo .header-d2{font-family:Lato, Verdana, sans-serif;font-size:3.1875rem;line-height:3.875rem;letter-spacing:0.008em;font-weight:700}.inovex-elements-typo h3.display,.inovex-elements-typo .header-d3{font-family:Lato, Verdana, sans-serif;font-size:2.5rem;line-height:3.0625rem;letter-spacing:0.01em;font-weight:700}.inovex-elements-typo h1,.inovex-elements-typo .header-h1{font-family:Lato, Verdana, sans-serif;font-size:2rem;line-height:2.4375rem;letter-spacing:0.006em;font-weight:400}.inovex-elements-typo h2,.inovex-elements-typo .header-h2{font-family:Lato, Verdana, sans-serif;font-size:1.75rem;line-height:2.0625rem;letter-spacing:0.005em;font-weight:400}.inovex-elements-typo h3,.inovex-elements-typo .header-h3{font-family:Lato, Verdana, sans-serif;font-size:1.5625rem;line-height:1.875rem;letter-spacing:0.005em;font-weight:400}.inovex-elements-typo h4,.inovex-elements-typo .title-l{font-family:Lato, Verdana, sans-serif;font-size:1.25rem;line-height:1.5625rem;letter-spacing:0.009em;font-weight:600}.inovex-elements-typo h5,.inovex-elements-typo .title-m{font-family:Lato, Verdana, sans-serif;font-size:1rem;line-height:1.1875rem;letter-spacing:0.004em;font-weight:600}.inovex-elements-typo h6,.inovex-elements-typo .title-s{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1rem;letter-spacing:0.002em;font-weight:600}.inovex-elements-typo .label-l{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1.3125rem;letter-spacing:0.01em;font-weight:500}.inovex-elements-typo .label-m{font-family:Lato, Verdana, sans-serif;font-size:0.75rem;line-height:1.1875rem;letter-spacing:0.04em;font-weight:500}.inovex-elements-typo .label-s{font-family:Lato, Verdana, sans-serif;font-size:0.625rem;line-height:1rem;letter-spacing:0.04em;font-weight:500}.inovex-elements-typo .body-l{font-family:Lato, Verdana, sans-serif;font-size:1rem;line-height:1.5625rem;letter-spacing:0.009em;font-weight:400}.inovex-elements-typo .body-m{font-family:Lato, Verdana, sans-serif;font-size:0.875rem;line-height:1.375rem;letter-spacing:0.001em;font-weight:400}.inovex-elements-typo .body-s{font-family:Lato, Verdana, sans-serif;font-size:0.75rem;line-height:1.1875rem;letter-spacing:0.0014em;font-weight:400}.inovex-elements-theme{--inovex-elements-white:#fff;--inovex-elements-black:#000;--inovex-elements-transparent:rgba(255, 255, 255, 0);--inovex-elements-n-1:#f4f4f7;--inovex-elements-n-2:#dfdee6;--inovex-elements-n-3:#cac8d5;--inovex-elements-n-4:#b6b4c4;--inovex-elements-n-5:#a3a0b3;--inovex-elements-n-6:#908da2;--inovex-elements-n-7:#7e7b91;--inovex-elements-n-8:#6d6a80;--inovex-elements-n-9:#5d5b69;--inovex-elements-n-10:#4c4b52;--inovex-elements-n-11:#39383c;--inovex-elements-n-12:#191919;--inovex-elements-primary:#2c02ff;--inovex-elements-primary-focus:rgba(45, 93, 255, 0.3019607843);--inovex-elements-p-1:#f6fafe;--inovex-elements-p-2:#e2ecff;--inovex-elements-p-3:#beccff;--inovex-elements-p-4:#8aa1ff;--inovex-elements-p-5:#4655ff;--inovex-elements-p-6:#2d02ff;--inovex-elements-p-7:#1801e1;--inovex-elements-p-8:#0801c4;--inovex-elements-p-9:#0106a6;--inovex-elements-p-10:#000e88;--inovex-elements-p-11:#00126a;--inovex-elements-p-12:#00124d;--inovex-elements-informational:#2d5dff;--inovex-elements-informational-light:#d6e0ff;--inovex-elements-success:#6cf070;--inovex-elements-success-light:#d7fad8;--inovex-elements-error:#ff2e54;--inovex-elements-error-light:#ffd6de;--inovex-elements-warning:#ffa42e;--inovex-elements-warning-light:#ffeed6}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"../elements/dist/esm/index-2ff82bb8.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{H:()=>Host,a:()=>getAssetPath,b:()=>bootstrapLazy,c:()=>createEvent,f:()=>forceUpdate,g:()=>getElement,h:()=>h,r:()=>registerInstance});let scopeId,contentRef,hostTagName,useNativeShadowDom=!1,checkSlotFallbackVisibility=!1,checkSlotRelocate=!1,isSvgMode=!1,queuePending=!1;const getAssetPath=path=>{const assetUrl=new URL(path,plt.$resourcesUrl$);return assetUrl.origin!==win.location.origin?assetUrl.href:assetUrl.pathname},XLINK_NS="http://www.w3.org/1999/xlink",EMPTY_OBJ={},isComplexType=o=>"object"===(o=typeof o)||"function"===o;function queryNonceMetaTagContent(doc){var _a,_b,_c;return null!==(_c=null===(_b=null===(_a=doc.head)||void 0===_a?void 0:_a.querySelector('meta[name="csp-nonce"]'))||void 0===_b?void 0:_b.getAttribute("content"))&&void 0!==_c?_c:void 0}const h=(nodeName,vnodeData,...children)=>{let child=null,key=null,slotName=null,simple=!1,lastSimple=!1;const vNodeChildren=[],walk=c=>{for(let i=0;i<c.length;i++)child=c[i],Array.isArray(child)?walk(child):null!=child&&"boolean"!=typeof child&&((simple="function"!=typeof nodeName&&!isComplexType(child))&&(child=String(child)),simple&&lastSimple?vNodeChildren[vNodeChildren.length-1].$text$+=child:vNodeChildren.push(simple?newVNode(null,child):child),lastSimple=simple)};if(walk(children),vnodeData){vnodeData.key&&(key=vnodeData.key),vnodeData.name&&(slotName=vnodeData.name);{const classData=vnodeData.className||vnodeData.class;classData&&(vnodeData.class="object"!=typeof classData?classData:Object.keys(classData).filter((k=>classData[k])).join(" "))}}const vnode=newVNode(nodeName,null);return vnode.$attrs$=vnodeData,vNodeChildren.length>0&&(vnode.$children$=vNodeChildren),vnode.$key$=key,vnode.$name$=slotName,vnode},newVNode=(tag,text)=>{const vnode={$flags$:0,$tag$:tag,$text$:text,$elm$:null,$children$:null,$attrs$:null,$key$:null,$name$:null};return vnode},Host={},getElement=ref=>getHostRef(ref).$hostElement$,createEvent=(ref,name,flags)=>{const elm=getElement(ref);return{emit:detail=>emitEvent(elm,name,{bubbles:!!(4&flags),composed:!!(2&flags),cancelable:!!(1&flags),detail})}},emitEvent=(elm,name,opts)=>{const ev=plt.ce(name,opts);return elm.dispatchEvent(ev),ev},rootAppliedStyles=new WeakMap,attachStyles=hostRef=>{const cmpMeta=hostRef.$cmpMeta$,elm=hostRef.$hostElement$,flags=cmpMeta.$flags$,endAttachStyles=(cmpMeta.$tagName$,()=>{}),scopeId=((styleContainerNode,cmpMeta,mode)=>{var _a;const scopeId=getScopeId(cmpMeta),style=styles.get(scopeId);if(styleContainerNode=11===styleContainerNode.nodeType?styleContainerNode:doc,style)if("string"==typeof style){styleContainerNode=styleContainerNode.head||styleContainerNode;let styleElm,appliedStyles=rootAppliedStyles.get(styleContainerNode);if(appliedStyles||rootAppliedStyles.set(styleContainerNode,appliedStyles=new Set),!appliedStyles.has(scopeId)){{styleElm=doc.createElement("style"),styleElm.innerHTML=style;const nonce=null!==(_a=plt.$nonce$)&&void 0!==_a?_a:queryNonceMetaTagContent(doc);null!=nonce&&styleElm.setAttribute("nonce",nonce),styleContainerNode.insertBefore(styleElm,styleContainerNode.querySelector("link"))}appliedStyles&&appliedStyles.add(scopeId)}}else styleContainerNode.adoptedStyleSheets.includes(style)||(styleContainerNode.adoptedStyleSheets=[...styleContainerNode.adoptedStyleSheets,style]);return scopeId})(elm.shadowRoot?elm.shadowRoot:elm.getRootNode(),cmpMeta);10&flags&&(elm["s-sc"]=scopeId,elm.classList.add(scopeId+"-h")),endAttachStyles()},getScopeId=(cmp,mode)=>"sc-"+cmp.$tagName$,setAccessor=(elm,memberName,oldValue,newValue,isSvg,flags)=>{if(oldValue!==newValue){let isProp=isMemberInElement(elm,memberName),ln=memberName.toLowerCase();if("class"===memberName){const classList=elm.classList,oldClasses=parseClassList(oldValue),newClasses=parseClassList(newValue);classList.remove(...oldClasses.filter((c=>c&&!newClasses.includes(c)))),classList.add(...newClasses.filter((c=>c&&!oldClasses.includes(c))))}else if("style"===memberName){for(const prop in oldValue)newValue&&null!=newValue[prop]||(prop.includes("-")?elm.style.removeProperty(prop):elm.style[prop]="");for(const prop in newValue)oldValue&&newValue[prop]===oldValue[prop]||(prop.includes("-")?elm.style.setProperty(prop,newValue[prop]):elm.style[prop]=newValue[prop])}else if("key"===memberName);else if("ref"===memberName)newValue&&newValue(elm);else if(isProp||"o"!==memberName[0]||"n"!==memberName[1]){const isComplex=isComplexType(newValue);if((isProp||isComplex&&null!==newValue)&&!isSvg)try{if(elm.tagName.includes("-"))elm[memberName]=newValue;else{const n=null==newValue?"":newValue;"list"===memberName?isProp=!1:null!=oldValue&&elm[memberName]==n||(elm[memberName]=n)}}catch(e){}let xlink=!1;ln!==(ln=ln.replace(/^xlink\:?/,""))&&(memberName=ln,xlink=!0),null==newValue||!1===newValue?!1===newValue&&""!==elm.getAttribute(memberName)||(xlink?elm.removeAttributeNS(XLINK_NS,memberName):elm.removeAttribute(memberName)):(!isProp||4&flags||isSvg)&&!isComplex&&(newValue=!0===newValue?"":newValue,xlink?elm.setAttributeNS(XLINK_NS,memberName,newValue):elm.setAttribute(memberName,newValue))}else memberName="-"===memberName[2]?memberName.slice(3):isMemberInElement(win,ln)?ln.slice(2):ln[2]+memberName.slice(3),oldValue&&plt.rel(elm,memberName,oldValue,!1),newValue&&plt.ael(elm,memberName,newValue,!1)}},parseClassListRegex=/\s/,parseClassList=value=>value?value.split(parseClassListRegex):[],updateElement=(oldVnode,newVnode,isSvgMode,memberName)=>{const elm=11===newVnode.$elm$.nodeType&&newVnode.$elm$.host?newVnode.$elm$.host:newVnode.$elm$,oldVnodeAttrs=oldVnode&&oldVnode.$attrs$||EMPTY_OBJ,newVnodeAttrs=newVnode.$attrs$||EMPTY_OBJ;for(memberName in oldVnodeAttrs)memberName in newVnodeAttrs||setAccessor(elm,memberName,oldVnodeAttrs[memberName],void 0,isSvgMode,newVnode.$flags$);for(memberName in newVnodeAttrs)setAccessor(elm,memberName,oldVnodeAttrs[memberName],newVnodeAttrs[memberName],isSvgMode,newVnode.$flags$)},createElm=(oldParentVNode,newParentVNode,childIndex,parentElm)=>{const newVNode=newParentVNode.$children$[childIndex];let elm,childNode,oldVNode,i=0;if(useNativeShadowDom||(checkSlotRelocate=!0,"slot"===newVNode.$tag$&&(scopeId&&parentElm.classList.add(scopeId+"-s"),newVNode.$flags$|=newVNode.$children$?2:1)),null!==newVNode.$text$)elm=newVNode.$elm$=doc.createTextNode(newVNode.$text$);else if(1&newVNode.$flags$)elm=newVNode.$elm$=doc.createTextNode("");else{if(isSvgMode||(isSvgMode="svg"===newVNode.$tag$),elm=newVNode.$elm$=doc.createElementNS(isSvgMode?"http://www.w3.org/2000/svg":"http://www.w3.org/1999/xhtml",2&newVNode.$flags$?"slot-fb":newVNode.$tag$),isSvgMode&&"foreignObject"===newVNode.$tag$&&(isSvgMode=!1),updateElement(null,newVNode,isSvgMode),null!=scopeId&&elm["s-si"]!==scopeId&&elm.classList.add(elm["s-si"]=scopeId),newVNode.$children$)for(i=0;i<newVNode.$children$.length;++i)childNode=createElm(oldParentVNode,newVNode,i,elm),childNode&&elm.appendChild(childNode);"svg"===newVNode.$tag$?isSvgMode=!1:"foreignObject"===elm.tagName&&(isSvgMode=!0)}return elm["s-hn"]=hostTagName,3&newVNode.$flags$&&(elm["s-sr"]=!0,elm["s-cr"]=contentRef,elm["s-sn"]=newVNode.$name$||"",oldVNode=oldParentVNode&&oldParentVNode.$children$&&oldParentVNode.$children$[childIndex],oldVNode&&oldVNode.$tag$===newVNode.$tag$&&oldParentVNode.$elm$&&putBackInOriginalLocation(oldParentVNode.$elm$,!1)),elm},putBackInOriginalLocation=(parentElm,recursive)=>{plt.$flags$|=1;const oldSlotChildNodes=parentElm.childNodes;for(let i=oldSlotChildNodes.length-1;i>=0;i--){const childNode=oldSlotChildNodes[i];childNode["s-hn"]!==hostTagName&&childNode["s-ol"]&&(parentReferenceNode(childNode).insertBefore(childNode,referenceNode(childNode)),childNode["s-ol"].remove(),childNode["s-ol"]=void 0,checkSlotRelocate=!0),recursive&&putBackInOriginalLocation(childNode,recursive)}plt.$flags$&=-2},addVnodes=(parentElm,before,parentVNode,vnodes,startIdx,endIdx)=>{let childNode,containerElm=parentElm["s-cr"]&&parentElm["s-cr"].parentNode||parentElm;for(containerElm.shadowRoot&&containerElm.tagName===hostTagName&&(containerElm=containerElm.shadowRoot);startIdx<=endIdx;++startIdx)vnodes[startIdx]&&(childNode=createElm(null,parentVNode,startIdx,parentElm),childNode&&(vnodes[startIdx].$elm$=childNode,containerElm.insertBefore(childNode,referenceNode(before))))},removeVnodes=(vnodes,startIdx,endIdx)=>{for(let index=startIdx;index<=endIdx;++index){const vnode=vnodes[index];if(vnode){const elm=vnode.$elm$;nullifyVNodeRefs(vnode),elm&&(checkSlotFallbackVisibility=!0,elm["s-ol"]?elm["s-ol"].remove():putBackInOriginalLocation(elm,!0),elm.remove())}}},isSameVnode=(leftVNode,rightVNode)=>leftVNode.$tag$===rightVNode.$tag$&&("slot"===leftVNode.$tag$?leftVNode.$name$===rightVNode.$name$:leftVNode.$key$===rightVNode.$key$),referenceNode=node=>node&&node["s-ol"]||node,parentReferenceNode=node=>(node["s-ol"]?node["s-ol"]:node).parentNode,patch=(oldVNode,newVNode)=>{const elm=newVNode.$elm$=oldVNode.$elm$,oldChildren=oldVNode.$children$,newChildren=newVNode.$children$,tag=newVNode.$tag$,text=newVNode.$text$;let defaultHolder;null===text?(isSvgMode="svg"===tag||"foreignObject"!==tag&&isSvgMode,"slot"===tag||updateElement(oldVNode,newVNode,isSvgMode),null!==oldChildren&&null!==newChildren?((parentElm,oldCh,newVNode,newCh)=>{let node,elmToMove,oldStartIdx=0,newStartIdx=0,idxInOld=0,i=0,oldEndIdx=oldCh.length-1,oldStartVnode=oldCh[0],oldEndVnode=oldCh[oldEndIdx],newEndIdx=newCh.length-1,newStartVnode=newCh[0],newEndVnode=newCh[newEndIdx];for(;oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx;)if(null==oldStartVnode)oldStartVnode=oldCh[++oldStartIdx];else if(null==oldEndVnode)oldEndVnode=oldCh[--oldEndIdx];else if(null==newStartVnode)newStartVnode=newCh[++newStartIdx];else if(null==newEndVnode)newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newStartVnode))patch(oldStartVnode,newStartVnode),oldStartVnode=oldCh[++oldStartIdx],newStartVnode=newCh[++newStartIdx];else if(isSameVnode(oldEndVnode,newEndVnode))patch(oldEndVnode,newEndVnode),oldEndVnode=oldCh[--oldEndIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldStartVnode,newEndVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldStartVnode.$elm$.parentNode,!1),patch(oldStartVnode,newEndVnode),parentElm.insertBefore(oldStartVnode.$elm$,oldEndVnode.$elm$.nextSibling),oldStartVnode=oldCh[++oldStartIdx],newEndVnode=newCh[--newEndIdx];else if(isSameVnode(oldEndVnode,newStartVnode))"slot"!==oldStartVnode.$tag$&&"slot"!==newEndVnode.$tag$||putBackInOriginalLocation(oldEndVnode.$elm$.parentNode,!1),patch(oldEndVnode,newStartVnode),parentElm.insertBefore(oldEndVnode.$elm$,oldStartVnode.$elm$),oldEndVnode=oldCh[--oldEndIdx],newStartVnode=newCh[++newStartIdx];else{for(idxInOld=-1,i=oldStartIdx;i<=oldEndIdx;++i)if(oldCh[i]&&null!==oldCh[i].$key$&&oldCh[i].$key$===newStartVnode.$key$){idxInOld=i;break}idxInOld>=0?(elmToMove=oldCh[idxInOld],elmToMove.$tag$!==newStartVnode.$tag$?node=createElm(oldCh&&oldCh[newStartIdx],newVNode,idxInOld,parentElm):(patch(elmToMove,newStartVnode),oldCh[idxInOld]=void 0,node=elmToMove.$elm$),newStartVnode=newCh[++newStartIdx]):(node=createElm(oldCh&&oldCh[newStartIdx],newVNode,newStartIdx,parentElm),newStartVnode=newCh[++newStartIdx]),node&&parentReferenceNode(oldStartVnode.$elm$).insertBefore(node,referenceNode(oldStartVnode.$elm$))}oldStartIdx>oldEndIdx?addVnodes(parentElm,null==newCh[newEndIdx+1]?null:newCh[newEndIdx+1].$elm$,newVNode,newCh,newStartIdx,newEndIdx):newStartIdx>newEndIdx&&removeVnodes(oldCh,oldStartIdx,oldEndIdx)})(elm,oldChildren,newVNode,newChildren):null!==newChildren?(null!==oldVNode.$text$&&(elm.textContent=""),addVnodes(elm,null,newVNode,newChildren,0,newChildren.length-1)):null!==oldChildren&&removeVnodes(oldChildren,0,oldChildren.length-1),isSvgMode&&"svg"===tag&&(isSvgMode=!1)):(defaultHolder=elm["s-cr"])?defaultHolder.parentNode.textContent=text:oldVNode.$text$!==text&&(elm.data=text)},updateFallbackSlotVisibility=elm=>{const childNodes=elm.childNodes;let childNode,i,ilen,j,slotNameAttr,nodeType;for(i=0,ilen=childNodes.length;i<ilen;i++)if(childNode=childNodes[i],1===childNode.nodeType){if(childNode["s-sr"])for(slotNameAttr=childNode["s-sn"],childNode.hidden=!1,j=0;j<ilen;j++)if(nodeType=childNodes[j].nodeType,childNodes[j]["s-hn"]!==childNode["s-hn"]||""!==slotNameAttr){if(1===nodeType&&slotNameAttr===childNodes[j].getAttribute("slot")){childNode.hidden=!0;break}}else if(1===nodeType||3===nodeType&&""!==childNodes[j].textContent.trim()){childNode.hidden=!0;break}updateFallbackSlotVisibility(childNode)}},relocateNodes=[],relocateSlotContent=elm=>{let childNode,node,hostContentNodes,slotNameAttr,relocateNodeData,j,i=0;const childNodes=elm.childNodes,ilen=childNodes.length;for(;i<ilen;i++){if(childNode=childNodes[i],childNode["s-sr"]&&(node=childNode["s-cr"])&&node.parentNode)for(hostContentNodes=node.parentNode.childNodes,slotNameAttr=childNode["s-sn"],j=hostContentNodes.length-1;j>=0;j--)node=hostContentNodes[j],node["s-cn"]||node["s-nr"]||node["s-hn"]===childNode["s-hn"]||(isNodeLocatedInSlot(node,slotNameAttr)?(relocateNodeData=relocateNodes.find((r=>r.$nodeToRelocate$===node)),checkSlotFallbackVisibility=!0,node["s-sn"]=node["s-sn"]||slotNameAttr,relocateNodeData?relocateNodeData.$slotRefNode$=childNode:relocateNodes.push({$slotRefNode$:childNode,$nodeToRelocate$:node}),node["s-sr"]&&relocateNodes.map((relocateNode=>{isNodeLocatedInSlot(relocateNode.$nodeToRelocate$,node["s-sn"])&&(relocateNodeData=relocateNodes.find((r=>r.$nodeToRelocate$===node)),relocateNodeData&&!relocateNode.$slotRefNode$&&(relocateNode.$slotRefNode$=relocateNodeData.$slotRefNode$))}))):relocateNodes.some((r=>r.$nodeToRelocate$===node))||relocateNodes.push({$nodeToRelocate$:node}));1===childNode.nodeType&&relocateSlotContent(childNode)}},isNodeLocatedInSlot=(nodeToRelocate,slotNameAttr)=>1===nodeToRelocate.nodeType?null===nodeToRelocate.getAttribute("slot")&&""===slotNameAttr||nodeToRelocate.getAttribute("slot")===slotNameAttr:nodeToRelocate["s-sn"]===slotNameAttr||""===slotNameAttr,nullifyVNodeRefs=vNode=>{vNode.$attrs$&&vNode.$attrs$.ref&&vNode.$attrs$.ref(null),vNode.$children$&&vNode.$children$.map(nullifyVNodeRefs)},renderVdom=(hostRef,renderFnResults,isInitialLoad=!1)=>{const hostElm=hostRef.$hostElement$,cmpMeta=hostRef.$cmpMeta$,oldVNode=hostRef.$vnode$||newVNode(null,null),rootVnode=(node=renderFnResults)&&node.$tag$===Host?renderFnResults:h(null,null,renderFnResults);var node;if(hostTagName=hostElm.tagName,cmpMeta.$attrsToReflect$&&(rootVnode.$attrs$=rootVnode.$attrs$||{},cmpMeta.$attrsToReflect$.map((([propName,attribute])=>rootVnode.$attrs$[attribute]=hostElm[propName]))),isInitialLoad&&rootVnode.$attrs$)for(const key of Object.keys(rootVnode.$attrs$))hostElm.hasAttribute(key)&&!["key","ref","style","class"].includes(key)&&(rootVnode.$attrs$[key]=hostElm[key]);if(rootVnode.$tag$=null,rootVnode.$flags$|=4,hostRef.$vnode$=rootVnode,rootVnode.$elm$=oldVNode.$elm$=hostElm.shadowRoot||hostElm,scopeId=hostElm["s-sc"],contentRef=hostElm["s-cr"],useNativeShadowDom=0!=(1&cmpMeta.$flags$),checkSlotFallbackVisibility=!1,patch(oldVNode,rootVnode),plt.$flags$|=1,checkSlotRelocate){let relocateData,nodeToRelocate,orgLocationNode,parentNodeRef,insertBeforeNode,refNode;relocateSlotContent(rootVnode.$elm$);let i=0;for(;i<relocateNodes.length;i++)relocateData=relocateNodes[i],nodeToRelocate=relocateData.$nodeToRelocate$,nodeToRelocate["s-ol"]||(orgLocationNode=doc.createTextNode(""),orgLocationNode["s-nr"]=nodeToRelocate,nodeToRelocate.parentNode.insertBefore(nodeToRelocate["s-ol"]=orgLocationNode,nodeToRelocate));for(i=0;i<relocateNodes.length;i++)if(relocateData=relocateNodes[i],nodeToRelocate=relocateData.$nodeToRelocate$,relocateData.$slotRefNode$){for(parentNodeRef=relocateData.$slotRefNode$.parentNode,insertBeforeNode=relocateData.$slotRefNode$.nextSibling,orgLocationNode=nodeToRelocate["s-ol"];orgLocationNode=orgLocationNode.previousSibling;)if(refNode=orgLocationNode["s-nr"],refNode&&refNode["s-sn"]===nodeToRelocate["s-sn"]&&parentNodeRef===refNode.parentNode&&(refNode=refNode.nextSibling,!refNode||!refNode["s-nr"])){insertBeforeNode=refNode;break}(!insertBeforeNode&&parentNodeRef!==nodeToRelocate.parentNode||nodeToRelocate.nextSibling!==insertBeforeNode)&&nodeToRelocate!==insertBeforeNode&&(!nodeToRelocate["s-hn"]&&nodeToRelocate["s-ol"]&&(nodeToRelocate["s-hn"]=nodeToRelocate["s-ol"].parentNode.nodeName),parentNodeRef.insertBefore(nodeToRelocate,insertBeforeNode))}else 1===nodeToRelocate.nodeType&&(nodeToRelocate.hidden=!0)}checkSlotFallbackVisibility&&updateFallbackSlotVisibility(rootVnode.$elm$),plt.$flags$&=-2,relocateNodes.length=0},attachToAncestor=(hostRef,ancestorComponent)=>{ancestorComponent&&!hostRef.$onRenderResolve$&&ancestorComponent["s-p"]&&ancestorComponent["s-p"].push(new Promise((r=>hostRef.$onRenderResolve$=r)))},scheduleUpdate=(hostRef,isInitialLoad)=>{if(hostRef.$flags$|=16,4&hostRef.$flags$)return void(hostRef.$flags$|=512);attachToAncestor(hostRef,hostRef.$ancestorComponent$);return writeTask((()=>dispatchHooks(hostRef,isInitialLoad)))},dispatchHooks=(hostRef,isInitialLoad)=>{const endSchedule=(hostRef.$cmpMeta$.$tagName$,()=>{}),instance=hostRef.$lazyInstance$;let maybePromise;return isInitialLoad&&(hostRef.$flags$|=256,hostRef.$queuedListeners$&&(hostRef.$queuedListeners$.map((([methodName,event])=>safeCall(instance,methodName,event))),hostRef.$queuedListeners$=void 0),maybePromise=safeCall(instance,"componentWillLoad")),maybePromise=enqueue(maybePromise,(()=>safeCall(instance,"componentWillRender"))),endSchedule(),enqueue(maybePromise,(()=>updateComponent(hostRef,instance,isInitialLoad)))},enqueue=(maybePromise,fn)=>isPromisey(maybePromise)?maybePromise.then(fn):fn(),isPromisey=maybePromise=>maybePromise instanceof Promise||maybePromise&&maybePromise.then&&"function"==typeof maybePromise.then,updateComponent=async(hostRef,instance,isInitialLoad)=>{var _a;const elm=hostRef.$hostElement$,endUpdate=(hostRef.$cmpMeta$.$tagName$,()=>{}),rc=elm["s-rc"];isInitialLoad&&attachStyles(hostRef);const endRender=(hostRef.$cmpMeta$.$tagName$,()=>{});callRender(hostRef,instance,elm,isInitialLoad),rc&&(rc.map((cb=>cb())),elm["s-rc"]=void 0),endRender(),endUpdate();{const childrenPromises=null!==(_a=elm["s-p"])&&void 0!==_a?_a:[],postUpdate=()=>postUpdateComponent(hostRef);0===childrenPromises.length?postUpdate():(Promise.all(childrenPromises).then(postUpdate),hostRef.$flags$|=4,childrenPromises.length=0)}},callRender=(hostRef,instance,elm,isInitialLoad)=>{try{instance=instance.render(),hostRef.$flags$&=-17,hostRef.$flags$|=2,renderVdom(hostRef,instance,isInitialLoad)}catch(e){consoleError(e,hostRef.$hostElement$)}return null},postUpdateComponent=hostRef=>{hostRef.$cmpMeta$.$tagName$;const elm=hostRef.$hostElement$,endPostUpdate=()=>{},instance=hostRef.$lazyInstance$,ancestorComponent=hostRef.$ancestorComponent$;safeCall(instance,"componentDidRender"),64&hostRef.$flags$?(safeCall(instance,"componentDidUpdate"),endPostUpdate()):(hostRef.$flags$|=64,addHydratedFlag(elm),safeCall(instance,"componentDidLoad"),endPostUpdate(),hostRef.$onReadyResolve$(elm),ancestorComponent||appDidLoad()),hostRef.$onInstanceResolve$(elm),hostRef.$onRenderResolve$&&(hostRef.$onRenderResolve$(),hostRef.$onRenderResolve$=void 0),512&hostRef.$flags$&&nextTick((()=>scheduleUpdate(hostRef,!1))),hostRef.$flags$&=-517},forceUpdate=ref=>{{const hostRef=getHostRef(ref),isConnected=hostRef.$hostElement$.isConnected;return isConnected&&2==(18&hostRef.$flags$)&&scheduleUpdate(hostRef,!1),isConnected}},appDidLoad=who=>{addHydratedFlag(doc.documentElement),nextTick((()=>emitEvent(win,"appload",{detail:{namespace:"inovex-elements"}})))},safeCall=(instance,method,arg)=>{if(instance&&instance[method])try{return instance[method](arg)}catch(e){consoleError(e)}},addHydratedFlag=elm=>elm.classList.add("hydrated"),setValue=(ref,propName,newVal,cmpMeta)=>{const hostRef=getHostRef(ref),elm=hostRef.$hostElement$,oldVal=hostRef.$instanceValues$.get(propName),flags=hostRef.$flags$,instance=hostRef.$lazyInstance$;var propValue,propType;propValue=newVal,propType=cmpMeta.$members$[propName][0],newVal=null==propValue||isComplexType(propValue)?propValue:4&propType?"false"!==propValue&&(""===propValue||!!propValue):2&propType?parseFloat(propValue):1&propType?String(propValue):propValue;const areBothNaN=Number.isNaN(oldVal)&&Number.isNaN(newVal);if((!(8&flags)||void 0===oldVal)&&(newVal!==oldVal&&!areBothNaN)&&(hostRef.$instanceValues$.set(propName,newVal),instance)){if(cmpMeta.$watchers$&&128&flags){const watchMethods=cmpMeta.$watchers$[propName];watchMethods&&watchMethods.map((watchMethodName=>{try{instance[watchMethodName](newVal,oldVal,propName)}catch(e){consoleError(e,elm)}}))}2==(18&flags)&&scheduleUpdate(hostRef,!1)}},proxyComponent=(Cstr,cmpMeta,flags)=>{var _a;if(cmpMeta.$members$){Cstr.watchers&&(cmpMeta.$watchers$=Cstr.watchers);const members=Object.entries(cmpMeta.$members$),prototype=Cstr.prototype;if(members.map((([memberName,[memberFlags]])=>{31&memberFlags||2&flags&&32&memberFlags?Object.defineProperty(prototype,memberName,{get(){return propName=memberName,getHostRef(this).$instanceValues$.get(propName);var propName},set(newValue){setValue(this,memberName,newValue,cmpMeta)},configurable:!0,enumerable:!0}):1&flags&&64&memberFlags&&Object.defineProperty(prototype,memberName,{value(...args){const ref=getHostRef(this);return ref.$onInstancePromise$.then((()=>ref.$lazyInstance$[memberName](...args)))}})})),1&flags){const attrNameToPropName=new Map;prototype.attributeChangedCallback=function(attrName,oldValue,newValue){plt.jmp((()=>{const propName=attrNameToPropName.get(attrName);if(this.hasOwnProperty(propName))newValue=this[propName],delete this[propName];else{if(prototype.hasOwnProperty(propName)&&"number"==typeof this[propName]&&this[propName]==newValue)return;if(null==propName){const hostRef=getHostRef(this),flags=null==hostRef?void 0:hostRef.$flags$;if(!(8&flags)&&128&flags&&newValue!==oldValue){const instance=hostRef.$lazyInstance$,entry=cmpMeta.$watchers$[attrName];null==entry||entry.forEach((callbackName=>{null!=instance[callbackName]&&instance[callbackName].call(instance,newValue,oldValue,attrName)}))}return}}this[propName]=(null!==newValue||"boolean"!=typeof this[propName])&&newValue}))},Cstr.observedAttributes=Array.from(new Set([...Object.keys(null!==(_a=cmpMeta.$watchers$)&&void 0!==_a?_a:{}),...members.filter((([_,m])=>15&m[0])).map((([propName,m])=>{const attrName=m[1]||propName;return attrNameToPropName.set(attrName,propName),512&m[0]&&cmpMeta.$attrsToReflect$.push([propName,attrName]),attrName}))]))}}return Cstr},initializeComponent=async(elm,hostRef,cmpMeta,hmrVersionId,Cstr)=>{if(0==(32&hostRef.$flags$)){hostRef.$flags$|=32;{if((Cstr=loadModule(cmpMeta)).then){const endLoad=()=>{};Cstr=await Cstr,endLoad()}Cstr.isProxied||(cmpMeta.$watchers$=Cstr.watchers,proxyComponent(Cstr,cmpMeta,2),Cstr.isProxied=!0);const endNewInstance=(cmpMeta.$tagName$,()=>{});hostRef.$flags$|=8;try{new Cstr(hostRef)}catch(e){consoleError(e)}hostRef.$flags$&=-9,hostRef.$flags$|=128,endNewInstance(),fireConnectedCallback(hostRef.$lazyInstance$)}if(Cstr.style){let style=Cstr.style;const scopeId=getScopeId(cmpMeta);if(!styles.has(scopeId)){const endRegisterStyles=(cmpMeta.$tagName$,()=>{});((scopeId,cssText,allowCS)=>{let style=styles.get(scopeId);supportsConstructableStylesheets&&allowCS?(style=style||new CSSStyleSheet,"string"==typeof style?style=cssText:style.replaceSync(cssText)):style=cssText,styles.set(scopeId,style)})(scopeId,style,!!(1&cmpMeta.$flags$)),endRegisterStyles()}}}const ancestorComponent=hostRef.$ancestorComponent$,schedule=()=>scheduleUpdate(hostRef,!0);ancestorComponent&&ancestorComponent["s-rc"]?ancestorComponent["s-rc"].push(schedule):schedule()},fireConnectedCallback=instance=>{safeCall(instance,"connectedCallback")},setContentReference=elm=>{const contentRefElm=elm["s-cr"]=doc.createComment("");contentRefElm["s-cn"]=!0,elm.insertBefore(contentRefElm,elm.firstChild)},disconnectInstance=instance=>{safeCall(instance,"disconnectedCallback")},bootstrapLazy=(lazyBundles,options={})=>{var _a;const endBootstrap=()=>{},cmpTags=[],exclude=options.exclude||[],customElements=win.customElements,head=doc.head,metaCharset=head.querySelector("meta[charset]"),visibilityStyle=doc.createElement("style"),deferredConnectedCallbacks=[];let appLoadFallback,isBootstrapping=!0;Object.assign(plt,options),plt.$resourcesUrl$=new URL(options.resourcesUrl||"./",doc.baseURI).href,lazyBundles.map((lazyBundle=>{lazyBundle[1].map((compactMeta=>{var _a;const cmpMeta={$flags$:compactMeta[0],$tagName$:compactMeta[1],$members$:compactMeta[2],$listeners$:compactMeta[3]};cmpMeta.$members$=compactMeta[2],cmpMeta.$listeners$=compactMeta[3],cmpMeta.$attrsToReflect$=[],cmpMeta.$watchers$=null!==(_a=compactMeta[4])&&void 0!==_a?_a:{};const tagName=cmpMeta.$tagName$,HostElement=class extends HTMLElement{constructor(self){super(self),registerHost(self=this,cmpMeta),1&cmpMeta.$flags$&&self.attachShadow({mode:"open",delegatesFocus:!!(16&cmpMeta.$flags$)})}connectedCallback(){appLoadFallback&&(clearTimeout(appLoadFallback),appLoadFallback=null),isBootstrapping?deferredConnectedCallbacks.push(this):plt.jmp((()=>(elm=>{if(0==(1&plt.$flags$)){const hostRef=getHostRef(elm),cmpMeta=hostRef.$cmpMeta$,endConnected=(cmpMeta.$tagName$,()=>{});if(1&hostRef.$flags$)addHostEventListeners(elm,hostRef,cmpMeta.$listeners$),(null==hostRef?void 0:hostRef.$lazyInstance$)?fireConnectedCallback(hostRef.$lazyInstance$):(null==hostRef?void 0:hostRef.$onReadyPromise$)&&hostRef.$onReadyPromise$.then((()=>fireConnectedCallback(hostRef.$lazyInstance$)));else{hostRef.$flags$|=1,12&cmpMeta.$flags$&&setContentReference(elm);{let ancestorComponent=elm;for(;ancestorComponent=ancestorComponent.parentNode||ancestorComponent.host;)if(ancestorComponent["s-p"]){attachToAncestor(hostRef,hostRef.$ancestorComponent$=ancestorComponent);break}}cmpMeta.$members$&&Object.entries(cmpMeta.$members$).map((([memberName,[memberFlags]])=>{if(31&memberFlags&&elm.hasOwnProperty(memberName)){const value=elm[memberName];delete elm[memberName],elm[memberName]=value}})),nextTick((()=>initializeComponent(0,hostRef,cmpMeta)))}endConnected()}})(this)))}disconnectedCallback(){plt.jmp((()=>(async elm=>{if(0==(1&plt.$flags$)){const hostRef=getHostRef(elm);hostRef.$rmListeners$&&(hostRef.$rmListeners$.map((rmListener=>rmListener())),hostRef.$rmListeners$=void 0),(null==hostRef?void 0:hostRef.$lazyInstance$)?disconnectInstance(hostRef.$lazyInstance$):(null==hostRef?void 0:hostRef.$onReadyPromise$)&&hostRef.$onReadyPromise$.then((()=>disconnectInstance(hostRef.$lazyInstance$)))}})(this)))}componentOnReady(){return getHostRef(this).$onReadyPromise$}};cmpMeta.$lazyBundleId$=lazyBundle[0],exclude.includes(tagName)||customElements.get(tagName)||(cmpTags.push(tagName),customElements.define(tagName,proxyComponent(HostElement,cmpMeta,1)))}))}));{visibilityStyle.innerHTML=cmpTags+"{visibility:hidden}.hydrated{visibility:inherit}",visibilityStyle.setAttribute("data-styles","");const nonce=null!==(_a=plt.$nonce$)&&void 0!==_a?_a:queryNonceMetaTagContent(doc);null!=nonce&&visibilityStyle.setAttribute("nonce",nonce),head.insertBefore(visibilityStyle,metaCharset?metaCharset.nextSibling:head.firstChild)}isBootstrapping=!1,deferredConnectedCallbacks.length?deferredConnectedCallbacks.map((host=>host.connectedCallback())):plt.jmp((()=>appLoadFallback=setTimeout(appDidLoad,30))),endBootstrap()},addHostEventListeners=(elm,hostRef,listeners,attachParentListeners)=>{listeners&&listeners.map((([flags,name,method])=>{const target=getHostListenerTarget(elm,flags),handler=hostListenerProxy(hostRef,method),opts=hostListenerOpts(flags);plt.ael(target,name,handler,opts),(hostRef.$rmListeners$=hostRef.$rmListeners$||[]).push((()=>plt.rel(target,name,handler,opts)))}))},hostListenerProxy=(hostRef,methodName)=>ev=>{try{256&hostRef.$flags$?hostRef.$lazyInstance$[methodName](ev):(hostRef.$queuedListeners$=hostRef.$queuedListeners$||[]).push([methodName,ev])}catch(e){consoleError(e)}},getHostListenerTarget=(elm,flags)=>16&flags?doc.body:elm,hostListenerOpts=flags=>0!=(2&flags),hostRefs=new WeakMap,getHostRef=ref=>hostRefs.get(ref),registerInstance=(lazyInstance,hostRef)=>hostRefs.set(hostRef.$lazyInstance$=lazyInstance,hostRef),registerHost=(elm,cmpMeta)=>{const hostRef={$flags$:0,$hostElement$:elm,$cmpMeta$:cmpMeta,$instanceValues$:new Map};return hostRef.$onInstancePromise$=new Promise((r=>hostRef.$onInstanceResolve$=r)),hostRef.$onReadyPromise$=new Promise((r=>hostRef.$onReadyResolve$=r)),elm["s-p"]=[],elm["s-rc"]=[],addHostEventListeners(elm,hostRef,cmpMeta.$listeners$),hostRefs.set(elm,hostRef)},isMemberInElement=(elm,memberName)=>memberName in elm,consoleError=(e,el)=>(0,console.error)(e,el),cmpModules=new Map,loadModule=(cmpMeta,hostRef,hmrVersionId)=>{const exportName=cmpMeta.$tagName$.replace(/-/g,"_"),bundleId=cmpMeta.$lazyBundleId$,module=cmpModules.get(bundleId);return module?module[exportName]:__webpack_require__("../elements/dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$")(`./${bundleId}.entry.js`).then((importedModule=>(cmpModules.set(bundleId,importedModule),importedModule[exportName])),consoleError)},styles=new Map,win="undefined"!=typeof window?window:{},doc=win.document||{head:{}},plt={$flags$:0,$resourcesUrl$:"",jmp:h=>h(),raf:h=>requestAnimationFrame(h),ael:(el,eventName,listener,opts)=>el.addEventListener(eventName,listener,opts),rel:(el,eventName,listener,opts)=>el.removeEventListener(eventName,listener,opts),ce:(eventName,opts)=>new CustomEvent(eventName,opts)},supportsConstructableStylesheets=(()=>{try{return new CSSStyleSheet,"function"==typeof(new CSSStyleSheet).replaceSync}catch(e){}return!1})(),queueDomReads=[],queueDomWrites=[],queueTask=(queue,write)=>cb=>{queue.push(cb),queuePending||(queuePending=!0,write&&4&plt.$flags$?nextTick(flush):plt.raf(flush))},consume=queue=>{for(let i=0;i<queue.length;i++)try{queue[i](performance.now())}catch(e){consoleError(e)}queue.length=0},flush=()=>{consume(queueDomReads),consume(queueDomWrites),(queuePending=queueDomReads.length>0)&&plt.raf(flush)},nextTick=cb=>{return Promise.resolve(v).then(cb);var v},writeTask=queueTask(queueDomWrites,!0)},"./config/preview.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>config_preview});var HostedFonts,index_2ff82bb8=__webpack_require__("../elements/dist/esm/index-2ff82bb8.js");!function(HostedFonts){HostedFonts.LATO="Lato"}(HostedFonts||(HostedFonts={}));const globalScripts=function addCSSToHead(){const isCSSVarLoaded=Boolean(getComputedStyle(document.documentElement).getPropertyValue("--ino-font-family")),isLatoLoaded=function checkFont(strFamily){var _a;return null===(_a=document.fonts)||void 0===_a?void 0:_a.check(`12px ${strFamily}`)}(HostedFonts.LATO);if(!isCSSVarLoaded&&!isLatoLoaded){const style=document.createElement("style");style.setAttribute("type","text/css"),style.appendChild(document.createTextNode("@import url('https://static.inovex.de/css/lato.css');")),document.head.appendChild(style)}};!function(){if("undefined"!=typeof window&&void 0!==window.Reflect&&void 0!==window.customElements){var a=HTMLElement;window.HTMLElement=function(){return Reflect.construct(a,[],this.constructor)},HTMLElement.prototype=a.prototype,HTMLElement.prototype.constructor=HTMLElement,Object.setPrototypeOf(HTMLElement,a)}}();var injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),global=__webpack_require__("../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./config/global.scss"),global_default=__webpack_require__.n(global),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(global_default(),options);global_default()&&global_default().locals&&global_default().locals;var dist=__webpack_require__("../../node_modules/@pxtrn/storybook-addon-docs-stencil/dist/index.js"),elements_stencil_docs=__webpack_require__("./elements-stencil-docs.json"),chunk_ZGA76URP=__webpack_require__("../../node_modules/@storybook/theming/dist/chunk-ZGA76URP.mjs"),runtime_injectStylesIntoStyleTag=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),runtime_injectStylesIntoStyleTag_default=__webpack_require__.n(runtime_injectStylesIntoStyleTag),runtime_styleDomAPI=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleDomAPI.js"),runtime_styleDomAPI_default=__webpack_require__.n(runtime_styleDomAPI),runtime_insertBySelector=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertBySelector.js"),runtime_insertBySelector_default=__webpack_require__.n(runtime_insertBySelector),runtime_setAttributesWithoutAttributes=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),runtime_setAttributesWithoutAttributes_default=__webpack_require__.n(runtime_setAttributesWithoutAttributes),runtime_insertStyleElement=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/insertStyleElement.js"),runtime_insertStyleElement_default=__webpack_require__.n(runtime_insertStyleElement),runtime_styleTagTransform=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/style-loader/dist/runtime/styleTagTransform.js"),runtime_styleTagTransform_default=__webpack_require__.n(runtime_styleTagTransform),inovex_elements=__webpack_require__("../../node_modules/@storybook/builder-webpack5/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[9].use[1]!../elements/dist/inovex-elements/inovex-elements.css"),inovex_elements_options={};inovex_elements_options.styleTagTransform=runtime_styleTagTransform_default(),inovex_elements_options.setAttributes=runtime_setAttributesWithoutAttributes_default(),inovex_elements_options.insert=runtime_insertBySelector_default().bind(null,"head"),inovex_elements_options.domAPI=runtime_styleDomAPI_default(),inovex_elements_options.insertStyleElement=runtime_insertStyleElement_default();runtime_injectStylesIntoStyleTag_default()(inovex_elements.Z,inovex_elements_options);inovex_elements.Z&&inovex_elements.Z.locals&&inovex_elements.Z.locals;const version=__webpack_require__("./package.json").i8,theme=(0,chunk_ZGA76URP.Ue)({base:"light",colorPrimary:"#9ccd00",colorSecondary:"#B6B4C4",appBg:"white",appContentBg:"rgba(255,255,255,0.9)",appBorderColor:"#EDEFF5",appBorderRadius:17,fontBase:'"Lato", Helvetica, Verdana',fontCode:"sans-serif",textColor:"rgba(0, 0, 0, 0.95)",textInverseColor:"rgba(255,255,255,0.9)",barTextColor:"rgba(0, 0, 0, 0.87)",barSelectedColor:"#2c02ff",barBg:"#EDEFF5",inputBg:"white",inputBorder:"rgba(0, 0, 0, 0.32)",inputTextColor:"rgba(0, 0, 0, 0.87)",inputBorderRadius:4,brandTitle:"INOVEX ELEMENTS v"+version,brandUrl:"/"});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),blocks_dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:["\n",(0,jsx_runtime.jsx)(blocks_dist.h_,{isTemplate:!0}),"\n",(0,jsx_runtime.jsx)(blocks_dist.Dx,{}),"\n",(0,jsx_runtime.jsx)(blocks_dist.dk,{}),"\n",(0,jsx_runtime.jsx)(blocks_dist.sq,{}),"\n",(0,jsx_runtime.jsx)(blocks_dist.ZX,{}),"\n",(0,jsx_runtime.jsx)(blocks_dist.fQ,{})]})}const DocumentationTemplate=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent()};elements_stencil_docs.components.forEach((c=>c.readme=null)),(0,dist.setStencilDocJson)(elements_stencil_docs),function applyPolyfills(){var promises=[];if("undefined"!=typeof window){var win=window;win.customElements&&(!win.Element||win.Element.prototype.closest&&win.Element.prototype.matches&&win.Element.prototype.remove&&win.Element.prototype.getRootNode)||promises.push(__webpack_require__.e(6748).then(__webpack_require__.t.bind(__webpack_require__,"../elements/dist/esm/polyfills/dom.js",23)));"function"==typeof Object.assign&&Object.entries&&Array.prototype.find&&Array.prototype.includes&&String.prototype.startsWith&&String.prototype.endsWith&&(!win.NodeList||win.NodeList.prototype.forEach)&&win.fetch&&function(){try{var u=new URL("b","http://a");return u.pathname="c%20d","http://a/c%20d"===u.href&&u.searchParams}catch(e){return!1}}()&&"undefined"!=typeof WeakMap||promises.push(__webpack_require__.e(2214).then(__webpack_require__.t.bind(__webpack_require__,"../elements/dist/esm/polyfills/core-js.js",23)))}return Promise.all(promises)}().then((()=>((win,options)=>{if("undefined"!=typeof window)return globalScripts(),(0,index_2ff82bb8.b)(JSON.parse('[["ino-markdown-editor",[[0,"ino-markdown-editor",{"initialValue":[1,"initial-value"],"viewMode":[1,"view-mode"],"toolbarActionsState":[32],"errorMessage":[32],"showLinkDialog":[32],"currentURL":[32],"isCreationDialog":[32],"hasValueChanged":[32]},null,{"initialValue":["handleInitialValueChange"],"viewMode":["handleViewModeChange"]}]]],["ino-control-item",[[4,"ino-control-item",{"role":[1],"text":[1],"secondaryText":[1,"secondary-text"],"selected":[4],"activated":[4],"checked":[4],"disabled":[4],"name":[1],"value":[1],"indeterminate":[4],"trailing":[4]}]]],["ino-datepicker",[[4,"ino-datepicker",{"autoFocus":[4,"autofocus"],"appendTo":[513,"append-to"],"disabled":[4],"name":[1],"placeholder":[1],"required":[4],"showLabelHint":[4,"show-label-hint"],"value":[1],"min":[1],"max":[1],"outline":[4],"label":[1],"helper":[1],"helperPersistent":[4,"helper-persistent"],"helperValidation":[4,"helper-validation"],"inline":[4],"range":[4],"attachToBody":[4,"attach-to-body"],"dateFormat":[1,"date-format"],"defaultDate":[1,"default-date"],"defaultHour":[2,"default-hour"],"defaultMinute":[2,"default-minute"],"twelveHourTime":[4,"twelve-hour-time"],"type":[1],"minuteStep":[2,"minute-step"],"hourStep":[2,"hour-step"],"error":[4],"isValid":[32],"redraw":[64],"setFocus":[64],"setBlur":[64]},[[0,"click","inoInputClickedHandler"],[0,"clickEl","iconClickedHandler"]],{"appendTo":["appendToChanged"],"value":["valueChanged"],"min":["minChanged"],"max":["maxChanged"],"range":["rangeChanged"],"disabled":["disabledOrInlineChanged"],"inline":["disabledOrInlineChanged"],"attachToBody":["attachToBodyChanged"],"dateFormat":["dateFormatChanged"],"defaultDate":["defaultDateChanged"],"defaultHour":["defaultHourChanged"],"defaultMinute":["defaultMinuteChanged"],"twelveHourTime":["twelveHourTimeChanged"],"type":["typeChanged"],"minuteStep":["minuteStepChanged"],"hourStep":["hourStepChanged"],"error":["errorHandler"]}]]],["ino-fab-set",[[1,"ino-fab-set",{"dialDirection":[1,"dial-direction"],"topBottomLocation":[1,"top-bottom-location"],"leftRightLocation":[1,"left-right-location"],"openDial":[4,"open-dial"]}]]],["ino-input-file",[[0,"ino-input-file",{"accept":[1],"autoFocus":[4,"autofocus"],"disabled":[4],"multiple":[4],"name":[1],"required":[4],"label":[1],"dragAndDrop":[4,"drag-and-drop"],"dragAndDropText":[1,"drag-and-drop-text"],"dragAndDropSecondaryText":[1,"drag-and-drop-secondary-text"]}]]],["ino-table-header-cell",[[4,"ino-table-header-cell",{"autofocus":[4],"searchIcon":[1,"search-icon"],"columnId":[1,"column-id"],"label":[1],"searched":[4],"notSortable":[4,"not-sortable"],"sortDirection":[1,"sort-direction"],"sortStart":[1,"sort-start"],"searchActivated":[32],"searchable":[32],"setSearchable":[64],"setFocus":[64],"setBlur":[64]},null,{"label":["labelChanged"]}]]],["ino-carousel",[[4,"ino-carousel",{"value":[1],"autoplay":[4],"hideButtons":[4,"hide-buttons"],"infinite":[4],"intermission":[2],"reverse":[4],"allSlides":[32]},null,{"value":["valueChanged"],"autoplay":["onTimerPropsChange"],"intermission":["onTimerPropsChange"],"reverse":["onTimerPropsChange"]}]]],["ino-menu",[[4,"ino-menu",{"placement":[1]}]]],["ino-nav-drawer",[[17,"ino-nav-drawer",{"open":[4],"anchor":[1],"variant":[1],"a11yLabels":[16]},[[0,"clickEl","handleListItemClick"]],{"open":["openChanged"],"variant":["variantChanged"]}]]],["ino-snackbar",[[4,"ino-snackbar",{"message":[1],"actionText":[1,"action-text"],"type":[1],"timeout":[2],"stayVisibleOnHover":[4,"stay-visible-on-hover"]}]]],["ino-card",[[4,"ino-card",{"selected":[4],"disableElevation":[4,"disable-elevation"]}]]],["ino-chip",[[4,"ino-chip",{"disabled":[4],"fill":[1],"label":[1],"removable":[4],"selectable":[4],"selected":[4],"value":[1],"clickable":[4]},[[0,"click","handleClick"]]]]],["ino-img",[[0,"ino-img",{"alt":[1],"decoding":[1],"height":[2],"sizes":[1],"src":[1],"srcset":[1],"width":[2],"usemap":[1],"fallbackIcon":[1,"fallback-icon"],"imgListItem":[4,"img-list-item"],"label":[1],"ratioWidth":[2,"ratio-width"],"ratioHeight":[2,"ratio-height"],"rounded":[4],"composedRatioHeight":[32]},null,{"height":["heightChanged"],"width":["widthChanged"],"ratioWidth":["ratioWidthChanged"],"ratioHeight":["ratioHeightChanged"]}]]],["ino-nav-item",[[4,"ino-nav-item",{"text":[1],"subText":[1,"sub-text"],"activated":[4],"disabled":[4]}]]],["ino-option-group",[[4,"ino-option-group",{"label":[1]}]]],["ino-select",[[4,"ino-select",{"disabled":[4],"name":[1],"required":[4],"showLabelHint":[4,"show-label-hint"],"label":[1],"outline":[4],"value":[1],"helper":[1],"helperValidation":[4,"helper-validation"],"helperPersistent":[4,"helper-persistent"],"error":[4]},[[0,"MDCSelect:change","handleInput"]],{"value":["handleValueChange"],"error":["errorHandler"]}]]],["ino-tab",[[4,"ino-tab",{"icon":[1],"label":[1],"a11yControls":[513,"a-1-1y-controls"],"a11ySelected":[516,"a-1-1y-selected"],"stacked":[4],"indicatorContentWidth":[4,"indicator-content-width"]},[[0,"MDCTab:interacted","interactionHandler"]]]]],["ino-accordion",[[4,"ino-accordion",{"expanded":[4],"accordionTitle":[1,"accordion-title"]}]]],["ino-autocomplete",[[4,"ino-autocomplete",{"debounce":[2],"noOptionsText":[1,"no-options-text"],"options":[16],"value":[1]},[[0,"selection","onItemSelect"],[0,"close","onClose"]],{"options":["onOptionsChange"],"value":["onValueChange"]}]]],["ino-avatar",[[4,"ino-avatar",{"alt":[1],"initials":[1],"src":[1],"interactive":[4],"variant":[1],"colorSecondary":[4,"color-secondary"],"a11yLabel":[1,"a-1-1y-label"],"loading":[4],"imgIsFetching":[32]},null,{"showLoading":["showLoadingHandler"]}]]],["ino-carousel-slide",[[0,"ino-carousel-slide",{"src":[1],"selected":[4],"value":[1]}]]],["ino-currency-input",[[4,"ino-currency-input",{"currencyLocale":[1,"currency-locale"],"value":[520]},null,{"value":["valueChanged"]}]]],["ino-img-list",[[4,"ino-img-list",{"masonry":[4],"encloseLabel":[4,"enclose-label"]}]]],["ino-list-divider",[[0,"ino-list-divider",{"betweenLists":[4,"between-lists"],"padded":[4],"inset":[4]}]]],["ino-progress-bar",[[1,"ino-progress-bar",{"buffer":[2],"indeterminate":[4],"label":[1],"progress":[2]},null,{"buffer":["bufferChanged"],"indeterminate":["indeterminateChanged"],"progress":["progressChanged"]}]]],["ino-radio-group",[[4,"ino-radio-group",{"value":[8],"alignment":[1]},[[0,"checkedChange","handleCheckedChange"],[1,"mouseover","handleMouseOver"],[1,"mouseout","handleMouseOut"],[0,"keydown","handleKeyDown"]],{"value":["valueChanged"]}]]],["ino-range",[[0,"ino-range",{"disabled":[4],"discrete":[4],"markers":[4],"name":[1],"min":[2],"max":[2],"value":[2],"ranged":[4],"valueStart":[2,"value-start"],"valueEnd":[2,"value-end"],"step":[2],"setValueToAriaTextMapperFn":[64]},null,{"value":["handleValueChange"],"valueEnd":["handleValueChange"],"valueStart":["handleRangedValueChanged"]}]]],["ino-segment-button",[[4,"ino-segment-button",{"checked":[4],"disabled":[4],"dense":[4],"name":[1],"value":[1],"type":[1]}]]],["ino-segment-group",[[4,"ino-segment-group",{"name":[1],"value":[8]},[[0,"checkedChange","handleCheckedChange"]],{"value":["valueChanged"]}]]],["ino-switch",[[4,"ino-switch",{"checked":[4],"disabled":[4],"name":[1]},null,{"checked":["checkedChanged"]}]]],["ino-tab-bar",[[4,"ino-tab-bar",{"activeTab":[2,"active-tab"],"autoFocus":[4,"auto-focus"]},[[0,"interacted","interactionHandler"]],{"activeTab":["activeTabChangedWatcher"]}]]],["ino-table",[[4,"ino-table",{"loading":[4],"noHover":[4,"no-hover"],"sortColumnId":[1,"sort-column-id"],"sortDirection":[1,"sort-direction"],"stickyHeader":[4,"sticky-header"]},[[0,"sortDirectionChange","sortDirectionChangedHandler"]],{"sortColumnId":["sortColumnIdChanged"],"sortDirection":["sortDirectionChanged"]}]]],["ino-fab",[[1,"ino-fab",{"icon":[1],"label":[1],"extended":[4],"edgePosition":[1,"edge-position"],"disabled":[4],"mini":[4],"tooltipPlacement":[1,"tooltip-placement"]},[[0,"click","clickHandler"]],{"label":["watchHandler"]}]]],["ino-list",[[4,"ino-list",{"dense":[4],"twoLines":[4,"two-lines"],"avatar":[4]}]]],["ino-option",[[4,"ino-option",{"disabled":[4],"selected":[4],"value":[1]},[[0,"click","clickHandler"],[0,"keydown","keydownHandler"]]]]],["ino-button_2",[[4,"ino-button",{"autoFocus":[4,"autofocus"],"disabled":[4],"name":[1],"form":[1],"type":[1],"variant":[1],"dense":[4],"loading":[516]},null,{"loading":["loadingChanged"]}],[0,"ino-spinner",{"type":[1],"modal":[4],"height":[2],"width":[2]}]]],["ino-dialog_2",[[1,"ino-dialog",{"attachTo":[1,"attach-to"],"fullwidth":[4],"dismissible":[4],"open":[4],"dialogRole":[1,"dialog-role"],"headerText":[1,"header-text"],"bodyText":[1,"body-text"],"cancelText":[1,"cancel-text"],"actionText":[1,"action-text"],"icon":[1]},[[16,"keyup","handleKeyUp"]],{"open":["openChanged"]}],[0,"ino-textarea",{"autoFocus":[4,"autofocus"],"cols":[2],"disabled":[4],"maxlength":[2],"minlength":[2],"showCharacterCounter":[4,"show-character-counter"],"name":[1],"placeholder":[1],"required":[4],"showLabelHint":[4,"show-label-hint"],"rows":[2],"value":[1],"outline":[4],"autogrow":[4],"label":[1],"setFocus":[64],"setBlur":[64]},[[0,"change","handleInput"],[0,"input","handleNativeElement"]],{"autogrow":["handleAutogrow"],"value":["handleChange"]}]]],["ino-input",[[4,"ino-input",{"autocomplete":[1],"autoFocus":[4,"auto-focus"],"dataList":[1,"data-list"],"disabled":[4],"error":[4],"helper":[1],"helperCharacterCounter":[4,"helper-character-counter"],"helperPersistent":[4,"helper-persistent"],"helperValidation":[4,"helper-validation"],"label":[1],"min":[1],"max":[1],"maxlength":[2],"name":[1],"outline":[4],"pattern":[1],"placeholder":[1],"required":[4],"showLabelHint":[4,"show-label-hint"],"step":[8],"type":[1],"unit":[1],"value":[1],"resetOnChange":[4,"reset-on-change"],"getInputElement":[64],"setFocus":[64],"setBlur":[64],"setUserInputInterceptor":[64]},[[0,"change","handleChange"],[0,"focus","focusListener"],[0,"input","handleInput"]],{"error":["errorHandler"],"value":["valueChanged"]}]]],["ino-checkbox_2",[[1,"ino-checkbox",{"checked":[4],"disabled":[4],"name":[1],"value":[1],"selection":[4],"indeterminate":[4]},null,{"checked":["checkedChanged"],"indeterminate":["indeterminateChanged"]}],[1,"ino-radio",{"checked":[4],"disabled":[4],"name":[1],"value":[1]},null,{"checked":["checkedChanged"]}]]],["ino-list-item",[[4,"ino-list-item",{"text":[1],"secondaryText":[1,"secondary-text"],"selected":[4],"activated":[4],"disabled":[4],"attrs":[16]},[[0,"keydown","handleKeyDown"],[0,"click","clickHandler"]]]]],["ino-tooltip",[[4,"ino-tooltip",{"headerText":[1,"header-text"],"colorScheme":[1,"color-scheme"],"placement":[1],"arrow":[4],"for":[1],"trigger":[1],"delay":[2],"label":[1],"getTippyInstance":[64]},null,{"placement":["onPlacementChange"],"for":["forChanged"],"delay":["onDelayChange"],"trigger":["triggerChanged"]}]]],["ino-popover",[[4,"ino-popover",{"placement":[1],"arrow":[4],"attachToBody":[4,"attach-to-body"],"for":[1],"hideOnBlur":[4,"hide-on-blur"],"hideOnEsc":[4,"hide-on-esc"],"distance":[2],"colorScheme":[1,"color-scheme"],"interactive":[4],"followCursor":[8,"follow-cursor"],"trigger":[1],"delay":[2],"controlled":[4],"visible":[4],"getTippyInstance":[64]},null,{"placement":["placementChanged"],"attachToBody":["bodyChanged"],"for":["forChanged"],"hideOnBlur":["hideOnBlurChanged"],"hideOnEsc":["hideOnEscChanged"],"distance":["distanceChanged"],"interactive":["interactiveChanged"],"followCursor":["followCursorChanged"],"trigger":["triggerChanged"],"delay":["onDelayChange"],"controlled":["controlledChanged"],"visible":["visibleChangeHandler"]}]]],["ino-icon",[[1,"ino-icon",{"icon":[1],"colorSecondary":[4,"color-secondary"],"clickable":[4],"src":[1],"svgTitle":[1,"svg-title"],"svgContent":[32]},null,{"icon":["iconChanged"],"svgContent":["watchHandler"]}]]],["ino-icon-button",[[4,"ino-icon-button",{"attrs":[16],"autoFocus":[4,"autofocus"],"disabled":[4],"activated":[4],"filled":[4],"icon":[1],"type":[1]},[[0,"click","clickHandler"]],{"activated":["activatedChanged"]}]]],["ino-label",[[0,"ino-label",{"outline":[4],"text":[1],"required":[4],"showHint":[4,"show-hint"],"disabled":[4],"for":[1]}]]]]'),options)})(window)));const config_preview={parameters:{viewMode:"docs",layout:"centered",controls:{hideNoControlsWarning:!0},docs:{extractArgTypes:dist.extractArgTypes,extractComponentDescription:dist.extractComponentDescription,theme,source:{format:"html"},toc:{contentsSelector:".sbdocs-content:not(div:has(#changelog)):not(div:has(#typography))",headingSelector:"h3",ignoreSelector:".docs-story > * :is(h3)"},page:DocumentationTemplate},options:{panelPosition:"bottom",storySort:{order:["Docs",["Welcome","Changelog","Framework Integration","Styleguide","Contributing"]]}}}}},"../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./config/global.scss":(module,exports,__webpack_require__)=>{(module.exports=__webpack_require__("../../node_modules/css-loader/lib/css-base.js")(!1)).push([module.id,"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}/*!\n  Theme: GitHub\n  Description: Light theme as seen on github.com\n  Author: github.com\n  Maintainer: @Hirse\n  Updated: 2021-05-15\n\n  Outdated base version: https://github.com/primer/github-syntax-light\n  Current colors taken from GitHub's CSS\n*/.hljs{color:#24292e;background:#fff}.hljs-doctag,.hljs-keyword,.hljs-meta .hljs-keyword,.hljs-template-tag,.hljs-template-variable,.hljs-type,.hljs-variable.language_{color:#d73a49}.hljs-title,.hljs-title.class_,.hljs-title.class_.inherited__,.hljs-title.function_{color:#6f42c1}.hljs-attr,.hljs-attribute,.hljs-literal,.hljs-meta,.hljs-number,.hljs-operator,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-id,.hljs-variable{color:#005cc5}.hljs-meta .hljs-string,.hljs-regexp,.hljs-string{color:#032f62}.hljs-built_in,.hljs-symbol{color:#e36209}.hljs-code,.hljs-comment,.hljs-formula{color:#6a737d}.hljs-name,.hljs-quote,.hljs-selector-pseudo,.hljs-selector-tag{color:#22863a}.hljs-subst{color:#24292e}.hljs-section{color:#005cc5;font-weight:700}.hljs-bullet{color:#735c0f}.hljs-emphasis{color:#24292e;font-style:italic}.hljs-strong{color:#24292e;font-weight:700}.hljs-addition{color:#22863a;background-color:#f0fff4}.hljs-deletion{color:#b31d28;background-color:#ffeef0}body,body .markdown-body{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--ino-font-family, Lato, Verdana, sans-serif);font-family:var(--mdc-typography-font-family, var(--ino-font-family, Lato, Verdana, sans-serif))}.ino-story-composer{margin:16px}.toc-list .toc-list-item{margin:6px 0 6px 20px}.toc-list .toc-list-item>a.toc-link{color:#b6b4c4}.toc-list .toc-list-item::before{border-left:2px solid #b6b4c4}.toc-list .toc-list-item.is-active-li>a.is-active-link{color:#4655ff}.toc-list .toc-list-item.is-active-li::before{border-left:2px solid #4655ff}",""])},"../../node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"../elements/dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./ino-accordion.entry.js":["../elements/dist/esm/ino-accordion.entry.js",6757],"./ino-autocomplete.entry.js":["../elements/dist/esm/ino-autocomplete.entry.js",9492],"./ino-avatar.entry.js":["../elements/dist/esm/ino-avatar.entry.js",2005],"./ino-button_2.entry.js":["../elements/dist/esm/ino-button_2.entry.js",3446],"./ino-card.entry.js":["../elements/dist/esm/ino-card.entry.js",9317],"./ino-carousel-slide.entry.js":["../elements/dist/esm/ino-carousel-slide.entry.js",6947],"./ino-carousel.entry.js":["../elements/dist/esm/ino-carousel.entry.js",8085],"./ino-checkbox_2.entry.js":["../elements/dist/esm/ino-checkbox_2.entry.js",4098,5269],"./ino-chip.entry.js":["../elements/dist/esm/ino-chip.entry.js",7235],"./ino-control-item.entry.js":["../elements/dist/esm/ino-control-item.entry.js",1557],"./ino-currency-input.entry.js":["../elements/dist/esm/ino-currency-input.entry.js",7764],"./ino-datepicker.entry.js":["../elements/dist/esm/ino-datepicker.entry.js",1083],"./ino-dialog_2.entry.js":["../elements/dist/esm/ino-dialog_2.entry.js",4098,3738,5941,2571],"./ino-fab-set.entry.js":["../elements/dist/esm/ino-fab-set.entry.js",4764],"./ino-fab.entry.js":["../elements/dist/esm/ino-fab.entry.js",4098,7786],"./ino-icon-button.entry.js":["../elements/dist/esm/ino-icon-button.entry.js",4098,645],"./ino-icon.entry.js":["../elements/dist/esm/ino-icon.entry.js",998],"./ino-img-list.entry.js":["../elements/dist/esm/ino-img-list.entry.js",7812],"./ino-img.entry.js":["../elements/dist/esm/ino-img.entry.js",1003],"./ino-input-file.entry.js":["../elements/dist/esm/ino-input-file.entry.js",8226],"./ino-input.entry.js":["../elements/dist/esm/ino-input.entry.js",4098,3738,5941,2430],"./ino-label.entry.js":["../elements/dist/esm/ino-label.entry.js",3935],"./ino-list-divider.entry.js":["../elements/dist/esm/ino-list-divider.entry.js",5938],"./ino-list-item.entry.js":["../elements/dist/esm/ino-list-item.entry.js",4098,8169],"./ino-list.entry.js":["../elements/dist/esm/ino-list.entry.js",2670,7586],"./ino-markdown-editor.entry.js":["../elements/dist/esm/ino-markdown-editor.entry.js",2722],"./ino-menu.entry.js":["../elements/dist/esm/ino-menu.entry.js",7862],"./ino-nav-drawer.entry.js":["../elements/dist/esm/ino-nav-drawer.entry.js",2670,6729],"./ino-nav-item.entry.js":["../elements/dist/esm/ino-nav-item.entry.js",9032],"./ino-option-group.entry.js":["../elements/dist/esm/ino-option-group.entry.js",6403],"./ino-option.entry.js":["../elements/dist/esm/ino-option.entry.js",1896],"./ino-popover.entry.js":["../elements/dist/esm/ino-popover.entry.js",2836,5681],"./ino-progress-bar.entry.js":["../elements/dist/esm/ino-progress-bar.entry.js",1605],"./ino-radio-group.entry.js":["../elements/dist/esm/ino-radio-group.entry.js",3484],"./ino-range.entry.js":["../elements/dist/esm/ino-range.entry.js",4098,9544],"./ino-segment-button.entry.js":["../elements/dist/esm/ino-segment-button.entry.js",1180],"./ino-segment-group.entry.js":["../elements/dist/esm/ino-segment-group.entry.js",8460],"./ino-select.entry.js":["../elements/dist/esm/ino-select.entry.js",4098,2670,3738,695],"./ino-snackbar.entry.js":["../elements/dist/esm/ino-snackbar.entry.js",4260],"./ino-switch.entry.js":["../elements/dist/esm/ino-switch.entry.js",4098,8224],"./ino-tab-bar.entry.js":["../elements/dist/esm/ino-tab-bar.entry.js",4098,9523],"./ino-tab.entry.js":["../elements/dist/esm/ino-tab.entry.js",7056],"./ino-table-header-cell.entry.js":["../elements/dist/esm/ino-table-header-cell.entry.js",5126],"./ino-table.entry.js":["../elements/dist/esm/ino-table.entry.js",198],"./ino-tooltip.entry.js":["../elements/dist/esm/ino-tooltip.entry.js",2836,4031]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="../elements/dist/esm lazy recursive ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$",module.exports=webpackAsyncContext},"./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/docs/changelog.stories.mdx":["./src/stories/docs/changelog.stories.mdx",5760],"./stories/docs/configuration.stories.mdx":["./src/stories/docs/configuration.stories.mdx",4028],"./stories/docs/contributing/01-high-level-overview.stories.mdx":["./src/stories/docs/contributing/01-high-level-overview.stories.mdx",9908],"./stories/docs/contributing/02-quick-start.stories.mdx":["./src/stories/docs/contributing/02-quick-start.stories.mdx",6941],"./stories/docs/contributing/03-team-organization.stories.mdx":["./src/stories/docs/contributing/03-team-organization.stories.mdx",2813],"./stories/docs/contributing/04-developing-components.stories.mdx":["./src/stories/docs/contributing/04-developing-components.stories.mdx",2280],"./stories/docs/contributing/05-storybook.stories.mdx":["./src/stories/docs/contributing/05-storybook.stories.mdx",4531],"./stories/docs/contributing/06-issue-tracking.stories.mdx":["./src/stories/docs/contributing/06-issue-tracking.stories.mdx",7287],"./stories/docs/contributing/07-commit-message-format.stories.mdx":["./src/stories/docs/contributing/07-commit-message-format.stories.mdx",4679],"./stories/docs/contributing/08-pull-requests.stories.mdx":["./src/stories/docs/contributing/08-pull-requests.stories.mdx",2881],"./stories/docs/contributing/09-versioning-and-releasing.stories.mdx":["./src/stories/docs/contributing/09-versioning-and-releasing.stories.mdx",3414],"./stories/docs/contributing/10-updating-dependencies.stories.mdx":["./src/stories/docs/contributing/10-updating-dependencies.stories.mdx",3581],"./stories/docs/framework-integration/angular-instructions.stories.mdx":["./src/stories/docs/framework-integration/angular-instructions.stories.mdx",6256],"./stories/docs/framework-integration/javascript-instructions.stories.mdx":["./src/stories/docs/framework-integration/javascript-instructions.stories.mdx",7615],"./stories/docs/framework-integration/react-instructions.stories.mdx":["./src/stories/docs/framework-integration/react-instructions.stories.mdx",6188],"./stories/docs/framework-integration/vue-instructions.stories.mdx":["./src/stories/docs/framework-integration/vue-instructions.stories.mdx",5571],"./stories/docs/styleguide/typography.stories.mdx":["./src/stories/docs/styleguide/typography.stories.mdx",4136],"./stories/docs/stylesheet.stories.mdx":["./src/stories/docs/stylesheet.stories.mdx",1294],"./stories/docs/welcome.stories.mdx":["./src/stories/docs/welcome.stories.mdx",2148]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return __webpack_require__.e(ids[1]).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackAsyncContext},"./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.ts)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/docs/styleguide/colors.stories":["./src/stories/docs/styleguide/colors.stories.ts",1353],"./stories/docs/styleguide/colors.stories.ts":["./src/stories/docs/styleguide/colors.stories.ts",1353],"./stories/ino-accordion/ino-accordion.stories":["./src/stories/ino-accordion/ino-accordion.stories.ts",6635,760],"./stories/ino-accordion/ino-accordion.stories.ts":["./src/stories/ino-accordion/ino-accordion.stories.ts",6635,760],"./stories/ino-autocomplete/ino-autocomplete.stories":["./src/stories/ino-autocomplete/ino-autocomplete.stories.ts",6635,7065],"./stories/ino-autocomplete/ino-autocomplete.stories.ts":["./src/stories/ino-autocomplete/ino-autocomplete.stories.ts",6635,7065],"./stories/ino-avatar/ino-avatar.stories":["./src/stories/ino-avatar/ino-avatar.stories.ts",6635,6247],"./stories/ino-avatar/ino-avatar.stories.ts":["./src/stories/ino-avatar/ino-avatar.stories.ts",6635,6247],"./stories/ino-button/ino-button.stories":["./src/stories/ino-button/ino-button.stories.ts",6635,6739],"./stories/ino-button/ino-button.stories.ts":["./src/stories/ino-button/ino-button.stories.ts",6635,6739],"./stories/ino-card/ino-card.stories":["./src/stories/ino-card/ino-card.stories.ts",6635,1620],"./stories/ino-card/ino-card.stories.ts":["./src/stories/ino-card/ino-card.stories.ts",6635,1620],"./stories/ino-carousel/ino-carousel.stories":["./src/stories/ino-carousel/ino-carousel.stories.ts",6635,3390],"./stories/ino-carousel/ino-carousel.stories.ts":["./src/stories/ino-carousel/ino-carousel.stories.ts",6635,3390],"./stories/ino-checkbox/ino-checkbox.stories":["./src/stories/ino-checkbox/ino-checkbox.stories.ts",6635,5392],"./stories/ino-checkbox/ino-checkbox.stories.ts":["./src/stories/ino-checkbox/ino-checkbox.stories.ts",6635,5392],"./stories/ino-chip/ino-chip.stories":["./src/stories/ino-chip/ino-chip.stories.ts",6635,8574],"./stories/ino-chip/ino-chip.stories.ts":["./src/stories/ino-chip/ino-chip.stories.ts",6635,8574],"./stories/ino-control-item/ino-control-item.stories":["./src/stories/ino-control-item/ino-control-item.stories.ts",6635,4639],"./stories/ino-control-item/ino-control-item.stories.ts":["./src/stories/ino-control-item/ino-control-item.stories.ts",6635,4639],"./stories/ino-currency-input/ino-currency-input.stories":["./src/stories/ino-currency-input/ino-currency-input.stories.ts",6635,1009],"./stories/ino-currency-input/ino-currency-input.stories.ts":["./src/stories/ino-currency-input/ino-currency-input.stories.ts",6635,1009],"./stories/ino-datepicker/ino-datepicker.stories":["./src/stories/ino-datepicker/ino-datepicker.stories.ts",6635,6084,2374],"./stories/ino-datepicker/ino-datepicker.stories.ts":["./src/stories/ino-datepicker/ino-datepicker.stories.ts",6635,6084,2374],"./stories/ino-dialog/ino-dialog.stories":["./src/stories/ino-dialog/ino-dialog.stories.ts",6635,2007],"./stories/ino-dialog/ino-dialog.stories.ts":["./src/stories/ino-dialog/ino-dialog.stories.ts",6635,2007],"./stories/ino-fab-set/ino-fab-set.stories":["./src/stories/ino-fab-set/ino-fab-set.stories.ts",6635,1524],"./stories/ino-fab-set/ino-fab-set.stories.ts":["./src/stories/ino-fab-set/ino-fab-set.stories.ts",6635,1524],"./stories/ino-fab/ino-fab.stories":["./src/stories/ino-fab/ino-fab.stories.ts",6635,6154],"./stories/ino-fab/ino-fab.stories.ts":["./src/stories/ino-fab/ino-fab.stories.ts",6635,6154],"./stories/ino-icon-button/ino-icon-button.stories":["./src/stories/ino-icon-button/ino-icon-button.stories.ts",6635,3273],"./stories/ino-icon-button/ino-icon-button.stories.ts":["./src/stories/ino-icon-button/ino-icon-button.stories.ts",6635,3273],"./stories/ino-icon/ino-icon.stories":["./src/stories/ino-icon/ino-icon.stories.ts",6635,2510],"./stories/ino-icon/ino-icon.stories.ts":["./src/stories/ino-icon/ino-icon.stories.ts",6635,2510],"./stories/ino-img-list/ino-img-list.stories":["./src/stories/ino-img-list/ino-img-list.stories.ts",6635,4750],"./stories/ino-img-list/ino-img-list.stories.ts":["./src/stories/ino-img-list/ino-img-list.stories.ts",6635,4750],"./stories/ino-img/ino-img.stories":["./src/stories/ino-img/ino-img.stories.ts",6635,6594],"./stories/ino-img/ino-img.stories.ts":["./src/stories/ino-img/ino-img.stories.ts",6635,6594],"./stories/ino-input-file/ino-input-file.stories":["./src/stories/ino-input-file/ino-input-file.stories.ts",6635,9307],"./stories/ino-input-file/ino-input-file.stories.ts":["./src/stories/ino-input-file/ino-input-file.stories.ts",6635,9307],"./stories/ino-input/ino-input.stories":["./src/stories/ino-input/ino-input.stories.ts",6635,6936],"./stories/ino-input/ino-input.stories.ts":["./src/stories/ino-input/ino-input.stories.ts",6635,6936],"./stories/ino-list-divider/ino-list-divider.stories":["./src/stories/ino-list-divider/ino-list-divider.stories.ts",6635,1887],"./stories/ino-list-divider/ino-list-divider.stories.ts":["./src/stories/ino-list-divider/ino-list-divider.stories.ts",6635,1887],"./stories/ino-list-item/ino-list-item.stories":["./src/stories/ino-list-item/ino-list-item.stories.ts",6635,4919],"./stories/ino-list-item/ino-list-item.stories.ts":["./src/stories/ino-list-item/ino-list-item.stories.ts",6635,4919],"./stories/ino-list/ino-list.stories":["./src/stories/ino-list/ino-list.stories.ts",6635,8021],"./stories/ino-list/ino-list.stories.ts":["./src/stories/ino-list/ino-list.stories.ts",6635,8021],"./stories/ino-markdown-editor/ino-markdown-editor.stories":["./src/stories/ino-markdown-editor/ino-markdown-editor.stories.ts",6635,7078],"./stories/ino-markdown-editor/ino-markdown-editor.stories.ts":["./src/stories/ino-markdown-editor/ino-markdown-editor.stories.ts",6635,7078],"./stories/ino-menu/ino-menu.stories":["./src/stories/ino-menu/ino-menu.stories.ts",6635,7044],"./stories/ino-menu/ino-menu.stories.ts":["./src/stories/ino-menu/ino-menu.stories.ts",6635,7044],"./stories/ino-nav-drawer/ino-nav-drawer.stories":["./src/stories/ino-nav-drawer/ino-nav-drawer.stories.ts",6635,1222],"./stories/ino-nav-drawer/ino-nav-drawer.stories.ts":["./src/stories/ino-nav-drawer/ino-nav-drawer.stories.ts",6635,1222],"./stories/ino-nav-item/ino-nav-item.stories":["./src/stories/ino-nav-item/ino-nav-item.stories.ts",6635,2732],"./stories/ino-nav-item/ino-nav-item.stories.ts":["./src/stories/ino-nav-item/ino-nav-item.stories.ts",6635,2732],"./stories/ino-option-group/ino-option-group.stories":["./src/stories/ino-option-group/ino-option-group.stories.ts",6635,6409],"./stories/ino-option-group/ino-option-group.stories.ts":["./src/stories/ino-option-group/ino-option-group.stories.ts",6635,6409],"./stories/ino-option/ino-option.stories":["./src/stories/ino-option/ino-option.stories.ts",6635,5098],"./stories/ino-option/ino-option.stories.ts":["./src/stories/ino-option/ino-option.stories.ts",6635,5098],"./stories/ino-popover/ino-popover.stories":["./src/stories/ino-popover/ino-popover.stories.ts",6635,222],"./stories/ino-popover/ino-popover.stories.ts":["./src/stories/ino-popover/ino-popover.stories.ts",6635,222],"./stories/ino-progress-bar/ino-progress-bar.stories":["./src/stories/ino-progress-bar/ino-progress-bar.stories.ts",6635,2835],"./stories/ino-progress-bar/ino-progress-bar.stories.ts":["./src/stories/ino-progress-bar/ino-progress-bar.stories.ts",6635,2835],"./stories/ino-radio-group/ino-radio-group.stories":["./src/stories/ino-radio-group/ino-radio-group.stories.ts",6635,7666],"./stories/ino-radio-group/ino-radio-group.stories.ts":["./src/stories/ino-radio-group/ino-radio-group.stories.ts",6635,7666],"./stories/ino-radio/ino-radio.stories":["./src/stories/ino-radio/ino-radio.stories.ts",6635,2948],"./stories/ino-radio/ino-radio.stories.ts":["./src/stories/ino-radio/ino-radio.stories.ts",6635,2948],"./stories/ino-range/ino-range.stories":["./src/stories/ino-range/ino-range.stories.ts",6635,2810],"./stories/ino-range/ino-range.stories.ts":["./src/stories/ino-range/ino-range.stories.ts",6635,2810],"./stories/ino-segment-button/ino-segment-button.stories":["./src/stories/ino-segment-button/ino-segment-button.stories.ts",6635,9596],"./stories/ino-segment-button/ino-segment-button.stories.ts":["./src/stories/ino-segment-button/ino-segment-button.stories.ts",6635,9596],"./stories/ino-segment-group/ino-segment-group.stories":["./src/stories/ino-segment-group/ino-segment-group.stories.ts",6635,7086],"./stories/ino-segment-group/ino-segment-group.stories.ts":["./src/stories/ino-segment-group/ino-segment-group.stories.ts",6635,7086],"./stories/ino-select/ino-select.stories":["./src/stories/ino-select/ino-select.stories.ts",6635,845],"./stories/ino-select/ino-select.stories.ts":["./src/stories/ino-select/ino-select.stories.ts",6635,845],"./stories/ino-snackbar/ino-snackbar.stories":["./src/stories/ino-snackbar/ino-snackbar.stories.ts",6635,1187],"./stories/ino-snackbar/ino-snackbar.stories.ts":["./src/stories/ino-snackbar/ino-snackbar.stories.ts",6635,1187],"./stories/ino-spinner/ino-spinner.stories":["./src/stories/ino-spinner/ino-spinner.stories.ts",6635,3790],"./stories/ino-spinner/ino-spinner.stories.ts":["./src/stories/ino-spinner/ino-spinner.stories.ts",6635,3790],"./stories/ino-switch/ino-switch.stories":["./src/stories/ino-switch/ino-switch.stories.ts",6635,7111],"./stories/ino-switch/ino-switch.stories.ts":["./src/stories/ino-switch/ino-switch.stories.ts",6635,7111],"./stories/ino-tab-bar/ino-tab-bar.stories":["./src/stories/ino-tab-bar/ino-tab-bar.stories.ts",6635,6372],"./stories/ino-tab-bar/ino-tab-bar.stories.ts":["./src/stories/ino-tab-bar/ino-tab-bar.stories.ts",6635,6372],"./stories/ino-tab/ino-tab.stories":["./src/stories/ino-tab/ino-tab.stories.ts",6635,834],"./stories/ino-tab/ino-tab.stories.ts":["./src/stories/ino-tab/ino-tab.stories.ts",6635,834],"./stories/ino-table-header-cell/ino-table-header-cell.stories":["./src/stories/ino-table-header-cell/ino-table-header-cell.stories.ts",6635,9417],"./stories/ino-table-header-cell/ino-table-header-cell.stories.ts":["./src/stories/ino-table-header-cell/ino-table-header-cell.stories.ts",6635,9417],"./stories/ino-table/ino-table.stories":["./src/stories/ino-table/ino-table.stories.ts",6635,8331],"./stories/ino-table/ino-table.stories.ts":["./src/stories/ino-table/ino-table.stories.ts",6635,8331],"./stories/ino-textarea/ino-textarea.stories":["./src/stories/ino-textarea/ino-textarea.stories.ts",6635,9034],"./stories/ino-textarea/ino-textarea.stories.ts":["./src/stories/ino-textarea/ino-textarea.stories.ts",6635,9034],"./stories/ino-tooltip/ino-tooltip.stories":["./src/stories/ino-tooltip/ino-tooltip.stories.ts",6635,2359],"./stories/ino-tooltip/ino-tooltip.stories.ts":["./src/stories/ino-tooltip/ino-tooltip.stories.ts",6635,2359]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.ts)$",module.exports=webpackAsyncContext},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels");const importers=[async path=>{if(!/^\.[\\/](?:src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.ts)$/.exec(path))return;const pathRemainder=path.substring(6);return __webpack_require__("./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.ts)$")("./"+pathRemainder)},async path=>{if(!/^\.[\\/](?:src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.mdx)$/.exec(path))return;const pathRemainder=path.substring(6);return __webpack_require__("./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$")("./"+pathRemainder)}];const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new external_STORYBOOK_MODULE_PREVIEW_API_.ClientApi({storyStore:preview.storyStore}),preview.initialize({importFn:async function importFn(path){for(let i=0;i<importers.length;i++){const moduleExports=await(x=()=>importers[i](path),x());if(moduleExports)return moduleExports}var x},getProjectAnnotations:()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("../../node_modules/@pxtrn/storybook-addon-docs-stencil/dist/config.js"),__webpack_require__("../../node_modules/@storybook/web-components/dist/entry-preview.mjs"),__webpack_require__("../../node_modules/@storybook/web-components/dist/entry-preview-docs.mjs"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/docs/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/actions/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/backgrounds/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/measure/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/outline/preview.js"),__webpack_require__("../../node_modules/@storybook/addon-essentials/dist/highlight/preview.js"),__webpack_require__("./config/preview.js")])})},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__},"./elements-stencil-docs.json":module=>{"use strict";module.exports=JSON.parse('{"compiler":{"name":"@stencil/core","version":"4.3.0","typescriptVersion":"5.1.6"},"components":[{"filePath":"src/components/ino-accordion/ino-accordion.tsx","fileName":"ino-accordion.tsx","tag":"ino-accordion","readme":"# ino-accordion\\n\\n\\n","overview":"","usage":{},"docs":"","docsTags":[{"name":"slot","text":"default - The content of the Accordion"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"accordionTitle","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"accordion-title","reflectToAttr":false,"docs":"The title of the accordion.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"expanded","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"expanded","reflectToAttr":false,"docs":"Whether the accordion is expanded or collapsed.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"expandedChange","detail":"boolean","bubbles":true,"complexType":{"original":"boolean","resolved":"boolean","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user clicks on the icon toggle to change the expanded state. Contains the status in `event.detail`.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"The content of the Accordion"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-autocomplete/ino-autocomplete.tsx","fileName":"ino-autocomplete.tsx","tag":"ino-autocomplete","readme":"# ino-autocomplete\\n\\n\\n\\n### Usage\\n\\nThe component can be used as follows:\\n\\n```html\\n\\n<ino-autocomplete timeout=\\"<number>\\" no-options-text=\\"<string>\\">\\n  <ino-input slot=\\"input\\" .../>\\n  <ino-list slot=\\"list\\" ...>\\n    <ino-option value=\\"Value of Option A\\">Option A</ino-option>\\n    <ino-option value=\\"Value of Option B\\">Option B</ino-option>\\n    <ino-option value=\\"Value of Option C\\">Option C</ino-option>\\n  </ino-list>\\n</ino-autocomplete>\\n```\\n\\n### React\\n\\n```jsx\\nimport { Component } from \'react\';\\nimport { InoAutocomplete, InoInput, InoList, InoListItem } from \'@inovex.de/elements/dist/react\';\\n\\nclass MyComponent extends Component {\\n  render() {\\n    return (\\n      <>\\n        <InoAutocomplete debounceTimeout={150} noOptionsText={\\"No option found!\\"}>\\n          <InoInput slot=\\"input\\"/>\\n          <InoList slot=\\"list\\">\\n            <InoOption value=\\"Value of Option A\\">Option A</InoOption>\\n            <InoOption value=\\"Value of Option B\\">Option B</InoOption>\\n            <InoOption value=\\"Value of Option C\\">Option C</InoOption>\\n          </InoList>\\n        </InoAutocomplete>\\n      </>\\n    );\\n  }\\n}\\n```\\n","overview":"`ino-autocomplete` is a component that acts similarly to the native `datalist` feature of the `<input>` element.\\n\\nUnlike other components, `ino-autocomplete` is stateful, meaning it maintains its own state. This makes it less\\nflexible to some extent compared to stateless components.\\n\\n## Responsibilities\\nThe component handles the following tasks:\\n- Management of the `value` property of the `<ino-input>` element.\\n- Management of showing and hiding the different options based on the input.\\n- Keyboard navigation among the options.\\n\\n## Filtering\\nThe options are filtered using `.includes(...)`, which ignores case sensitivity.","usage":{},"docs":"`ino-autocomplete` is a component that acts similarly to the native `datalist` feature of the `<input>` element.\\n\\nUnlike other components, `ino-autocomplete` is stateful, meaning it maintains its own state. This makes it less\\nflexible to some extent compared to stateless components.\\n\\n## Responsibilities\\nThe component handles the following tasks:\\n- Management of the `value` property of the `<ino-input>` element.\\n- Management of showing and hiding the different options based on the input.\\n- Keyboard navigation among the options.\\n\\n## Filtering\\nThe options are filtered using `.includes(...)`, which ignores case sensitivity.","docsTags":[{"name":"slot","text":"input - An `<ino-input>` element that will be controlled by this component"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"debounce","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"debounce","reflectToAttr":false,"docs":"Number of ms the search function should be delayed after the user typed something.","docsTags":[],"default":"100","values":[{"type":"number"}],"optional":false,"required":false},{"name":"noOptionsText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"no-options-text","reflectToAttr":false,"docs":"Text to display when there are no options found, where `$` is the placeholder for the input of the user.","docsTags":[],"default":"\'Found No Results for \\"$\\"\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"options","type":"KeyValue[] | string[]","complexType":{"original":"string[] | KeyValue[]","resolved":"KeyValue[] | string[]","references":{"KeyValue":{"location":"import","path":"../types","id":"src/components/types.ts::KeyValue"}}},"mutable":false,"reflectToAttr":false,"docs":"All options either as a string array or as an array of `{key: string; value: string}` objects.","docsTags":[],"values":[{"type":"KeyValue[]"},{"type":"string[]"}],"optional":false,"required":true},{"name":"value","type":"string | { key: string; value: string; }","complexType":{"original":"string | KeyValue | null","resolved":"string | { key: string; value: string; }","references":{"KeyValue":{"location":"import","path":"../types","id":"src/components/types.ts::KeyValue"}}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The selected value.","docsTags":[],"values":[{"type":"string"},{"type":"{ key: string; value: string; }"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"valueChange","detail":"string | { key: string; value: string; }","bubbles":true,"complexType":{"original":"string | { key: string; value: string }","resolved":"string | { key: string; value: string; }","references":{}},"cancelable":true,"composed":true,"docs":"Emits the list item the user clicked on either as a string or\\na `{key: string; value: string}` object depending on the provided options.\\n\\nTrigger on two occasions:\\n1. The user clicked on a list-item.\\n2. The user types in a string that matches an option and blurs the input","docsTags":[]}],"styles":[],"slots":[{"name":"input","docs":"An `<ino-input>` element that will be controlled by this component"}],"parts":[],"listeners":[{"event":"selection","capture":false,"passive":false},{"event":"close","capture":false,"passive":false}]},{"filePath":"src/components/ino-avatar/ino-avatar.tsx","fileName":"ino-avatar.tsx","tag":"ino-avatar","readme":"# ino-avatar\\n\\n\\n","overview":"","usage":{},"docs":"","docsTags":[{"name":"slot","text":"icon-slot - For the icon to be displayed in the avatar."}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"a11yLabel","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"a-1-1y-label","reflectToAttr":false,"docs":"The aria-label used for the avatar element.\\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"alt","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"alt","reflectToAttr":false,"docs":"The alternative text of the avatar image.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"colorSecondary","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"color-secondary","reflectToAttr":false,"docs":"Colors the border of the avatar in the secondary color.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"initials","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"initials","reflectToAttr":false,"docs":"The initials of the avatar. Will be shown if no `src` is defined or `img` fails to load.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"interactive","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"interactive","reflectToAttr":false,"docs":"Enables interactive visuals for the avatar by animating the border and a pointing cursor upon hovering the Element.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"loading","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"loading","reflectToAttr":false,"docs":"Overrides the avatar\'s loading animation behavior.\\nWhen set to true, the loading animation is displayed indefinitely.\\nWhen set to false, the avatar will not show any loading animations.\\n\\nBy default, the loading animation will be shown only while the image is being fetched.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"src","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"src","reflectToAttr":false,"docs":"The img of the avatar.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"variant","type":"\\"dashed\\" | \\"solid\\"","complexType":{"original":"\'dashed\' | \'solid\'","resolved":"\\"dashed\\" | \\"solid\\"","references":{}},"mutable":false,"attr":"variant","reflectToAttr":false,"docs":"The style variant of the avatar.\\nCan be \'dashed\' | \'solid\'.","docsTags":[],"default":"\'solid\'","values":[{"value":"dashed","type":"string"},{"value":"solid","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[{"name":"--ino-avatar-size","annotation":"prop","docs":"Width and height of the ino-avatar"}],"slots":[{"name":"icon-slot","docs":"For the icon to be displayed in the avatar."}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-button/ino-button.tsx","fileName":"ino-button.tsx","tag":"ino-button","readme":"# ino-button\\n\\n","overview":"A button component with different styles and icon capability.","usage":{},"docs":"A button component with different styles and icon capability.","docsTags":[{"name":"slot","text":"icon-leading - For the icon to be prepended"},{"name":"slot","text":"icon-trailing - For the icon to be appended"}],"encapsulation":"none","dependents":["ino-dialog","ino-input-file"],"dependencies":["ino-spinner"],"dependencyGraph":{"ino-button":["ino-spinner"],"ino-dialog":["ino-button"],"ino-input-file":["ino-button"]},"props":[{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"Sets the autofocus for this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"dense","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"dense","reflectToAttr":false,"docs":"Makes the button text and container slightly smaller.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"form","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"form","reflectToAttr":false,"docs":"The form id this element origins to.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"loading","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"loading","reflectToAttr":true,"docs":"Shows an infinite loading spinner and prevents further clicks.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of the element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"type","type":"\\"button\\" | \\"reset\\" | \\"submit\\"","complexType":{"original":"ButtonType","resolved":"\\"button\\" | \\"reset\\" | \\"submit\\"","references":{"ButtonType":{"location":"import","path":"../types","id":"src/components/types.ts::ButtonType"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of this form.\\n\\nCan either be `button`, `submit` or `reset`.","docsTags":[],"default":"\'button\'","values":[{"value":"button","type":"string"},{"value":"reset","type":"string"},{"value":"submit","type":"string"}],"optional":true,"required":false},{"name":"variant","type":"\\"filled\\" | \\"outlined\\" | \\"text\\"","complexType":{"original":"ButtonVariants","resolved":"\\"filled\\" | \\"outlined\\" | \\"text\\"","references":{"ButtonVariants":{"location":"import","path":"../types","id":"src/components/types.ts::ButtonVariants"}}},"mutable":false,"attr":"variant","reflectToAttr":false,"docs":"The button variant.\\n\\n* **filled**: Contain actions that are important for your application.\\n* **outlined**: Buttons with medium highlighting. They contain actions that are important but are not the main action in an app.\\n* **text**: Typically used for less prominent actions, including those in dialogs and cards.","docsTags":[],"default":"\'filled\'","values":[{"value":"filled","type":"string"},{"value":"outlined","type":"string"},{"value":"text","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[{"name":"icon-leading","docs":"For the icon to be prepended"},{"name":"icon-trailing","docs":"For the icon to be appended"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-card/ino-card.tsx","fileName":"ino-card.tsx","tag":"ino-card","readme":"# ino-card\\n\\n\\n","overview":"The ino-card is a flexible and extensible component. It features a header, content, and footer slot that can be used to\\nfully customize the appearance of the card.","usage":{},"docs":"The ino-card is a flexible and extensible component. It features a header, content, and footer slot that can be used to\\nfully customize the appearance of the card.","docsTags":[{"name":"slot","text":"header - For the element to be placed in the card header"},{"name":"slot","text":"content - For card content"},{"name":"slot","text":"footer - For the element to be placed in the card footer"}],"encapsulation":"none","dependents":[],"dependencies":["ino-icon"],"dependencyGraph":{"ino-card":["ino-icon"]},"props":[{"name":"disableElevation","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disable-elevation","reflectToAttr":false,"docs":"Disables the hover effect if true","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Selects the card and displays a check mark icon on top of the card","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[{"name":"--ino-card-background-color","annotation":"prop","docs":"background color of the card"},{"name":"--ino-card-background-color--active","annotation":"prop","docs":"background color of the card if active"},{"name":"--ino-card-background-color--focus","annotation":"prop","docs":"background color of the card on focus"},{"name":"--ino-card-background-color--hover","annotation":"prop","docs":"background color of the card on hover"},{"name":"--ino-card-border-color","annotation":"prop","docs":"border color of the card"},{"name":"--ino-card-border-thickness","annotation":"prop","docs":"thickness of the border"},{"name":"--ino-card-checkmark-background-color","annotation":"prop","docs":"background color of the check mark"},{"name":"--ino-card-checkmark-color","annotation":"prop","docs":"check mark color"}],"slots":[{"name":"content","docs":"For card content"},{"name":"footer","docs":"For the element to be placed in the card footer"},{"name":"header","docs":"For the element to be placed in the card header"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-carousel/ino-carousel.tsx","fileName":"ino-carousel.tsx","tag":"ino-carousel","readme":"# ino-carousel\\n\\n\\n","overview":"The `ino-carousel` component works in combination with the `ino-carousel-slide` component\\nand can be used to display an array of images as a slide show. What is more,\\nit also features an autoplay property that allows the slides to be changed automatically.\\nLastly, using the css variables described at the bottom of the page, you can easily customize\\nthe dimensions of the component as well as the duration of the slide transition.","usage":{},"docs":"The `ino-carousel` component works in combination with the `ino-carousel-slide` component\\nand can be used to display an array of images as a slide show. What is more,\\nit also features an autoplay property that allows the slides to be changed automatically.\\nLastly, using the css variables described at the bottom of the page, you can easily customize\\nthe dimensions of the component as well as the duration of the slide transition.","docsTags":[{"name":"slot","text":"default - One or more `ino-carousel-slide`"}],"encapsulation":"none","dependents":[],"dependencies":["ino-icon-button"],"dependencyGraph":{"ino-carousel":["ino-icon-button"],"ino-icon-button":["ino-icon"]},"props":[{"name":"autoplay","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autoplay","reflectToAttr":false,"docs":"Enables autoplay which causes slides to be changed automatically after `intermission` milliseconds.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"hideButtons","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"hide-buttons","reflectToAttr":false,"docs":"Hides the arrow buttons","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"infinite","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"infinite","reflectToAttr":false,"docs":"Restarts playback from the first slide upon reaching the last slide","docsTags":[],"default":"true","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"intermission","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"intermission","reflectToAttr":false,"docs":"Sets the intermission between two slides (Unit: ms)","docsTags":[],"default":"5000","values":[{"type":"number"}],"optional":false,"required":false},{"name":"reverse","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"reverse","reflectToAttr":false,"docs":"Enables reverse playback of the slides","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"`value` of the slide that should be displayed.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true}],"methods":[],"events":[{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits the `value` of the slide that should be displayed after interaction or autoplay interval.","docsTags":[]}],"styles":[{"name":"--ino-carousel-animation-duration","annotation":"prop","docs":"sets the duration of the slide animation"},{"name":"--ino-carousel-icon-color","annotation":"prop","docs":"sets the color of the navigation buttons"}],"slots":[{"name":"default","docs":"One or more `ino-carousel-slide`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-carousel-slide/ino-carousel-slide.tsx","fileName":"ino-carousel-slide.tsx","tag":"ino-carousel-slide","readme":"# ino-carousel-slide\\n\\n","overview":"An image that is shown in the `<ino-carousel>` component. Should only be used in conjunction with it.","usage":{},"docs":"An image that is shown in the `<ino-carousel>` component. Should only be used in conjunction with it.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Selected state controlled by the `<ino-carousel>`","docsTags":[],"values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"src","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"src","reflectToAttr":false,"docs":"Link to the image","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value of the slide","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-checkbox/ino-checkbox.tsx","fileName":"ino-checkbox.tsx","tag":"ino-checkbox","readme":"# ino-checkbox\\n\\n\\n","overview":"An image that is shown in the `<ino-carousel>` component. Should only be used in conjunction with it.","usage":{},"docs":"An image that is shown in the `<ino-carousel>` component. Should only be used in conjunction with it.","docsTags":[{"name":"slot","text":"default - Label of the checkbox"}],"encapsulation":"shadow","dependents":["ino-control-item"],"dependencies":[],"dependencyGraph":{"ino-control-item":["ino-checkbox"]},"props":[{"name":"checked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Marks this element as checked. (**unmanaged**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"indeterminate","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"indeterminate","reflectToAttr":false,"docs":"Marks this element as indeterminate.\\nIt indicates that a user is indeterminate without changing the checked state.\\nIf a checkbox is unchecked and indeterminate then it will lose the indeterminate state on click and change to checked.\\nFor more information, see [Documentation on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes).","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"selection","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selection","reflectToAttr":false,"docs":"Styles the checkbox as a selection variant that has a larger radius.\\nWhile checkboxes are mainly used in lists, the selection should be used as a single, independent UI element.\\nThe indeterminate state is not supported here.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"checkedChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user clicks on the checkbox to change the checked state. Contains the status in `event.detail`.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Label of the checkbox"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-chip/ino-chip.tsx","fileName":"ino-chip.tsx","tag":"ino-chip","readme":"# ino-chip\\n\\n\\n","overview":"The ino-chip component displays the provided content and icon as a chip.\\nUse the `label` attribute to set the label of the chip. To add an icon to the left side of the chip, use the `icon` attribute.\\n\\n#### Additional Hints\\n**Content**: Utilize the `label` attribute to define the chip\'s label. Include an icon on the left side of the chip via the `icon` attribute.\\n\\n**Selection**: Chips can be used for single or multi-selection among a few options. Refer to the **Selection** and **Filter** stories for examples.\\n\\n**Removable Chips**: Set `removable` to `true` to allow chip removal by the user, which will display a `close` icon on the chip\'s right side. On removal, a `removeChip` event is emitted instead of hiding or destroying the component. Handle the removal process by listening to this event.","usage":{},"docs":"The ino-chip component displays the provided content and icon as a chip.\\nUse the `label` attribute to set the label of the chip. To add an icon to the left side of the chip, use the `icon` attribute.\\n\\n#### Additional Hints\\n**Content**: Utilize the `label` attribute to define the chip\'s label. Include an icon on the left side of the chip via the `icon` attribute.\\n\\n**Selection**: Chips can be used for single or multi-selection among a few options. Refer to the **Selection** and **Filter** stories for examples.\\n\\n**Removable Chips**: Set `removable` to `true` to allow chip removal by the user, which will display a `close` icon on the chip\'s right side. On removal, a `removeChip` event is emitted instead of hiding or destroying the component. Handle the removal process by listening to this event.","docsTags":[{"name":"slot","text":"default - The label text of the chip"},{"name":"slot","text":"icon-leading - For the icon to be prepended"},{"name":"slot","text":"icon-trailing - For the icon to be appended - disables the `removable` property"}],"encapsulation":"none","dependents":[],"dependencies":["ino-icon"],"dependencyGraph":{"ino-chip":["ino-icon"]},"props":[{"name":"clickable","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"clickable","reflectToAttr":false,"docs":"Marks this element as clickable and displays all interactions like hover-effects, click-effects, pointer-cursor,...","docsTags":[],"default":"true","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables all interactions.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"fill","type":"\\"outline\\" | \\"solid\\"","complexType":{"original":"ChipSurface","resolved":"\\"outline\\" | \\"solid\\"","references":{"ChipSurface":{"location":"import","path":"../types","id":"src/components/types.ts::ChipSurface"}}},"mutable":false,"attr":"fill","reflectToAttr":false,"docs":"The fill type of this element.","docsTags":[],"default":"\'solid\'","values":[{"value":"outline","type":"string"},{"value":"solid","type":"string"}],"optional":false,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"[DEPRECATED] Please use the default slot instead\\n\\nThe content of the component.","docsTags":[{"name":"deprecated"}],"deprecation":"","values":[{"type":"string"}],"optional":false,"required":false},{"name":"removable","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"removable","reflectToAttr":false,"docs":"Adds a close icon on the right side of this chip which emits the `removeChip` event on click.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"selectable","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selectable","reflectToAttr":false,"docs":"Makes the chip selectable.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Marks this element as selected (**works only in conjunction with `selectable`**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this chip.\\nIs emitted by the `chipClicked` and `chipRemoved` events.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"chipClicked","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits the `value` as soon as the user clicks on the chip.","docsTags":[]},{"event":"chipRemoved","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits the `value` as soon as the user clicks on the remove icon.\\n\\nListen to this event to hide or destroy this chip.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"The label text of the chip"},{"name":"icon-leading","docs":"For the icon to be prepended"},{"name":"icon-trailing","docs":"For the icon to be appended - disables the `removable` property"}],"parts":[],"listeners":[{"event":"click","capture":false,"passive":false}]},{"filePath":"src/components/ino-control-item/ino-control-item.tsx","fileName":"ino-control-item.tsx","tag":"ino-control-item","readme":"# ino-control-item\\n\\n","overview":"A list item component that displays a single instance of choice in a list or menu with a control element (radio-button or checkbox). It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.\\n#### Restrictions\\nPlease note that only text is supported as a trailing element. However, your icons can be placed at the leading position. To do so, use the `trailing`-Property and declare your icon inside of the element","usage":{},"docs":"A list item component that displays a single instance of choice in a list or menu with a control element (radio-button or checkbox). It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.\\n#### Restrictions\\nPlease note that only text is supported as a trailing element. However, your icons can be placed at the leading position. To do so, use the `trailing`-Property and declare your icon inside of the element","docsTags":[{"name":"slot","text":"default - Any element"}],"encapsulation":"none","dependents":[],"dependencies":["ino-list-item","ino-checkbox","ino-radio"],"dependencyGraph":{"ino-control-item":["ino-list-item","ino-checkbox","ino-radio"]},"props":[{"name":"activated","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"activated","reflectToAttr":false,"docs":"Styles the row in an activated style.\\n\\nIn contrast to `selected`, use this for only one item\\nand to mark it as permanently activated.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"checked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Marks this element as checked. (**unmanaged**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"indeterminate","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"indeterminate","reflectToAttr":false,"docs":"Marks this element as indeterminate (**unmanaged**)\\nCheckbox only","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"role","type":"string","complexType":{"original":"string | null","resolved":"string","references":{}},"mutable":false,"attr":"role","reflectToAttr":false,"docs":"The type of control element\\n\\nValid options are \'checkbox\' or \'radio\'","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true},{"name":"secondaryText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"secondary-text","reflectToAttr":false,"docs":"Sets the secondary text of this list item.\\n\\nRequires `two-lines` on the parent `ino-list` element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Styles the row in a selected style.\\n\\nIn contrast to `activated`, use this option to select one\\nor multiple items that are likely to change soon.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"text","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"text","reflectToAttr":false,"docs":"The primary text of this list item (required).","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true},{"name":"trailing","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"trailing","reflectToAttr":false,"docs":"Places the checkbox at the end of the item","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"checkedChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user clicks on the checkbox or the list item to change the checked state. Contains the status in `event.detail`.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Any element"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-currency-input/ino-currency-input.tsx","fileName":"ino-currency-input.tsx","tag":"ino-currency-input","readme":"# ino-currency-input\\n\\n\\n","overview":"A component providing currency functionality by extending a `ino-input`. Main objectives of this component are the separatation of formatted currency values from its numeric values and to handle different currency locales.\\n\\nThe `ino-currency-input` controls an underlying `ino-input` and evaluates its value on blur. While the `ino-input` has the textual user input as value, the `ino-currency-input` provides a numeric value of the currency. In theory, you can use all `ino-input` properties. However, properties like maxlength, step, etc. make no sense for currency inputs and are thus not supported.\\n\\n#### Additional Hints\\nThe currency input uses a native number formatter which supports a vary of different locales (see [Documentation](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument)). On a component level, you can provide any supported locale via the `currency-locale` attribute.\\nHowever, it may be useful to define a global locale for currencies, This may even differ from the application\'s locale, for instance a Belgian application may use English as language but the German currency format. For this reason, you can provide the `currencyLocale` option on the global configuration.","usage":{},"docs":"A component providing currency functionality by extending a `ino-input`. Main objectives of this component are the separatation of formatted currency values from its numeric values and to handle different currency locales.\\n\\nThe `ino-currency-input` controls an underlying `ino-input` and evaluates its value on blur. While the `ino-input` has the textual user input as value, the `ino-currency-input` provides a numeric value of the currency. In theory, you can use all `ino-input` properties. However, properties like maxlength, step, etc. make no sense for currency inputs and are thus not supported.\\n\\n#### Additional Hints\\nThe currency input uses a native number formatter which supports a vary of different locales (see [Documentation](https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument)). On a component level, you can provide any supported locale via the `currency-locale` attribute.\\nHowever, it may be useful to define a global locale for currencies, This may even differ from the application\'s locale, for instance a Belgian application may use English as language but the German currency format. For this reason, you can provide the `currencyLocale` option on the global configuration.","docsTags":[{"name":"slot","text":"default - `<ino-input>` of `type=\\"text\\"`"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"currencyLocale","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"currency-locale","reflectToAttr":false,"docs":"A supported locale for currency number formatting. If not given, it uses the global config.\\nSee https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"value","type":"number | string","complexType":{"original":"number | string","resolved":"number | string","references":{}},"mutable":false,"attr":"value","reflectToAttr":true,"docs":"Numeric currency value","docsTags":[],"values":[{"type":"number"},{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"valueChange","detail":"number","bubbles":true,"complexType":{"original":"number","resolved":"number","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user types something in.\\nContains typed input in `event.detail`","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"`<ino-input>` of `type=\\"text\\"`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-datepicker/ino-datepicker.tsx","fileName":"ino-datepicker.tsx","tag":"ino-datepicker","readme":"# ino-datepicker\\n\\n\\n","overview":"A datepicker is a ui component to select dates and times. It behaves like a native `input` but uses the [flatpickr](https://github.com/flatpickr/flatpickr) library for a better ui experience.\\n\\n#### Types\\nThis datepicker can be used as a picker for different types:\\n- date\\n- time\\n- datetime\\n- month","usage":{},"docs":"A datepicker is a ui component to select dates and times. It behaves like a native `input` but uses the [flatpickr](https://github.com/flatpickr/flatpickr) library for a better ui experience.\\n\\n#### Types\\nThis datepicker can be used as a picker for different types:\\n- date\\n- time\\n- datetime\\n- month","docsTags":[{"name":"slot","text":"icon-leading - Leading `ino-icon` of the underyling ino-input (only for inline pickers)"},{"name":"slot","text":"icon-trailing - Trailing `ino-icon` of the underyling ino-input (only for inline pickers)"}],"encapsulation":"none","dependents":[],"dependencies":["ino-input","ino-icon"],"dependencyGraph":{"ino-datepicker":["ino-input","ino-icon"],"ino-input":["ino-label","ino-icon"]},"props":[{"name":"appendTo","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"append-to","reflectToAttr":true,"docs":"Optional id of an element to append the datepicker to.\\nDefault is:\\n * the host element for inline pickers\\n * body for collapsable pickers","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"attachToBody","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"attach-to-body","reflectToAttr":false,"docs":"Attach calendar overlay to body (true) or\\nPosition the calendar inside the wrapper and inside the ino-datepicker (false)","docsTags":[],"default":"true","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"Autofocuses this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"dateFormat","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"date-format","reflectToAttr":false,"docs":"A string to change the date format.\\nPossible values are listed [here](https://flatpickr.js.org/formatting/).\\nThe default value is `d-m-Y` which accepts values like `01-01-2019`.","docsTags":[],"default":"\'d-m-Y\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"defaultDate","type":"string | string[]","complexType":{"original":"string | string[]","resolved":"string | string[]","references":{}},"mutable":false,"attr":"default-date","reflectToAttr":false,"docs":"A string/array containing the initial date of the datepicker overlay. If you\'re using `inoRange = true` provide an array.\\nIf a `value` is given, this will be ignored.","docsTags":[],"values":[{"type":"string"},{"type":"string[]"}],"optional":true,"required":false},{"name":"defaultHour","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"default-hour","reflectToAttr":false,"docs":"A number containing the initial hour in the date-time picker overlay.\\nIf a `value` is given, this will be ignored.","docsTags":[],"default":"12","values":[{"type":"number"}],"optional":false,"required":false},{"name":"defaultMinute","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"default-minute","reflectToAttr":false,"docs":"A number containing the initial minute in the date-time picker overlay.\\nIf a `value` is given, this will be ignored.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"error","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"error","reflectToAttr":false,"docs":"Displays the datepicker as invalid if set to true.\\nIf the property is not set or set to false,\\nthe validation is handled by the default validation.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helper","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"helper","reflectToAttr":false,"docs":"The helper text.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"helperPersistent","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-persistent","reflectToAttr":false,"docs":"Displays the helper permanently.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helperValidation","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-validation","reflectToAttr":false,"docs":"Styles the helper text as a validation message.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"hourStep","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"hour-step","reflectToAttr":false,"docs":"Adjusts the step for the hour input (incl. scrolling)\\nDefault is 1","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":false,"required":false},{"name":"inline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"inline","reflectToAttr":false,"docs":"Displays the datepicker inlined.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Defines the label for this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"max","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"max","reflectToAttr":false,"docs":"The maximum date that a user can pick to (inclusive).","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"min","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"min","reflectToAttr":false,"docs":"The minimum date that a user can start picking from (inclusive).","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"minuteStep","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"minute-step","reflectToAttr":false,"docs":"Adjusts the step for the minute input (incl. scrolling)\\nDefault is 5","docsTags":[],"default":"5","values":[{"type":"number"}],"optional":false,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The input name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"outline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"outline","reflectToAttr":false,"docs":"Styles the datepicker as outlined element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"placeholder","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder of the input element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"range","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"range","reflectToAttr":false,"docs":"If true, enables the user to choose two dates as an interval.\\nOnly works with `type=\\"date\\"`","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Marks this element as required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"showLabelHint","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-label-hint","reflectToAttr":false,"docs":"If true, an *optional* message is displayed if not required,\\notherwise a * marker is displayed if required","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"twelveHourTime","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"twelve-hour-time","reflectToAttr":false,"docs":"If true, displays time picker in 12 hour mode with AM/PM selection.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"type","type":"\\"date\\" | \\"datetime\\" | \\"month\\" | \\"time\\"","complexType":{"original":"PickerTypeKeys","resolved":"\\"date\\" | \\"datetime\\" | \\"month\\" | \\"time\\"","references":{"PickerTypeKeys":{"location":"import","path":"./picker-factory","id":"src/components/ino-datepicker/picker-factory.ts::PickerTypeKeys"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"Selects the correct picker corresponding to the given type.","docsTags":[],"default":"\'date\'","values":[{"value":"date","type":"string"},{"value":"datetime","type":"string"},{"value":"month","type":"string"},{"value":"time","type":"string"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The currently selected date shown in the input field **unmanaged**. The given value\\nwill not be formatted as date.","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false}],"methods":[{"name":"redraw","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"redraw() => Promise<void>","parameters":[],"docs":"Redraws the datepicker.","docsTags":[]},{"name":"setBlur","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setBlur() => Promise<void>","parameters":[],"docs":"Sets blur on the native `input`.\\nUse this method instead of the global `input.blur()`.","docsTags":[]},{"name":"setFocus","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setFocus() => Promise<void>","parameters":[],"docs":"Sets focus on the native `input`.\\nUse this method instead of the global `input.focus()`.","docsTags":[]}],"events":[{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the value of the datepicker changes.\\nThe value can be found in `event.detail`","docsTags":[]}],"styles":[],"slots":[{"name":"icon-leading","docs":"Leading `ino-icon` of the underyling ino-input (only for inline pickers)"},{"name":"icon-trailing","docs":"Trailing `ino-icon` of the underyling ino-input (only for inline pickers)"}],"parts":[],"listeners":[{"event":"click","capture":false,"passive":false},{"event":"clickEl","capture":false,"passive":false}]},{"filePath":"src/components/ino-dialog/ino-dialog.tsx","fileName":"ino-dialog.tsx","tag":"ino-dialog","readme":"# ino-dialog\\n\\n","overview":"The ino-dialog component displays a modal window that can be used to display additional information or notify the user.\\nIt is based on the mdc-dialog and is fully customizable. The styling of a dialog\'s content must be provided by users.","usage":{},"docs":"The ino-dialog component displays a modal window that can be used to display additional information or notify the user.\\nIt is based on the mdc-dialog and is fully customizable. The styling of a dialog\'s content must be provided by users.","docsTags":[{"name":"slot","text":"default - content of the dialog"},{"name":"slot","text":"header - content to replace default header of dialog"},{"name":"slot","text":"body - content to replace default body of dialog"},{"name":"slot","text":"footer - content to replace default footer of dialog"}],"encapsulation":"shadow","dependents":["ino-markdown-editor"],"dependencies":["ino-icon","ino-button"],"dependencyGraph":{"ino-dialog":["ino-icon","ino-button"],"ino-button":["ino-spinner"],"ino-markdown-editor":["ino-dialog"]},"props":[{"name":"actionText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"action-text","reflectToAttr":false,"docs":"Adds a button with the given text to proceed with an action`","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"attachTo","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"attach-to","reflectToAttr":false,"docs":"The target element the dialog should be attached to.\\nIf not given, the dialog is a child of the documents body.\\nNote: This property is immutable after initialization.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"bodyText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"body-text","reflectToAttr":false,"docs":"Adds a text to the body of the `ino-dialog`","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"cancelText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"cancel-text","reflectToAttr":false,"docs":"Adds a button with the given text to close the `ino-dialog`","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"dialogRole","type":"\\"alertdialog\\" | \\"dialog\\"","complexType":{"original":"\'dialog\' | \'alertdialog\'","resolved":"\\"alertdialog\\" | \\"dialog\\"","references":{}},"mutable":false,"attr":"dialog-role","reflectToAttr":false,"docs":"The role of the dialog. Can be either \'dialog\' or \'alertdialog\'.\\nThe \'alertdialog\' role should be used for important alerts and error messages.","docsTags":[],"default":"\'dialog\'","values":[{"value":"alertdialog","type":"string"},{"value":"dialog","type":"string"}],"optional":true,"required":false},{"name":"dismissible","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"dismissible","reflectToAttr":false,"docs":"Close the dialog by clicking outside of the dialog.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"fullwidth","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"fullwidth","reflectToAttr":false,"docs":"Defines a full width dialog sliding up from the bottom of the page.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"headerText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"header-text","reflectToAttr":false,"docs":"Adds a headline to the `ino-dialog`","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"icon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"icon","reflectToAttr":false,"docs":"Adds a `ino-icon` besides the headline","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"open","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"open","reflectToAttr":false,"docs":"Opens the dialog if set to true","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"action","detail":"string","bubbles":true,"complexType":{"original":"DialogSubmitAction","resolved":"string","references":{"DialogSubmitAction":{"location":"import","path":"../types","id":"src/components/types.ts::DialogSubmitAction"}}},"cancelable":true,"composed":true,"docs":"Emits an event upon clicking the action button of the dialog","docsTags":[]},{"event":"close","detail":"string","bubbles":true,"complexType":{"original":"DialogCloseAction","resolved":"string","references":{"DialogCloseAction":{"location":"import","path":"../types","id":"src/components/types.ts::DialogCloseAction"}}},"cancelable":true,"composed":true,"docs":"Emits an event upon closing the dialog","docsTags":[]}],"styles":[{"name":"--ino-dialog-background-color","annotation":"prop","docs":"background color of the dialog"},{"name":"--ino-dialog-border","annotation":"prop","docs":"border shorthand of the dialog"},{"name":"--ino-dialog-border-radius","annotation":"prop","docs":"border-radius of the dialog"},{"name":"--ino-dialog-box-shadow","annotation":"prop","docs":"box-shadow of the dialog"},{"name":"--ino-dialog-height","annotation":"prop","docs":"height of the dialog"},{"name":"--ino-dialog-max-height","annotation":"prop","docs":"max-height of the dialog"},{"name":"--ino-dialog-max-width","annotation":"prop","docs":"max-width of the dialog"},{"name":"--ino-dialog-min-height","annotation":"prop","docs":"min-height of the dialog"},{"name":"--ino-dialog-min-width","annotation":"prop","docs":"min-width of the dialog"},{"name":"--ino-dialog-overlay-background-color","annotation":"prop","docs":"background color of the overlay"},{"name":"--ino-dialog-width","annotation":"prop","docs":"width of the dialog"}],"slots":[{"name":"body","docs":"content to replace default body of dialog"},{"name":"default","docs":"content of the dialog"},{"name":"footer","docs":"content to replace default footer of dialog"},{"name":"header","docs":"content to replace default header of dialog"}],"parts":[],"listeners":[{"event":"keyup","target":"body","capture":false,"passive":false}]},{"filePath":"src/components/ino-fab/ino-fab.tsx","fileName":"ino-fab.tsx","tag":"ino-fab","readme":"# ino-fab\\n\\n\\n","overview":"A floating action button represents the primary action in an application. [Floating Action Button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-fab) component.\\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\\n\\nFABs come in three types: regular, mini, and extended\\n\\n#### Additional Hints\\n\\n**Content**: Use the  label` attribute to set the text of a fab. To add an icon, use the  icon` attribute.","usage":{},"docs":"A floating action button represents the primary action in an application. [Floating Action Button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-fab) component.\\nIt appears in front of all screen content, typically as a circular shape with an icon in its center.\\n\\nFABs come in three types: regular, mini, and extended\\n\\n#### Additional Hints\\n\\n**Content**: Use the  label` attribute to set the text of a fab. To add an icon, use the  icon` attribute.","docsTags":[{"name":"slot","text":"icon-leading - For the icon to be prepended"}],"encapsulation":"shadow","dependents":["ino-fab-set"],"dependencies":["ino-tooltip","ino-icon"],"dependencyGraph":{"ino-fab":["ino-tooltip","ino-icon"],"ino-fab-set":["ino-fab"]},"props":[{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables the button.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"edgePosition","type":"\\"bottom-left\\" | \\"bottom-right\\" | \\"none\\" | \\"top-left\\" | \\"top-right\\"","complexType":{"original":"| \'top-right\'\\n    | \'top-left\'\\n    | \'bottom-right\'\\n    | \'bottom-left\'\\n    | \'none\'","resolved":"\\"bottom-left\\" | \\"bottom-right\\" | \\"none\\" | \\"top-left\\" | \\"top-right\\"","references":{}},"mutable":false,"attr":"edge-position","reflectToAttr":false,"docs":"The position of the edge.","docsTags":[],"default":"\'top-left\'","values":[{"value":"bottom-left","type":"string"},{"value":"bottom-right","type":"string"},{"value":"none","type":"string"},{"value":"top-left","type":"string"},{"value":"top-right","type":"string"}],"optional":false,"required":false},{"name":"extended","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"extended","reflectToAttr":false,"docs":"Optional, modifies the FAB to wider size which includes a text label.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"icon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"icon","reflectToAttr":false,"docs":"Adds an icon to the Fab.","docsTags":[{"name":"deprecated","text":"This property is deprecated and will be removed with the next major release. Instead, use the `icon-leading` slot."}],"deprecation":"This property is deprecated and will be removed with the next major release. Instead, use the `icon-leading` slot.","values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Optional, for the text label. Applicable only for Extended FAB.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"mini","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"mini","reflectToAttr":false,"docs":"Optional, modifies the FAB to a smaller size","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"tooltipPlacement","type":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"none\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","complexType":{"original":"Placement | \'none\'","resolved":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"none\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","references":{"Placement":{"location":"import","path":"tippy.js","id":"../../node_modules/tippy.js/index.d.ts::Placement"}}},"mutable":false,"attr":"tooltip-placement","reflectToAttr":false,"docs":"The placement of the tooltip which will be displayed when the button is not extended.\\nUse `none`, if you don\'t want a tooltip to be displayed.","docsTags":[],"default":"\'left\'","values":[{"value":"auto","type":"string"},{"value":"auto-end","type":"string"},{"value":"auto-start","type":"string"},{"value":"bottom","type":"string"},{"value":"bottom-end","type":"string"},{"value":"bottom-start","type":"string"},{"value":"left","type":"string"},{"value":"left-end","type":"string"},{"value":"left-start","type":"string"},{"value":"none","type":"string"},{"value":"right","type":"string"},{"value":"right-end","type":"string"},{"value":"right-start","type":"string"},{"value":"top","type":"string"},{"value":"top-end","type":"string"},{"value":"top-start","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[{"name":"--fab-background-color","annotation":"prop","docs":"Background color"},{"name":"--fab-background-color-active","annotation":"prop","docs":"Background color if active"},{"name":"--fab-background-color-disabled","annotation":"prop","docs":"Background color if disabled"},{"name":"--fab-background-color-hover","annotation":"prop","docs":"Background color on hover"},{"name":"--fab-color-disabled","annotation":"prop","docs":"Text color if disabled"},{"name":"--fab-icon-color","annotation":"prop","docs":"Color of the slotted icon"},{"name":"--fab-icon-color-disabled","annotation":"prop","docs":"Color of the slotted icon if disabled"},{"name":"--ino-fab-color","annotation":"prop","docs":"Text color"}],"slots":[{"name":"icon-leading","docs":"For the icon to be prepended"}],"parts":[],"listeners":[{"event":"click","capture":false,"passive":false}]},{"filePath":"src/components/ino-fab-set/ino-fab-set.tsx","fileName":"ino-fab-set.tsx","tag":"ino-fab-set","readme":"# ino-fab-set\\n\\n\\n","overview":"The ino-fab-set component serves as a container for multiple fab buttons. It contains actions related to the main fab\\nbutton. Upon interacting with the fab button, a FAB-Set can display three to six related actions in the form of a speed\\ndial.\\n\\n#### Additional Hints\\n**Content**: Put the FABs for the speed dial inside of `ino-fab-set` as `ino-fab`.\\n\\n#### Control flow\\n\\nThe ino-fab-set has a controlled (unmanaged) attribute `openDial`. For this reason, listen to `click` events, sync to\\nyour local state and pass the state to the component again to open/close the fab-set.","usage":{},"docs":"The ino-fab-set component serves as a container for multiple fab buttons. It contains actions related to the main fab\\nbutton. Upon interacting with the fab button, a FAB-Set can display three to six related actions in the form of a speed\\ndial.\\n\\n#### Additional Hints\\n**Content**: Put the FABs for the speed dial inside of `ino-fab-set` as `ino-fab`.\\n\\n#### Control flow\\n\\nThe ino-fab-set has a controlled (unmanaged) attribute `openDial`. For this reason, listen to `click` events, sync to\\nyour local state and pass the state to the component again to open/close the fab-set.","docsTags":[{"name":"slot","text":"default - One or more `ino-fab`"},{"name":"slot","text":"icon-opened - The icon of the FAB button while being open"},{"name":"slot","text":"icon-closed - The icon of the FAB button while being closed"}],"encapsulation":"shadow","dependents":[],"dependencies":["ino-fab","ino-icon"],"dependencyGraph":{"ino-fab-set":["ino-fab","ino-icon"],"ino-fab":["ino-tooltip","ino-icon"]},"props":[{"name":"dialDirection","type":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","complexType":{"original":"Locations","resolved":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","references":{"Locations":{"location":"import","path":"../types","id":"src/components/types.ts::Locations"}}},"mutable":false,"attr":"dial-direction","reflectToAttr":false,"docs":"The direction of the speed dial.\\nPossible values: `top` (default), `bottom`, `right`, `left`.","docsTags":[],"default":"\'top\'","values":[{"value":"bottom","type":"string"},{"value":"left","type":"string"},{"value":"right","type":"string"},{"value":"top","type":"string"}],"optional":false,"required":false},{"name":"leftRightLocation","type":"\\"left\\" | \\"right\\"","complexType":{"original":"HorizontalLocation","resolved":"\\"left\\" | \\"right\\"","references":{"HorizontalLocation":{"location":"import","path":"../types","id":"src/components/types.ts::HorizontalLocation"}}},"mutable":false,"attr":"left-right-location","reflectToAttr":false,"docs":"The side where the Fab is displayed.\\nPossible values: `right`, `left` (default).","docsTags":[],"default":"\'left\'","values":[{"value":"left","type":"string"},{"value":"right","type":"string"}],"optional":false,"required":false},{"name":"openDial","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"open-dial","reflectToAttr":false,"docs":"Opens the dial (**uncontrolled**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"topBottomLocation","type":"\\"bottom\\" | \\"top\\"","complexType":{"original":"VerticalLocation","resolved":"\\"bottom\\" | \\"top\\"","references":{"VerticalLocation":{"location":"import","path":"../types","id":"src/components/types.ts::VerticalLocation"}}},"mutable":false,"attr":"top-bottom-location","reflectToAttr":false,"docs":"The side where the Fab is displayed.\\nPossible values: `top`, `bottom` (default).","docsTags":[],"default":"\'bottom\'","values":[{"value":"bottom","type":"string"},{"value":"top","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-fab`"},{"name":"icon-closed","docs":"The icon of the FAB button while being closed"},{"name":"icon-opened","docs":"The icon of the FAB button while being open"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-icon/ino-icon.tsx","fileName":"ino-icon.tsx","tag":"ino-icon","readme":"# ino-icon\\n\\n\\n","overview":"A light icon component for texts and other components.\\nThis component is based on the ionicons (https://github.com/ionic-team/ionicons)\\n\\n#### Additional Hints\\nThe component inherits styles, such as the text size, from the parent element. For custom styles, use the css properties of the component.\\n\\n**Clickable icon:** Make an icon interactive with the optional attribute `clickable`. Clickable icons emit a `clickEl` event.\\n\\n#### Add icons\\nIf you would like to add custom icons, you have to add the `.svg` file to the `src/assets/ino-icon` folder and run the `yarn integrate:icons` script which takes care of the rest.\\n\\n> **Note:** To use the provided icons in your consumer project, you need to copy all contents of\\n> `node_modules/@inovex.de/elements/dist/inovex-elements/ino-icon` into your `dist/ino-icon` folder. All icons are expected\\n> to be located in `ino-icon/` at runtime. Please refer to the Storybook documentation to get detailed instructions\\n> on how to integrate the icons with Angular, React or plain JavaScript.\\n\\nAlternatively, you can also just provide the URL to your preferred icon by setting the `src` property accordingly.","usage":{},"docs":"A light icon component for texts and other components.\\nThis component is based on the ionicons (https://github.com/ionic-team/ionicons)\\n\\n#### Additional Hints\\nThe component inherits styles, such as the text size, from the parent element. For custom styles, use the css properties of the component.\\n\\n**Clickable icon:** Make an icon interactive with the optional attribute `clickable`. Clickable icons emit a `clickEl` event.\\n\\n#### Add icons\\nIf you would like to add custom icons, you have to add the `.svg` file to the `src/assets/ino-icon` folder and run the `yarn integrate:icons` script which takes care of the rest.\\n\\n> **Note:** To use the provided icons in your consumer project, you need to copy all contents of\\n> `node_modules/@inovex.de/elements/dist/inovex-elements/ino-icon` into your `dist/ino-icon` folder. All icons are expected\\n> to be located in `ino-icon/` at runtime. Please refer to the Storybook documentation to get detailed instructions\\n> on how to integrate the icons with Angular, React or plain JavaScript.\\n\\nAlternatively, you can also just provide the URL to your preferred icon by setting the `src` property accordingly.","docsTags":[],"encapsulation":"shadow","dependents":["ino-card","ino-chip","ino-datepicker","ino-dialog","ino-fab","ino-fab-set","ino-icon-button","ino-img","ino-input","ino-input-file","ino-markdown-editor","ino-snackbar","ino-tab","ino-table-header-cell"],"dependencies":[],"dependencyGraph":{"ino-card":["ino-icon"],"ino-chip":["ino-icon"],"ino-datepicker":["ino-icon"],"ino-dialog":["ino-icon"],"ino-fab":["ino-icon"],"ino-fab-set":["ino-icon"],"ino-icon-button":["ino-icon"],"ino-img":["ino-icon"],"ino-input":["ino-icon"],"ino-input-file":["ino-icon"],"ino-markdown-editor":["ino-icon"],"ino-snackbar":["ino-icon"],"ino-tab":["ino-icon"],"ino-table-header-cell":["ino-icon"]},"props":[{"name":"clickable","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"clickable","reflectToAttr":false,"docs":"Makes the icon clickable and allows to listen to the `clickEl` event.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"colorSecondary","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"color-secondary","reflectToAttr":false,"docs":"Colors the icon in the global secondary color","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"icon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"icon","reflectToAttr":false,"docs":"The name of the icon of this element or an URL.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"src","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"src","reflectToAttr":false,"docs":"Specifies the exact `src` of an SVG file to use.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"svgTitle","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"svg-title","reflectToAttr":false,"docs":"Sets a meaningful svg title for assistive technologies.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"clickEl","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits as soon as the user clicks on the icon.\\nThe event only emits if the property `inoClickable` is true.","docsTags":[]}],"styles":[{"name":"--ino-icon-color","annotation":"prop","docs":"Color of the icon"},{"name":"--ino-icon-height","annotation":"prop","docs":"Height of the icon"},{"name":"--ino-icon-width","annotation":"prop","docs":"Width of the icon"}],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-icon-button/ino-icon-button.tsx","fileName":"ino-icon-button.tsx","tag":"ino-icon-button","readme":"# ino-icon-button\\n\\n\\n","overview":"\\nA rounded button component that contains an icon. It functions as a wrapper around the material [icon-button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-button) component.\\n\\n## Additional Hints\\n**Toggle Button**: To use the ino-icon-button as a toggle button the user can listen to the native `click`-Event and change the icon in the `icon`-Attribute.","usage":{},"docs":"\\nA rounded button component that contains an icon. It functions as a wrapper around the material [icon-button](https://github.com/material-components/material-components-web/tree/master/packages/mdc-icon-button) component.\\n\\n## Additional Hints\\n**Toggle Button**: To use the ino-icon-button as a toggle button the user can listen to the native `click`-Event and change the icon in the `icon`-Attribute.","docsTags":[{"name":"slot","text":"default - `<ino-icon>`"}],"encapsulation":"none","dependents":["ino-carousel","ino-markdown-editor","ino-nav-drawer","ino-snackbar","ino-table-header-cell"],"dependencies":["ino-icon"],"dependencyGraph":{"ino-icon-button":["ino-icon"],"ino-carousel":["ino-icon-button"],"ino-markdown-editor":["ino-icon-button"],"ino-nav-drawer":["ino-icon-button"],"ino-snackbar":["ino-icon-button"],"ino-table-header-cell":["ino-icon-button"]},"props":[{"name":"activated","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"activated","reflectToAttr":false,"docs":"Marks the icon button as activated.\\n\\nUseful in cases where an external state controls the icon button activation.\\nMakes the component **managed**.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"attrs","type":"HTMLAttributes<HTMLButtonElement> & Partial<ARIAMixin>","complexType":{"original":"JSXBase.HTMLAttributes<HTMLButtonElement> & Partial<ARIAMixin>","resolved":"HTMLAttributes<HTMLButtonElement> & Partial<ARIAMixin>","references":{"JSXBase":{"location":"global","id":"global::JSXBase"},"HTMLButtonElement":{"location":"global","id":"global::HTMLButtonElement"},"Partial":{"location":"global","id":"global::Partial"},"ARIAMixin":{"location":"global","id":"global::ARIAMixin"}}},"mutable":false,"reflectToAttr":false,"docs":"Allows the specification of native HTML attributes on the underlying HTML element","docsTags":[],"values":[{"type":"HTMLAttributes<HTMLButtonElement> & Partial<ARIAMixin>"}],"optional":false,"required":false},{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"Sets the autofocus for this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"filled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"filled","reflectToAttr":false,"docs":"Styles this element as filled icon button\\nwith the `ino-color-scheme` as background color.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"icon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"icon","reflectToAttr":false,"docs":"The name of the icon of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"type","type":"\\"button\\" | \\"reset\\" | \\"submit\\"","complexType":{"original":"ButtonType","resolved":"\\"button\\" | \\"reset\\" | \\"submit\\"","references":{"ButtonType":{"location":"import","path":"../types","id":"src/components/types.ts::ButtonType"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of this form.\\n\\nCan either be `button`, `submit` or `reset`.","docsTags":[],"default":"\'button\'","values":[{"value":"button","type":"string"},{"value":"reset","type":"string"},{"value":"submit","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"clickEl","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits as soon as the user clicks on the icon.\\nThe event only emits if the property `clickable` is true.","docsTags":[]}],"styles":[{"name":"--ino-icon-button-background-active-color","annotation":"prop","docs":"base color of the active background"},{"name":"--ino-icon-button-background-color","annotation":"prop","docs":"default color of the background"},{"name":"--ino-icon-button-background-disabled-color","annotation":"prop","docs":"base color of the background in disabled state"},{"name":"--ino-icon-button-icon-active-color","annotation":"prop","docs":"color of the active icon itself"},{"name":"--ino-icon-button-icon-color","annotation":"prop","docs":"default color of the icon itself"},{"name":"--ino-icon-button-icon-disabled-color","annotation":"prop","docs":"color of the icon itself in disabled state"},{"name":"--ino-icon-button-icon-size","annotation":"prop","docs":"size of the icon itself"},{"name":"--ino-icon-button-size","annotation":"prop","docs":"size of the entire button"}],"slots":[{"name":"default","docs":"`<ino-icon>`"}],"parts":[],"listeners":[{"event":"click","capture":false,"passive":false}]},{"filePath":"src/components/ino-img/ino-img.tsx","fileName":"ino-img.tsx","tag":"ino-img","readme":"# ino-img\\n\\n","overview":"An image component with different styles that reserves a predefined space to avoid jumping contents.","usage":{},"docs":"An image component with different styles that reserves a predefined space to avoid jumping contents.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":["ino-icon"],"dependencyGraph":{"ino-img":["ino-icon"]},"props":[{"name":"alt","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"alt","reflectToAttr":false,"docs":"The alternative text of this image.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"decoding","type":"\\"async\\" | \\"auto\\" | \\"sync\\"","complexType":{"original":"ImageDecodingTypes","resolved":"\\"async\\" | \\"auto\\" | \\"sync\\"","references":{"ImageDecodingTypes":{"location":"import","path":"../types","id":"src/components/types.ts::ImageDecodingTypes"}}},"mutable":false,"attr":"decoding","reflectToAttr":false,"docs":"The decoding method of the native html input element.\\nCan either be `async`, `auto` or `sync`.","docsTags":[],"values":[{"value":"async","type":"string"},{"value":"auto","type":"string"},{"value":"sync","type":"string"}],"optional":true,"required":false},{"name":"fallbackIcon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"fallback-icon","reflectToAttr":false,"docs":"Icon used for fallback image if image can not be loaded","docsTags":[],"default":"\'image_not_available\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"height","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"height","reflectToAttr":false,"docs":"The fixed height of this image.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"imgListItem","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"img-list-item","reflectToAttr":false,"docs":"Indicates that the image is a part of an image list component","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Sets the label of the image. Note: Only works if image is part of\\nan ino-img-list component.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"ratioHeight","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"ratio-height","reflectToAttr":false,"docs":"The ratio height for this image (default = 1).\\nUse this attribute together with `ratio-width` to reserve a\\nspace for the image during rendering and to prevent jumping contents.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":true,"required":false},{"name":"ratioWidth","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"ratio-width","reflectToAttr":false,"docs":"The ratio width of this image (default = 1).\\nUse this attribute together with `ratio-height` to reserve a\\nspace for the image during rendering and to prevent jumping contents.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":true,"required":false},{"name":"rounded","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"rounded","reflectToAttr":false,"docs":"If true, styles the image with rounded borders.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"sizes","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"sizes","reflectToAttr":false,"docs":"A set of rules to specify the usage of images sources that are\\ndefined in the `srcset` attribute.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"src","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"src","reflectToAttr":false,"docs":"The source of this image element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"srcset","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"srcset","reflectToAttr":false,"docs":"A set of sources of this image for different viewports or devices.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"usemap","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"usemap","reflectToAttr":false,"docs":"An ID referencing to a defined map element for this image.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"width","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"width","reflectToAttr":false,"docs":"The fixed of the image.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-img-list/ino-img-list.tsx","fileName":"ino-img-list.tsx","tag":"ino-img-list","readme":"# ino-img-list\\n\\n\\n","overview":"The ino-img-list component is used in combination with the ino-img component to display an array of images\\nin a grid-like format. It is based on the mdc-image-list component.","usage":{},"docs":"The ino-img-list component is used in combination with the ino-img component to display an array of images\\nin a grid-like format. It is based on the mdc-image-list component.","docsTags":[{"name":"slot","text":"default - One or more `ino-img` with `imgListItem=\\"true\\"`"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"encloseLabel","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"enclose-label","reflectToAttr":false,"docs":"Encapsulates the label of all img-list-items within the image","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"masonry","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"masonry","reflectToAttr":false,"docs":"Enables the masonry image list variant, which allows the images to\\nbe any combination of aspect ratios.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[{"name":"--ino-img-list-cols","annotation":"prop","docs":"sets the number of columns"}],"slots":[{"name":"default","docs":"One or more `ino-img` with `imgListItem=\\"true\\"`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-input/ino-input.tsx","fileName":"ino-input.tsx","tag":"ino-input","readme":"# ino-input\\n\\n","overview":"An input component with styles. It functions as a wrapper around the material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component.\\n\\nUse this element for **simple types** like `text`, `password`, `number` or `email`. For more complex types, there are elements like a [Radio Button](../ino-radio), a [Checkbox](../ino-checkbox), a [Datepicker](../ino-datepicker) and many more.","usage":{},"docs":"An input component with styles. It functions as a wrapper around the material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component.\\n\\nUse this element for **simple types** like `text`, `password`, `number` or `email`. For more complex types, there are elements like a [Radio Button](../ino-radio), a [Checkbox](../ino-checkbox), a [Datepicker](../ino-datepicker) and many more.","docsTags":[{"name":"slot","text":"icon-leading - For the icon to be prepended"},{"name":"slot","text":"icon-trailing - For the icon to be appended"}],"encapsulation":"none","dependents":["ino-datepicker","ino-markdown-editor"],"dependencies":["ino-label","ino-icon"],"dependencyGraph":{"ino-input":["ino-label","ino-icon"],"ino-datepicker":["ino-input"],"ino-markdown-editor":["ino-input"]},"props":[{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"auto-focus","reflectToAttr":false,"docs":"The autofocus of this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"autocomplete","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"autocomplete","reflectToAttr":false,"docs":"The autocomplete property of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"dataList","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"data-list","reflectToAttr":false,"docs":"The id of the datalist child","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"error","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"error","reflectToAttr":false,"docs":"Displays the input field as invalid if set to true.\\nIf the property is not set or set to false, the validation is handled by the `pattern` property.\\nThis functionality might be useful if the input validation is (additionally) handled by the backend.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helper","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"helper","reflectToAttr":false,"docs":"The optional helper text.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"helperCharacterCounter","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-character-counter","reflectToAttr":false,"docs":"Displays the number of characters. The maxlength-property must be set.\\nThis helper text will be displayed persistently.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helperPersistent","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-persistent","reflectToAttr":false,"docs":"Displays the helper permanently.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helperValidation","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-validation","reflectToAttr":false,"docs":"Styles the helper text as a validation message.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"The optional floating label of this input field.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"max","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"max","reflectToAttr":false,"docs":"The max value of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"maxlength","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"maxlength","reflectToAttr":false,"docs":"Limits the number of possible characters to the given number","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"min","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"min","reflectToAttr":false,"docs":"The min value of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"outline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"outline","reflectToAttr":false,"docs":"Styles the input field as outlined element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"pattern","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"pattern","reflectToAttr":false,"docs":"The validation pattern of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"placeholder","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Marks this element as required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"showLabelHint","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-label-hint","reflectToAttr":false,"docs":"If true, an *optional* message is displayed if not required,\\notherwise a * marker is displayed if required","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"step","type":"\\"any\\" | number","complexType":{"original":"number | \'any\'","resolved":"\\"any\\" | number","references":{}},"mutable":false,"attr":"step","reflectToAttr":false,"docs":"The step value of this element. Use `any` for decimal numbers","docsTags":[],"default":"1","values":[{"value":"any","type":"string"},{"type":"number"}],"optional":true,"required":false},{"name":"type","type":"\\"color\\" | \\"email\\" | \\"number\\" | \\"password\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"week\\"","complexType":{"original":"InputType","resolved":"\\"color\\" | \\"email\\" | \\"number\\" | \\"password\\" | \\"search\\" | \\"tel\\" | \\"text\\" | \\"url\\" | \\"week\\"","references":{"InputType":{"location":"import","path":"../types","id":"src/components/types.ts::InputType"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of this element (default = text).","docsTags":[],"default":"\'text\'","values":[{"value":"color","type":"string"},{"value":"email","type":"string"},{"value":"number","type":"string"},{"value":"password","type":"string"},{"value":"search","type":"string"},{"value":"tel","type":"string"},{"value":"text","type":"string"},{"value":"url","type":"string"},{"value":"week","type":"string"}],"optional":true,"required":false},{"name":"unit","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"unit","reflectToAttr":false,"docs":"Displays the given unit at the end of the input field.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element. (**unmanaged**)","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":false,"required":false}],"methods":[{"name":"getInputElement","returns":{"type":"Promise<HTMLInputElement>","docs":""},"complexType":{"signature":"() => Promise<HTMLInputElement>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"},"HTMLInputElement":{"location":"global","id":"global::HTMLInputElement"}},"return":"Promise<HTMLInputElement>"},"signature":"getInputElement() => Promise<HTMLInputElement>","parameters":[],"docs":"Returns the native input element used under the hood.","docsTags":[]},{"name":"setBlur","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setBlur() => Promise<void>","parameters":[],"docs":"Sets blur on the native `input`.\\nUse this method instead of the global `input.blur()`.","docsTags":[]},{"name":"setFocus","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setFocus() => Promise<void>","parameters":[],"docs":"Sets focus on the native `input`.\\nUse this method instead of the global `input.focus()`.","docsTags":[]}],"events":[{"event":"inoBlur","detail":"void","bubbles":false,"complexType":{"original":"void","resolved":"void","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the input field is blurred and validates email input","docsTags":[]},{"event":"inoFocus","detail":"void","bubbles":false,"complexType":{"original":"void","resolved":"void","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the input field is focused","docsTags":[]},{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user types something in.\\nContains typed input in `event.detail`","docsTags":[]}],"styles":[{"name":"--ino-input-caret-color","annotation":"prop","docs":"color of the caret"},{"name":"--ino-input-color","annotation":"prop","docs":"text color of the input"},{"name":"--ino-input-icon-color","annotation":"prop","docs":"icon color"},{"name":"--ino-input-label-color","annotation":"prop","docs":"color of the label"},{"name":"--ino-input-line-color","annotation":"prop","docs":"line color"}],"slots":[{"name":"icon-leading","docs":"For the icon to be prepended"},{"name":"icon-trailing","docs":"For the icon to be appended"}],"parts":[],"listeners":[{"event":"change","capture":false,"passive":false},{"event":"focus","capture":false,"passive":false},{"event":"input","capture":false,"passive":false}]},{"filePath":"src/components/ino-input-file/ino-input-file.tsx","fileName":"ino-input-file.tsx","tag":"ino-input-file","readme":"# ino-input-file\\n\\n\\n","overview":"An input component for files. It functions as a wrapper around the native input capabilities having the [`type=\\"file\\"`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\\n\\nThis component replaces the native behaviour with a custom `ino-button` with logic.","usage":{},"docs":"An input component for files. It functions as a wrapper around the native input capabilities having the [`type=\\"file\\"`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file).\\n\\nThis component replaces the native behaviour with a custom `ino-button` with logic.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":["ino-button","ino-icon"],"dependencyGraph":{"ino-input-file":["ino-button","ino-icon"],"ino-button":["ino-spinner"]},"props":[{"name":"accept","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"accept","reflectToAttr":false,"docs":"The types of files accepted by the server.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"The autofocus of this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"dragAndDrop","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"drag-and-drop","reflectToAttr":false,"docs":"Enables drag-and-drop file input","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"dragAndDropSecondaryText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"drag-and-drop-secondary-text","reflectToAttr":false,"docs":"Sets the secondary text of the drag and drop window","docsTags":[],"default":"\'or\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"dragAndDropText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"drag-and-drop-text","reflectToAttr":false,"docs":"Sets the primary text of the drag and drop window","docsTags":[],"default":"\'Drag your files here\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Sets the label of the select files button.","docsTags":[],"default":"\'Select file\'","values":[{"type":"string"}],"optional":true,"required":false},{"name":"multiple","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"multiple","reflectToAttr":false,"docs":"Indicates whether the user can enter one or more values.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this input field.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Marks this element as required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"changeFile","detail":"{ e: any; files: File[]; }","bubbles":true,"complexType":{"original":"{\\n    e: any;\\n    files: File[];\\n  }","resolved":"{ e: any; files: File[]; }","references":{"File":{"location":"global","id":"global::File"}}},"cancelable":true,"composed":true,"docs":"Emits when the value changes.","docsTags":[]}],"styles":[{"name":"--ino-input-file-box-height","annotation":"prop","docs":"Height of the drag and drop window"},{"name":"--ino-input-file-box-width","annotation":"prop","docs":"Width of the drag and drop window"}],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-label/ino-label.tsx","fileName":"ino-label.tsx","tag":"ino-label","readme":"# ino-label\\n\\n\\n","overview":"This is an internally used component for various sorts of inputs like `ino-input`, `ino-select` and `ino-textarea`. It is used to display the label for each respective component.","usage":{},"docs":"This is an internally used component for various sorts of inputs like `ino-input`, `ino-select` and `ino-textarea`. It is used to display the label for each respective component.","docsTags":[],"encapsulation":"none","dependents":["ino-input","ino-select","ino-textarea"],"dependencies":[],"dependencyGraph":{"ino-input":["ino-label"],"ino-select":["ino-label"],"ino-textarea":["ino-label"]},"props":[{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Colors the label in an light grey to indicate the disabled status for this element","docsTags":[],"values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"for","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"for","reflectToAttr":false,"docs":"Id of the associated form control","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"outline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"outline","reflectToAttr":false,"docs":"Styles the label in an outlined style","docsTags":[],"values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Appends * to the label to make it appear as an required input in a form","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"showHint","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-hint","reflectToAttr":false,"docs":"Shows a \\"optional\\" message, when not `required`;\\nShows a * mark, when `required`","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"text","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"text","reflectToAttr":false,"docs":"The text of the label itself","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-list/ino-list.tsx","fileName":"ino-list.tsx","tag":"ino-list","readme":"# ino-list\\n\\n\\n","overview":"A component that displays a list of choices. It functions as a wrapper around the material [list](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) component.\\n\\nThis component is a composer to configure and wrap `list-item`s, `list-divider`s, `control-item`s and `nav-item`s.\\n\\n#### Additional Hints\\nProvide `two-lines` to set proper style attributes for list items having a primary and secondary line.","usage":{},"docs":"A component that displays a list of choices. It functions as a wrapper around the material [list](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) component.\\n\\nThis component is a composer to configure and wrap `list-item`s, `list-divider`s, `control-item`s and `nav-item`s.\\n\\n#### Additional Hints\\nProvide `two-lines` to set proper style attributes for list items having a primary and secondary line.","docsTags":[{"name":"slot","text":"default - One or more `ino-(control|list|nav)-item` and `ino-list-divider`"}],"encapsulation":"none","dependents":["ino-menu"],"dependencies":[],"dependencyGraph":{"ino-menu":["ino-list"]},"props":[{"name":"avatar","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"avatar","reflectToAttr":false,"docs":"Configures the leading tiles of each row to display images instead of icons.\\nThis will make the graphics of the list items larger.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"dense","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"dense","reflectToAttr":false,"docs":"Styles the list more dense, making it appear more compact.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"twoLines","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"two-lines","reflectToAttr":false,"docs":"Marks this element as list with items having two lines.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[{"name":"--ino-list-item-border-radius","annotation":"prop","docs":"Border radius of the list container, also effects the first and last list item"}],"slots":[{"name":"default","docs":"One or more `ino-(control|list|nav)-item` and `ino-list-divider`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-list-divider/ino-list-divider.tsx","fileName":"ino-list-divider.tsx","tag":"ino-list-divider","readme":"# ino-list-divider\\n\\n\\n","overview":"\\nA list divider component that either divides two lists or list items. It functions as a wrapper around the material [list divider](https://github.com/material-components/material-components-web/blob/master/packages/mdc-divider/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.","usage":{},"docs":"\\nA list divider component that either divides two lists or list items. It functions as a wrapper around the material [list divider](https://github.com/material-components/material-components-web/blob/master/packages/mdc-divider/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"betweenLists","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"between-lists","reflectToAttr":false,"docs":"Marks the divider as a separator between two `ino-list`\\ninstead of `ino-list-item` elements.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"inset","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"inset","reflectToAttr":false,"docs":"Increases leading margin to match leading column in `ino-list-item`.\\n\\nOnly applicable if `betweenList` is `false`.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"padded","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"padded","reflectToAttr":false,"docs":"Increases margin on each side of the divider to match meta content\\nin `ino-list-item`.\\n\\nOnly applicable if `betweenList` is `false`.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-list-item/ino-list-item.tsx","fileName":"ino-list-item.tsx","tag":"ino-list-item","readme":"# ino-list-item\\n\\n","overview":"A list item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.","usage":{},"docs":"A list item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.","docsTags":[{"name":"slot","text":"leading - For the element to be prepended"},{"name":"slot","text":"trailing - For the element to be appended"},{"name":"slot","text":"primary - For the (text) element"},{"name":"slot","text":"secondary - For the secondary text element in a two-lined list"}],"encapsulation":"none","dependents":["ino-control-item","ino-nav-item"],"dependencies":[],"dependencyGraph":{"ino-control-item":["ino-list-item"],"ino-nav-item":["ino-list-item"]},"props":[{"name":"activated","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"activated","reflectToAttr":false,"docs":"Styles the row in an activated style.\\n\\nIn contrast to `selected`, use this for only one item\\nand to mark it as permantently activated.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"attrs","type":"HTMLAttributes<HTMLLIElement>","complexType":{"original":"JSXBase.HTMLAttributes<HTMLLIElement>","resolved":"HTMLAttributes<HTMLLIElement>","references":{"JSXBase":{"location":"global","id":"global::JSXBase"},"HTMLLIElement":{"location":"global","id":"global::HTMLLIElement"}}},"mutable":false,"reflectToAttr":false,"docs":"Allows the specification of native HTML attributes on the underlying HTML element","docsTags":[],"values":[{"type":"HTMLAttributes<HTMLLIElement>"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Styles the row in a disabled style.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"secondaryText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"secondary-text","reflectToAttr":false,"docs":"Sets the secondary text of this list item.\\n\\nRequires `two-lines` on the parent `ino-list` element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Styles the row in a selected style.\\n\\nIn contrast to `activated`, use this option to select one\\nor multiple items that are likely to change soon.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"text","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"text","reflectToAttr":false,"docs":"The primary text of this list item.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"clickEl","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the list item is clicked or\\nthe enter/space key if pressed while the item is in focus.\\nContains the element itself in `event.detail`","docsTags":[]}],"styles":[{"name":"--ino-list-item-deselected-background-color","annotation":"prop","docs":"Background color of a deselected list item"},{"name":"--ino-list-item-deselected-background-color-active","annotation":"prop","docs":"Background color of a deselected list item if active"},{"name":"--ino-list-item-deselected-background-color-focus","annotation":"prop","docs":"Background color of a deselected list item if focused"},{"name":"--ino-list-item-deselected-background-color-hover","annotation":"prop","docs":"Background color of a deselected list item on hover"},{"name":"--ino-list-item-deselected-color","annotation":"prop","docs":"Text color of a deselected list item"},{"name":"--ino-list-item-selected-background-color","annotation":"prop","docs":"Background color of a selected list item"},{"name":"--ino-list-item-selected-background-color-active","annotation":"prop","docs":"Background color of a selected list item if active"},{"name":"--ino-list-item-selected-background-color-focus","annotation":"prop","docs":"Background color of a selected list item if focused"},{"name":"--ino-list-item-selected-background-color-hover","annotation":"prop","docs":"Background color of a selected list item on hover"},{"name":"--ino-list-item-selected-color","annotation":"prop","docs":"Text color of a selected list item"}],"slots":[{"name":"leading","docs":"For the element to be prepended"},{"name":"primary","docs":"For the (text) element"},{"name":"secondary","docs":"For the secondary text element in a two-lined list"},{"name":"trailing","docs":"For the element to be appended"}],"parts":[],"listeners":[{"event":"keydown","capture":false,"passive":false},{"event":"click","capture":false,"passive":false}]},{"filePath":"src/components/ino-markdown-editor/ino-markdown-editor.tsx","fileName":"ino-markdown-editor.tsx","tag":"ino-markdown-editor","readme":"# ino-markdown-editor\\n\\n\\n","overview":"The **Preview Mode** supports following actions:\\n\\n| Actions ||||\\n|---|\\n| Link | Blockquotes | Unordered list / Bullet list | Headline 1 |\\n| Italic | Strikethrough | Ordered list / Numbered  list | Headline 2 |\\n| Bold | Inline code | Task list |\\n\\nAdditionally, there are a lot of predefined\\n[keyboard shortcuts](https://tiptap.dev/api/keyboard-shortcuts#predefined-keyboard-shortcuts)\\nprovided by the underlying [tiptap](https://tiptap.dev/) editor.\\n\\nThe **Markdown Mode** supports all syntax of [CommonMark](https://commonmark.org/help/) with two exceptions:\\n\\n * Support of strikethrough syntax (`~~TextToStrike~~`)\\n * Support of task list syntax (`- [x] MyToDoTask`)\\n * No support of image syntax. __Images are not allowed!__","usage":{},"docs":"The **Preview Mode** supports following actions:\\n\\n| Actions ||||\\n|---|\\n| Link | Blockquotes | Unordered list / Bullet list | Headline 1 |\\n| Italic | Strikethrough | Ordered list / Numbered  list | Headline 2 |\\n| Bold | Inline code | Task list |\\n\\nAdditionally, there are a lot of predefined\\n[keyboard shortcuts](https://tiptap.dev/api/keyboard-shortcuts#predefined-keyboard-shortcuts)\\nprovided by the underlying [tiptap](https://tiptap.dev/) editor.\\n\\nThe **Markdown Mode** supports all syntax of [CommonMark](https://commonmark.org/help/) with two exceptions:\\n\\n * Support of strikethrough syntax (`~~TextToStrike~~`)\\n * Support of task list syntax (`- [x] MyToDoTask`)\\n * No support of image syntax. __Images are not allowed!__","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":["ino-dialog","ino-input","ino-icon-button","ino-icon","ino-popover","ino-textarea"],"dependencyGraph":{"ino-markdown-editor":["ino-dialog","ino-input","ino-icon-button","ino-icon","ino-popover","ino-textarea"],"ino-dialog":["ino-icon","ino-button"],"ino-button":["ino-spinner"],"ino-input":["ino-label","ino-icon"],"ino-icon-button":["ino-icon"],"ino-textarea":["ino-label"]},"props":[{"name":"initialValue","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"initial-value","reflectToAttr":false,"docs":"Initial `string` value of the markdown editor.\\nReassigning this value do not change the editor state.\\nThe value must contain a valid Markdown syntax.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"viewMode","type":"\\"markdown\\" | \\"preview\\" | \\"readonly\\"","complexType":{"original":"ViewModeUnion","resolved":"\\"markdown\\" | \\"preview\\" | \\"readonly\\"","references":{"ViewModeUnion":{"location":"import","path":"../types","id":"src/components/types.ts::ViewModeUnion"}}},"mutable":false,"attr":"view-mode","reflectToAttr":false,"docs":"Sets the view mode of the editor.\\nCan be changed between `preview` (default), `markdown` and `readonly`.\\nThe `markdown` mode is made for advanced users that know the Markdown syntax.","docsTags":[],"default":"\'preview\'","values":[{"value":"markdown","type":"string"},{"value":"preview","type":"string"},{"value":"readonly","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"inoBlur","detail":"void","bubbles":false,"complexType":{"original":"void","resolved":"void","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the ino-markdown-editor is blurred","docsTags":[]},{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the value of the markdown editor **blurs**.\\nThe value of type `string` can be found in `event.detail`","docsTags":[]},{"event":"viewModeChange","detail":"\\"markdown\\" | \\"preview\\" | \\"readonly\\"","bubbles":true,"complexType":{"original":"ViewModeUnion","resolved":"\\"markdown\\" | \\"preview\\" | \\"readonly\\"","references":{"ViewModeUnion":{"location":"import","path":"../types","id":"src/components/types.ts::ViewModeUnion"}}},"cancelable":true,"composed":true,"docs":"Emits when one of the view mode buttons was clicked.\\nThe value of type `ViewMode` can be found in `event.detail`","docsTags":[]}],"styles":[{"name":"--ino-markdown-editor-max-height","annotation":"prop","docs":"max-height of text editor Default value is `none`."},{"name":"--ino-markdown-editor-min-height","annotation":"prop","docs":"min-height of text editor. Default value is `100px`."}],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-menu/ino-menu.tsx","fileName":"ino-menu.tsx","tag":"ino-menu","readme":"# ino-menu\\n\\n\\n","overview":"A menu component that displays a list of choices on a temporary surface which opens and closes on anchor or item click.\\nThe anchor element is the parent element.\\n\\nThe menu items consist of different variations of the `ino-list-item` component.\\n\\nIf you need a more customizable menu with a different type of elements or functionalities, have a look at the `ino-popover`.","usage":{},"docs":"A menu component that displays a list of choices on a temporary surface which opens and closes on anchor or item click.\\nThe anchor element is the parent element.\\n\\nThe menu items consist of different variations of the `ino-list-item` component.\\n\\nIf you need a more customizable menu with a different type of elements or functionalities, have a look at the `ino-popover`.","docsTags":[{"name":"slot","text":"default - One or more `ino-(control|list|nav)-item` and `ino-list-divider`"}],"encapsulation":"none","dependents":[],"dependencies":["ino-popover","ino-list"],"dependencyGraph":{"ino-menu":["ino-popover","ino-list"]},"props":[{"name":"placement","type":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","complexType":{"original":"Placement","resolved":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","references":{"Placement":{"location":"import","path":"tippy.js","id":"../../node_modules/tippy.js/index.d.ts::Placement"}}},"mutable":false,"attr":"placement","reflectToAttr":false,"docs":"Determines the position of the opened menu.\\nUsually, the default value (`auto`) will work just fine.\\nUse this if the positioning is off for some reason.","docsTags":[],"default":"\'auto\'","values":[{"value":"auto","type":"string"},{"value":"auto-end","type":"string"},{"value":"auto-start","type":"string"},{"value":"bottom","type":"string"},{"value":"bottom-end","type":"string"},{"value":"bottom-start","type":"string"},{"value":"left","type":"string"},{"value":"left-end","type":"string"},{"value":"left-start","type":"string"},{"value":"right","type":"string"},{"value":"right-end","type":"string"},{"value":"right-start","type":"string"},{"value":"top","type":"string"},{"value":"top-end","type":"string"},{"value":"top-start","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-(control|list|nav)-item` and `ino-list-divider`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-nav-drawer/ino-nav-drawer.tsx","fileName":"ino-nav-drawer.tsx","tag":"ino-nav-drawer","readme":"# ino-nav-drawer\\n\\n","overview":"A navigation drawer component with different variants, setting up the base layout for your app.\\nIt functions as a wrapper around the material [drawer](https://github.com/material-components/material-components-web/blob/master/packages/mdc-drawer/) component.\\n\\n> Note: The navigation drawer works best with `ino-list` and `ino-nav-item`s inside.","usage":{},"docs":"A navigation drawer component with different variants, setting up the base layout for your app.\\nIt functions as a wrapper around the material [drawer](https://github.com/material-components/material-components-web/blob/master/packages/mdc-drawer/) component.\\n\\n> Note: The navigation drawer works best with `ino-list` and `ino-nav-item`s inside.","docsTags":[{"name":"slot","text":"header - For a custom header on top of the navigation bar"},{"name":"slot","text":"logo - For the logo on top of the navigation bar (cannot be used with the `header` slot)"},{"name":"slot","text":"subtitle - For the element just below the logo (cannot be used with the `header` slot)"},{"name":"slot","text":"content - For the content of the navigation bar (usually used with `ino-list` and `ino-nav-item`)"},{"name":"slot","text":"footer - For elements below the content slot"},{"name":"slot","text":"app - For the application located next to this nav-drawer"}],"encapsulation":"shadow","dependents":[],"dependencies":["ino-icon-button"],"dependencyGraph":{"ino-nav-drawer":["ino-icon-button"],"ino-icon-button":["ino-icon"]},"props":[{"name":"a11yLabels","type":"{ content: string; footer: string; toggleBtn: string; }","complexType":{"original":"NavDrawerLabels","resolved":"{ content: string; footer: string; toggleBtn: string; }","references":{"NavDrawerLabels":{"location":"import","path":"../types","id":"src/components/types.ts::NavDrawerLabels"}}},"mutable":false,"reflectToAttr":false,"docs":"The aria-labels used for content and footer nav elements.\\nhttps://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/navigation_role.","docsTags":[],"default":"{\\n    content: \'Main Navigation\',\\n    footer: \'Footer Navigation\',\\n    toggleBtn: \'Toggle Navigation\',\\n  }","values":[{"type":"{ content: string; footer: string; toggleBtn: string; }"}],"optional":true,"required":false},{"name":"anchor","type":"\\"left\\" | \\"right\\"","complexType":{"original":"NavDrawerAnchor","resolved":"\\"left\\" | \\"right\\"","references":{"NavDrawerAnchor":{"location":"import","path":"../types","id":"src/components/types.ts::NavDrawerAnchor"}}},"mutable":false,"attr":"anchor","reflectToAttr":false,"docs":"Side from which the drawer will appear.\\nPossible values: `left` (default), `right`.","docsTags":[],"default":"\'left\'","values":[{"value":"left","type":"string"},{"value":"right","type":"string"}],"optional":true,"required":false},{"name":"open","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"open","reflectToAttr":false,"docs":"Marks this element as open. (**unmanaged**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"variant","type":"\\"dismissible\\" | \\"docked\\" | \\"mobile\\" | \\"modal\\"","complexType":{"original":"NavDrawerVariant","resolved":"\\"dismissible\\" | \\"docked\\" | \\"mobile\\" | \\"modal\\"","references":{"NavDrawerVariant":{"location":"import","path":"../types","id":"src/components/types.ts::NavDrawerVariant"}}},"mutable":false,"attr":"variant","reflectToAttr":false,"docs":"The variant to use for the drawer.","docsTags":[],"default":"\'docked\'","values":[{"value":"dismissible","type":"string"},{"value":"docked","type":"string"},{"value":"mobile","type":"string"},{"value":"modal","type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"openChange","detail":"boolean","bubbles":true,"complexType":{"original":"boolean","resolved":"boolean","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user clicks on the drawer toggle icon to change the open state. Contains the status in `event.detail`.","docsTags":[]}],"styles":[{"name":"--ino-nav-drawer-background","annotation":"prop","docs":"Background of the drawer."},{"name":"--ino-nav-drawer-height","annotation":"prop","docs":"Height of the drawer."},{"name":"--ino-nav-drawer-mobile-width-open","annotation":"prop","docs":"Mobile variant only! The width of the open drawer."},{"name":"--ino-nav-drawer-text-color","annotation":"prop","docs":"Color of text inside the drawer."},{"name":"--ino-nav-drawer-timing-function","annotation":"prop","docs":"Timing function of the slide animation of the drawer."},{"name":"--ino-nav-drawer-transition-duration","annotation":"prop","docs":"Duration of the slide animation of the drawer."},{"name":"--ino-nav-drawer-width-closed","annotation":"prop","docs":"Docked variant only! The width of the collapsed drawer."},{"name":"--ino-nav-drawer-width-open","annotation":"prop","docs":"The width of the open drawer."}],"slots":[{"name":"app","docs":"For the application located next to this nav-drawer"},{"name":"content","docs":"For the content of the navigation bar (usually used with `ino-list` and `ino-nav-item`)"},{"name":"footer","docs":"For elements below the content slot"},{"name":"header","docs":"For a custom header on top of the navigation bar"},{"name":"logo","docs":"For the logo on top of the navigation bar (cannot be used with the `header` slot)"},{"name":"subtitle","docs":"For the element just below the logo (cannot be used with the `header` slot)"}],"parts":[],"listeners":[{"event":"clickEl","capture":false,"passive":false}]},{"filePath":"src/components/ino-nav-item/ino-nav-item.tsx","fileName":"ino-nav-item.tsx","tag":"ino-nav-item","readme":"# ino-nav-item\\n\\n\\n","overview":"A nav item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.\\n\\n> Note: This component\'s main use case is within the `ino-nav-drawer`.","usage":{},"docs":"A nav item component that displays a single instance of choice in a list or menu. It functions as a wrapper around the material [list item](https://github.com/material-components/material-components-web/blob/master/packages/mdc-list/) capabilities.\\n\\nThis component is used as child of `ino-list` and `ino-menu` components.\\n\\n> Note: This component\'s main use case is within the `ino-nav-drawer`.","docsTags":[{"name":"slot","text":"default - Any element"}],"encapsulation":"none","dependents":[],"dependencies":["ino-list-item"],"dependencyGraph":{"ino-nav-item":["ino-list-item"]},"props":[{"name":"activated","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"activated","reflectToAttr":false,"docs":"Styles the row in an activated style.\\n\\nUse this for only one item\\nand to mark it as permanently activated.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Styles the row in a disabled style.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"subText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"sub-text","reflectToAttr":false,"docs":"The secondary text of this list item used in a two-lined list.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"text","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"text","reflectToAttr":false,"docs":"The text of this list item.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[{"name":"--ino-nav-item-background-color","annotation":"prop","docs":"Inactive color of the background of one item."},{"name":"--ino-nav-item-background-color-active","annotation":"prop","docs":"Active color of the background of one item."},{"name":"--ino-nav-item-color","annotation":"prop","docs":"Inactive color of icon."},{"name":"--ino-nav-item-color-active","annotation":"prop","docs":"Active color of icon."}],"slots":[{"name":"default","docs":"Any element"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-option/ino-option.tsx","fileName":"ino-option.tsx","tag":"ino-option","readme":"# ino-option\\n\\n\\n","overview":"An option component that can be used to add options to an ino-select component.","usage":{},"docs":"An option component that can be used to add options to an ino-select component.","docsTags":[{"name":"slot","text":"default - The text of the option"}],"encapsulation":"none","dependents":["ino-option-group"],"dependencies":[],"dependencyGraph":{"ino-option-group":["ino-option"]},"props":[{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables the option","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"selected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"selected","reflectToAttr":false,"docs":"Selects the option","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value of the option","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":true}],"methods":[],"events":[{"event":"clickEl","detail":"HTMLInoOptionElement","bubbles":true,"complexType":{"original":"HTMLInoOptionElement","resolved":"HTMLInoOptionElement","references":{"HTMLInoOptionElement":{"location":"global","id":"global::HTMLInoOptionElement"}}},"cancelable":true,"composed":true,"docs":"Emits on option click","docsTags":[]}],"styles":[{"name":"--ino-option-deselected-background-color","annotation":"prop","docs":"Background color if deselected"},{"name":"--ino-option-deselected-background-color-active","annotation":"prop","docs":"Background color if active and deselected"},{"name":"--ino-option-deselected-background-color-focus","annotation":"prop","docs":"Background color on focus if deselected"},{"name":"--ino-option-deselected-background-color-hover","annotation":"prop","docs":"Background color on hover if deselected"},{"name":"--ino-option-height","annotation":"prop","docs":"Height of the option container"},{"name":"--ino-option-selected-background-color","annotation":"prop","docs":"Background color if selected"},{"name":"--ino-option-selected-background-color-active","annotation":"prop","docs":"Background color if active and selected"},{"name":"--ino-option-selected-background-color-focus","annotation":"prop","docs":"Background color on focus if selected"},{"name":"--ino-option-selected-background-color-hover","annotation":"prop","docs":"Background color on hover if selected"}],"slots":[{"name":"default","docs":"The text of the option"}],"parts":[],"listeners":[{"event":"click","capture":false,"passive":false},{"event":"keydown","capture":false,"passive":false}]},{"filePath":"src/components/ino-option-group/ino-option-group.tsx","fileName":"ino-option-group.tsx","tag":"ino-option-group","readme":"# ino-option-group\\n\\n","overview":"A wrapper component to be used for a group of ino-options. This component adds a non-selectable header before the options.\\n\\nBeyond that, if you encounter problems using React or Vue in conjunction with the `ino-select`, use this component as a wrapper around your `ino-option`. This way the virtual DOM will know when to update the `ino-select` and its children, which may otherwise not work properly if the options are added dynamically while deeply nested in the `ino-select\'. For more information refer to [this issue](https://github.com/ionic-team/stencil/issues/2259).","usage":{},"docs":"A wrapper component to be used for a group of ino-options. This component adds a non-selectable header before the options.\\n\\nBeyond that, if you encounter problems using React or Vue in conjunction with the `ino-select`, use this component as a wrapper around your `ino-option`. This way the virtual DOM will know when to update the `ino-select` and its children, which may otherwise not work properly if the options are added dynamically while deeply nested in the `ino-select\'. For more information refer to [this issue](https://github.com/ionic-team/stencil/issues/2259).","docsTags":[{"name":"slot","text":"default - One or more `ino-option`"}],"encapsulation":"none","dependents":[],"dependencies":["ino-option"],"dependencyGraph":{"ino-option-group":["ino-option"]},"props":[{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Label of the group. If not set, this component serves as a wrapper component for dynamically added `ino-options`.\\nWhen using react and vue, an issue exists with slots and the virtual DOM. Read more about it [here](https://github.com/ionic-team/stencil/issues/2259).","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-option`"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-popover/ino-popover.tsx","fileName":"ino-popover.tsx","tag":"ino-popover","readme":"# ino-popover\\n\\n\\n","overview":"A Popover is a dialog which is bound to a specific element and appears next to it. Under the\\nhood, [tippy.js](https://atomiks.github.io/tippyjs/) is used.\\n\\nThe Popover\\nand [Tooltip](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-tooltip--default-usage)\\ncomponents are very similar. However, popovers are complex dialogs consisting of several HTML elements, while tooltips\\ncan only display plain text.","usage":{},"docs":"A Popover is a dialog which is bound to a specific element and appears next to it. Under the\\nhood, [tippy.js](https://atomiks.github.io/tippyjs/) is used.\\n\\nThe Popover\\nand [Tooltip](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-tooltip--default-usage)\\ncomponents are very similar. However, popovers are complex dialogs consisting of several HTML elements, while tooltips\\ncan only display plain text.","docsTags":[{"name":"slot","text":"popover-trigger - The target element to attach the triggers to"},{"name":"slot","text":"default - Content of the popover"}],"encapsulation":"none","dependents":["ino-markdown-editor","ino-menu","ino-table-header-cell"],"dependencies":[],"dependencyGraph":{"ino-markdown-editor":["ino-popover"],"ino-menu":["ino-popover"],"ino-table-header-cell":["ino-popover"]},"props":[{"name":"arrow","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"arrow","reflectToAttr":false,"docs":"Shows an arrow pointing towards its trigger-element","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"attachToBody","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"attach-to-body","reflectToAttr":false,"docs":"If set, attaches the popover element to the body.\\nUseful to avoid overflow or z-index issues.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"colorScheme","type":"\\"dark\\" | \\"light\\" | \\"primary\\"","complexType":{"original":"TippyThemes","resolved":"\\"dark\\" | \\"light\\" | \\"primary\\"","references":{"TippyThemes":{"location":"import","path":"../types","id":"src/components/types.ts::TippyThemes"}}},"mutable":false,"attr":"color-scheme","reflectToAttr":false,"docs":"Sets the color scheme of the popup.\\n\\nValid options include: `primary`, `light` and `dark`.","docsTags":[],"default":"\'primary\'","values":[{"value":"dark","type":"string"},{"value":"light","type":"string"},{"value":"primary","type":"string"}],"optional":false,"required":false},{"name":"controlled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"controlled","reflectToAttr":false,"docs":"Used to indicate if the popover should be controlled by itself (`false`) or manually by the `visible` property (`true`)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"delay","type":"[number, number] | number","complexType":{"original":"number | [number, number]","resolved":"[number, number] | number","references":{}},"mutable":false,"attr":"delay","reflectToAttr":false,"docs":"The delay in milliseconds before `ino-popover` shows up or hides.\\n\\nIf only one number is given, the show and hide delay get the given delay duration.\\n\\nIf two numbers are given e.g. `[500, 200]` the show delay is 500ms and the hide delay is 200ms.\\n\\nDefaults to 0ms.","docsTags":[],"default":"0","values":[{"type":"[number, number]"},{"type":"number"}],"optional":true,"required":false},{"name":"distance","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"distance","reflectToAttr":false,"docs":"Displaces the popover away from, or toward, the anchor element in the direction of its placement.\\nA positive number displaces it further away, while a negative number lets it overlap the anchor.","docsTags":[],"default":"10","values":[{"type":"number"}],"optional":true,"required":false},{"name":"followCursor","type":"\\"horizontal\\" | \\"initial\\" | \\"vertical\\" | boolean","complexType":{"original":"Props[\'followCursor\']","resolved":"\\"horizontal\\" | \\"initial\\" | \\"vertical\\" | boolean","references":{"Props":{"location":"import","path":"tippy.js","id":"../../node_modules/tippy.js/index.d.ts::Props"}}},"mutable":false,"attr":"follow-cursor","reflectToAttr":false,"docs":"Determines if and how the popover follows the user\'s mouse cursor.","docsTags":[],"default":"false","values":[{"value":"horizontal","type":"string"},{"value":"initial","type":"string"},{"value":"vertical","type":"string"},{"type":"boolean"}],"optional":false,"required":false},{"name":"for","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"for","reflectToAttr":false,"docs":"The target id the popover belongs to.\\nIf not given, the popover is attached to the element provided in the named slot (`popover-trigger`)\\nor the parent component if a slot element does not exist.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"hideOnBlur","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"hide-on-blur","reflectToAttr":false,"docs":"If true, hides the popper on blur.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"hideOnEsc","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"hide-on-esc","reflectToAttr":false,"docs":"If true, hides the popper on esc.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"interactive","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"interactive","reflectToAttr":false,"docs":"Use this if you want to interact with the popover content (e.g. button clicks)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"placement","type":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","complexType":{"original":"Placement","resolved":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","references":{"Placement":{"location":"import","path":"tippy.js","id":"../../node_modules/tippy.js/index.d.ts::Placement"}}},"mutable":false,"attr":"placement","reflectToAttr":false,"docs":"The placement of this popover.\\nAccepted values: `top(-start, -end)`, `right(-start, -end)`,\\n`bottom(-start, -end)`, `left(-start, -end)`","docsTags":[],"default":"\'auto\'","values":[{"value":"auto","type":"string"},{"value":"auto-end","type":"string"},{"value":"auto-start","type":"string"},{"value":"bottom","type":"string"},{"value":"bottom-end","type":"string"},{"value":"bottom-start","type":"string"},{"value":"left","type":"string"},{"value":"left-end","type":"string"},{"value":"left-start","type":"string"},{"value":"right","type":"string"},{"value":"right-end","type":"string"},{"value":"right-start","type":"string"},{"value":"top","type":"string"},{"value":"top-end","type":"string"},{"value":"top-start","type":"string"}],"optional":false,"required":false},{"name":"trigger","type":"\\"click focus mouseenter\\" | \\"click focus\\" | \\"click mouseenter focus\\" | \\"click mouseenter\\" | \\"click\\" | \\"focus click mouseenter\\" | \\"focus click\\" | \\"focus mouseenter click\\" | \\"focus mouseenter\\" | \\"focus\\" | \\"mouseenter click focus\\" | \\"mouseenter click\\" | \\"mouseenter focus click\\" | \\"mouseenter focus\\" | \\"mouseenter\\"","complexType":{"original":"Exclude<TooltipTrigger, \'manual\'>","resolved":"\\"click focus mouseenter\\" | \\"click focus\\" | \\"click mouseenter focus\\" | \\"click mouseenter\\" | \\"click\\" | \\"focus click mouseenter\\" | \\"focus click\\" | \\"focus mouseenter click\\" | \\"focus mouseenter\\" | \\"focus\\" | \\"mouseenter click focus\\" | \\"mouseenter click\\" | \\"mouseenter focus click\\" | \\"mouseenter focus\\" | \\"mouseenter\\"","references":{"Exclude":{"location":"global","id":"global::Exclude"},"TooltipTrigger":{"location":"import","path":"../types","id":"src/components/types.ts::TooltipTrigger"}}},"mutable":false,"attr":"trigger","reflectToAttr":false,"docs":"The trigger to show the tooltip - either click, hover or focus.\\nMultiple triggers are possible by separating them with a space.","docsTags":[],"default":"\'mouseenter focus\'","values":[{"value":"click focus mouseenter","type":"string"},{"value":"click focus","type":"string"},{"value":"click mouseenter focus","type":"string"},{"value":"click mouseenter","type":"string"},{"value":"click","type":"string"},{"value":"focus click mouseenter","type":"string"},{"value":"focus click","type":"string"},{"value":"focus mouseenter click","type":"string"},{"value":"focus mouseenter","type":"string"},{"value":"focus","type":"string"},{"value":"mouseenter click focus","type":"string"},{"value":"mouseenter click","type":"string"},{"value":"mouseenter focus click","type":"string"},{"value":"mouseenter focus","type":"string"},{"value":"mouseenter","type":"string"}],"optional":false,"required":false},{"name":"visible","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"visible","reflectToAttr":false,"docs":"Programmatically show or hide the popover.\\nCan only be used in controlled mode (see property `controlled`).\\nUse the `visibleChanged` to sync the popovers\' visibility state with yours.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[{"name":"getTippyInstance","returns":{"type":"Promise<any>","docs":""},"complexType":{"signature":"() => Promise<any>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<any>"},"signature":"getTippyInstance() => Promise<any>","parameters":[],"docs":"Returns the internally used tippy.js instance\\nFor more informations see: https://atomiks.github.io/tippyjs/","docsTags":[]}],"events":[{"event":"visibleChanged","detail":"boolean","bubbles":true,"complexType":{"original":"boolean","resolved":"boolean","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the popover wants to show (`true`) or hide (`false`) itself.\\nThis is depended on the `trigger` property.\\nUse this event in controlled-mode (see `controlled`).\\n\\ne.g.: `trigger = \'click\'` - This events emits with `true`\\nwhen the user clicks on the target (slot/`for`/parent-element)\\nand emits with `false` when the target or the outside is clicked.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Content of the popover"},{"name":"popover-trigger","docs":"The target element to attach the triggers to"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-progress-bar/ino-progress-bar.tsx","fileName":"ino-progress-bar.tsx","tag":"ino-progress-bar","readme":"# ino-progress-bar\\n\\n\\n","overview":"The `ino-progress-bar` is a linear progress bar based on the mdc-linear-progress component.","usage":{},"docs":"The `ino-progress-bar` is a linear progress bar based on the mdc-linear-progress component.","docsTags":[],"encapsulation":"shadow","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"buffer","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"buffer","reflectToAttr":false,"docs":"Sets the buffer progress","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false},{"name":"indeterminate","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"indeterminate","reflectToAttr":false,"docs":"Indicates whether the state of the progress bar is indeterminate","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Sets the label of the progress bar","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"progress","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"progress","reflectToAttr":false,"docs":"Sets the progress of the progress bar.\\nShould always be between 0 and 1","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false}],"methods":[],"events":[],"styles":[{"name":"--progress-bar--bar-color","annotation":"prop","docs":"Color of the progress bar"}],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-radio/ino-radio.tsx","fileName":"ino-radio.tsx","tag":"ino-radio","readme":"# ino-radio\\n\\n\\n","overview":"A radio component that allows the user to select an option from a set of radio-buttons. In order to have a single select functionality, please refer to the `ino-radio-group`-component. This component functions as a wrapper around the material [radio](https://github.com/material-components/material-components-web/tree/master/packages/mdc-radio) component.\\n\\n#### Additional Hints\\nClicking on the radio button triggers an event that contains the boolean value `true` (`e.detail`). This event is only triggered if the radio button was not previously selected (`checked=false`). In order to check one element and uncheck the other ones, please refer to the `ino-radio-group`-Component. If (`checked=true`) is passed to an element, the other elements **won\'t** be deselected without the use of the `ino-radio-group`.","usage":{},"docs":"A radio component that allows the user to select an option from a set of radio-buttons. In order to have a single select functionality, please refer to the `ino-radio-group`-component. This component functions as a wrapper around the material [radio](https://github.com/material-components/material-components-web/tree/master/packages/mdc-radio) component.\\n\\n#### Additional Hints\\nClicking on the radio button triggers an event that contains the boolean value `true` (`e.detail`). This event is only triggered if the radio button was not previously selected (`checked=false`). In order to check one element and uncheck the other ones, please refer to the `ino-radio-group`-Component. If (`checked=true`) is passed to an element, the other elements **won\'t** be deselected without the use of the `ino-radio-group`.","docsTags":[{"name":"slot","text":"default - Label of the checkbox"}],"encapsulation":"shadow","dependents":["ino-control-item"],"dependencies":[],"dependencyGraph":{"ino-control-item":["ino-radio"]},"props":[{"name":"checked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Initially marks this element as checked.\\nIf another ino-radio element in the same group receives `true`,\\nthe value will be changed to false automatically.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element. Use the same name for radio groups","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"checkedChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user interacts with the radio-button. Contains `true` in `event.detail`.\\nThis event will only be emitted if the current state of the radio button is false.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Label of the checkbox"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-radio-group/ino-radio-group.tsx","fileName":"ino-radio-group.tsx","tag":"ino-radio-group","readme":"# ino-radio-group\\n\\n\\n","overview":"A wrapper component to be used for a group of ino-radio-buttons. This component manages the single selection functionality of a group of ino-radio-buttons.","usage":{},"docs":"A wrapper component to be used for a group of ino-radio-buttons. This component manages the single selection functionality of a group of ino-radio-buttons.","docsTags":[{"name":"slot","text":"default - One or more `ino-radio`"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"alignment","type":"\\"horizontal\\" | \\"vertical\\"","complexType":{"original":"Alignment","resolved":"\\"horizontal\\" | \\"vertical\\"","references":{"Alignment":{"location":"import","path":"../types","id":"src/components/types.ts::Alignment"}}},"mutable":false,"attr":"alignment","reflectToAttr":false,"docs":"Sets the alignment of the radios to either vertical or horizontal.","docsTags":[],"default":"\'horizontal\'","values":[{"value":"horizontal","type":"string"},{"value":"vertical","type":"string"}],"optional":false,"required":false},{"name":"value","type":"number | string","complexType":{"original":"string | number | null","resolved":"number | string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of the radio group.\\nIf there is an ino-radio child with the given value, the radio-button will be checked and the other radio-buttons unchecked.","docsTags":[],"values":[{"type":"number"},{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"valueChange","detail":"number | string","bubbles":true,"complexType":{"original":"number | string","resolved":"number | string","references":{}},"cancelable":true,"composed":true,"docs":"Emits if the user clicks or navigates (via keyboard) to a `<ino-radio>` element within the radio group.\\nContains the `value` of the selected `<ino-radio>`.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-radio`"}],"parts":[],"listeners":[{"event":"checkedChange","capture":false,"passive":false},{"event":"mouseover","capture":false,"passive":true},{"event":"mouseout","capture":false,"passive":true},{"event":"keydown","capture":false,"passive":false}]},{"filePath":"src/components/ino-range/ino-range.tsx","fileName":"ino-range.tsx","tag":"ino-range","readme":"# ino-range\\n\\n","overview":"A range component that allows the user select a number using a slider. It functions as a wrapper around the material [Slider](https://github.com/material-components/material-components-web/tree/master/packages/mdc-slider) component.","usage":{},"docs":"A range component that allows the user select a number using a slider. It functions as a wrapper around the material [Slider](https://github.com/material-components/material-components-web/tree/master/packages/mdc-slider) component.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"discrete","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"discrete","reflectToAttr":false,"docs":"Restricts the slider to only allow discrete values.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"markers","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"markers","reflectToAttr":false,"docs":"Mark this slider to show the steps of the range.\\nOnly applicable if `discrete` is enabled.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"max","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"max","reflectToAttr":false,"docs":"The max value of this element (**required**).","docsTags":[],"values":[{"type":"number"}],"optional":false,"required":false},{"name":"min","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"min","reflectToAttr":false,"docs":"The min value of this element.","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"ranged","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"ranged","reflectToAttr":false,"docs":"Allows to input an interval.\\nUse `valueStart` and `valueEnd` to provide values.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"step","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"step","reflectToAttr":false,"docs":"The step size for this element.\\nOnly applicable if `discrete` is enabled.\\nIs used to calculate the number of markers.","docsTags":[],"default":"1","values":[{"type":"number"}],"optional":true,"required":false},{"name":"value","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element.\\nOnly applicable if not in ranged mode.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"valueEnd","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"value-end","reflectToAttr":false,"docs":"The value of the right thumb.\\nOnly applicable in ranged mode.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"valueStart","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"value-start","reflectToAttr":false,"docs":"The value of the left thumb.\\nOnly applicable in ranged mode.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false}],"methods":[{"name":"setValueToAriaTextMapperFn","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"(fn: (value: number) => string) => Promise<void>","parameters":[{"tags":[{"name":"param","text":"fn A function that maps the numeric value to a user-friendly string."}],"text":"A function that maps the numeric value to a user-friendly string."}],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setValueToAriaTextMapperFn(fn: (value: number) => string) => Promise<void>","parameters":[],"docs":"Should be used to make the component accessible.\\nIf the value is not user-friendly (e.g. a number to represent the day of the week),\\nuse this method to set a function that maps the slider `value` to value of the `aria-valuetext` attribute (e.g. `0` => `monday`).\\n\\ne.g.:\\n\\n`const rangeEl = document.querySelector(\\"ino-range\\")`\\n`rangeEl.setFnToMapValueToAriaText((value: number) => value + \\". day in this week\\")`","docsTags":[{"name":"param","text":"fn A function that maps the numeric value to a user-friendly string."}]}],"events":[{"event":"valueChange","detail":"number","bubbles":true,"complexType":{"original":"number","resolved":"number","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the value changes (not in ranged mode).","docsTags":[]},{"event":"valueEndChange","detail":"number","bubbles":true,"complexType":{"original":"number","resolved":"number","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the end (right) value of the interval changes (in ranged mode).","docsTags":[]},{"event":"valueStartChange","detail":"number","bubbles":true,"complexType":{"original":"number","resolved":"number","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the start (left) value of the interval changes (in ranged mode).","docsTags":[]}],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-segment-button/ino-segment-button.tsx","fileName":"ino-segment-button.tsx","tag":"ino-segment-button","readme":"# ino-segment-button\\n\\n\\n","overview":"A button component that can be used in combination with the ino-segment-group component.","usage":{},"docs":"A button component that can be used in combination with the ino-segment-group component.","docsTags":[{"name":"slot","text":"default - Label of the button"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"checked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Activates the button","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"dense","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"dense","reflectToAttr":false,"docs":"Slightly decreases the size of the button","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables the button","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"Name of the element","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"type","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of the internal button in the element.\\nThis can be \'submit\', \'reset\', or \'button\'.\\nIf not specified, the default type is \'submit\'.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value of the element","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"checkedChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits if the user interacts with the button.\\nIf the button is disabled or checked, the event will not be emitted.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Label of the button"}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-segment-group/ino-segment-group.tsx","fileName":"ino-segment-group.tsx","tag":"ino-segment-group","readme":"# ino-segment-group\\n\\n","overview":"A button group that can be used as an alternative to drop-down menus.","usage":{},"docs":"A button group that can be used as an alternative to drop-down menus.","docsTags":[{"name":"slot","text":"default - One or more `ino-segment-button`"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"Name of the segment group","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"value","type":"any","complexType":{"original":"any","resolved":"any","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"Value of the segment group","docsTags":[],"values":[{"type":"any"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"valueChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Forwards the `checkedChange` events of the `<ino-segment-buttons>` with its value as the detail.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-segment-button`"}],"parts":[],"listeners":[{"event":"checkedChange","capture":false,"passive":false}]},{"filePath":"src/components/ino-select/ino-select.tsx","fileName":"ino-select.tsx","tag":"ino-select","readme":"# ino-select\\n\\n\\n","overview":"A component providing single-option select menus. It functions as a wrapper around the material design\'s [select](https://github.com/material-components/material-components-web/tree/master/packages/mdc-select) component.\\n#### Additional Hints\\nUse the custom `ino-option` component to add options to the select component. The `label` attribute sets an optional floating label for this element.","usage":{},"docs":"A component providing single-option select menus. It functions as a wrapper around the material design\'s [select](https://github.com/material-components/material-components-web/tree/master/packages/mdc-select) component.\\n#### Additional Hints\\nUse the custom `ino-option` component to add options to the select component. The `label` attribute sets an optional floating label for this element.","docsTags":[{"name":"slot","text":"icon-leading - For the icon to be prepended"},{"name":"slot","text":"default - One or more `ino-option(-group)`*"}],"encapsulation":"none","dependents":[],"dependencies":["ino-label"],"dependencyGraph":{"ino-select":["ino-label"]},"props":[{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"error","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"error","reflectToAttr":false,"docs":"Displays the select as invalid if set to true.\\nIf the property is not set or set to false,\\nthe validation is handled by the default validation.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helper","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"helper","reflectToAttr":false,"docs":"A helper text to display below the select element.\\nBy default, non-validation helper text is always visible.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"helperPersistent","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-persistent","reflectToAttr":false,"docs":"When the helper text is serving as a validation message,\\nmake it permanently visible regardless of the select\'s validity.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"helperValidation","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"helper-validation","reflectToAttr":false,"docs":"Indicates the helper text is a validation message.\\nBy default validation message is hidden unless the select is invalid.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"The label of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"outline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"outline","reflectToAttr":false,"docs":"Styles this select box as outlined element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Marks this element as required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"showLabelHint","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-label-hint","reflectToAttr":false,"docs":"If true, an *optional* message is displayed if not required,\\notherwise a * marker is displayed if required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element. (**unmanaged**)","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits when a selection changes. Contains new value in `event.detail`.","docsTags":[]}],"styles":[{"name":"--ino-border-radius","annotation":"prop","docs":"Border-radius of the open select menu"},{"name":"--ino-select-height","annotation":"prop","docs":"Height of the open select menu"},{"name":"--ino-select-icon-color","annotation":"prop","docs":"Icon color"}],"slots":[{"name":"default","docs":"One or more `ino-option(-group)`*"},{"name":"icon-leading","docs":"For the icon to be prepended"}],"parts":[],"listeners":[{"event":"MDCSelect:change","capture":false,"passive":false}]},{"filePath":"src/components/ino-snackbar/ino-snackbar.tsx","fileName":"ino-snackbar.tsx","tag":"ino-snackbar","readme":"# ino-snackbar\\n\\n","overview":"Snackbars provide brief messages about app processes at the bottom of the screen. It functions as a wrapper around the material design\'s [Snackbar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar) component","usage":{},"docs":"Snackbars provide brief messages about app processes at the bottom of the screen. It functions as a wrapper around the material design\'s [Snackbar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-snackbar) component","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":["ino-icon","ino-icon-button"],"dependencyGraph":{"ino-snackbar":["ino-icon","ino-icon-button"],"ino-icon-button":["ino-icon"]},"props":[{"name":"actionText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"action-text","reflectToAttr":false,"docs":"The text to display for the action button.\\nIf no text is defined, the snack bar is displayed in an alternative feedback style.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"message","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"message","reflectToAttr":false,"docs":"[DEPRECATED] Please use the default slot instead\\nThe text message to display.","docsTags":[{"name":"deprecated"}],"deprecation":"","values":[{"type":"string"}],"optional":true,"required":false},{"name":"stayVisibleOnHover","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"stay-visible-on-hover","reflectToAttr":false,"docs":"If set to true, the timeout that closes the snackbar is paused when the user hovers over the snackbar.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"timeout","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"timeout","reflectToAttr":false,"docs":"Sets the timeout in ms until the snackbar disappears. The timeout can\\nbe disabled by setting it to a negative value.","docsTags":[],"default":"5000","values":[{"type":"number"}],"optional":true,"required":false},{"name":"type","type":"\\"error\\" | \\"info\\" | \\"success\\"","complexType":{"original":"SnackbarType","resolved":"\\"error\\" | \\"info\\" | \\"success\\"","references":{"SnackbarType":{"location":"import","path":"../types","id":"src/components/types.ts::SnackbarType"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"Changes the snackbar type. There are three types of messages: info, success, and error.","docsTags":[],"default":"\'info\'","values":[{"value":"error","type":"string"},{"value":"info","type":"string"},{"value":"success","type":"string"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"actionClick","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits as soon as the action button is clicked.","docsTags":[]},{"event":"hideEl","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Event that emits as soon as the snackbar hides.\\nListen to this event to hide or destroy this element.","docsTags":[]}],"styles":[{"name":"--ino-snackbar-bottom","annotation":"prop","docs":"Distance to the bottom edge"},{"name":"--ino-snackbar-left","annotation":"prop","docs":"Distance to the left edge"},{"name":"--ino-snackbar-right","annotation":"prop","docs":"Distance to the right edge"},{"name":"--ino-snackbar-top","annotation":"prop","docs":"Distance to the top edge"}],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-spinner/ino-spinner.tsx","fileName":"ino-spinner.tsx","tag":"ino-spinner","readme":"# ino-spinner\\n\\n","overview":"A component which displays a variety of spinners. Use spinners to show that the app is loading content or performing another process for which the user has to wait.\\n\\nThis component contains three different types of spinners animated with pure CSS. It mainly relies on [Spinkit](http://tobiasahlin.com/spinkit/) and may be extended in future with more types.","usage":{},"docs":"A component which displays a variety of spinners. Use spinners to show that the app is loading content or performing another process for which the user has to wait.\\n\\nThis component contains three different types of spinners animated with pure CSS. It mainly relies on [Spinkit](http://tobiasahlin.com/spinkit/) and may be extended in future with more types.","docsTags":[],"encapsulation":"none","dependents":["ino-button"],"dependencies":[],"dependencyGraph":{"ino-button":["ino-spinner"]},"props":[{"name":"height","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"height","reflectToAttr":false,"docs":"The height of this spinner (default = 40)","docsTags":[],"default":"40","values":[{"type":"number"}],"optional":false,"required":false},{"name":"modal","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"modal","reflectToAttr":false,"docs":"If true, the spinner is shown as modal over the current app page.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"type","type":"\\"bounce\\" | \\"circle\\" | \\"tile\\"","complexType":{"original":"SpinnerType","resolved":"\\"bounce\\" | \\"circle\\" | \\"tile\\"","references":{"SpinnerType":{"location":"import","path":"../types","id":"src/components/types.ts::SpinnerType"}}},"mutable":false,"attr":"type","reflectToAttr":false,"docs":"The type of this spinner.\\nPossible values: `tile` (default), `bounce` or `circle`","docsTags":[],"default":"\'tile\'","values":[{"value":"bounce","type":"string"},{"value":"circle","type":"string"},{"value":"tile","type":"string"}],"optional":false,"required":false},{"name":"width","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"width","reflectToAttr":false,"docs":"The width of this spinner (defaul = 40)","docsTags":[],"default":"40","values":[{"type":"number"}],"optional":false,"required":false}],"methods":[],"events":[],"styles":[],"slots":[],"parts":[],"listeners":[]},{"filePath":"src/components/ino-switch/ino-switch.tsx","fileName":"ino-switch.tsx","tag":"ino-switch","readme":"# ino-switch\\n\\n\\n","overview":"Input switches toggle the state of a single item. Compared to the input checkbox, their changes usually apply without any additional submission.","usage":{},"docs":"Input switches toggle the state of a single item. Compared to the input checkbox, their changes usually apply without any additional submission.","docsTags":[{"name":"slot","text":"default - Label of the switch"},{"name":"slot","text":"icon-on - Icon used for the checked state. The colors of the `color-scheme` will be used."},{"name":"slot","text":"icon-off - Icon used for the unchecked state. The colors of the `color-scheme` will be used."}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"checked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"checked","reflectToAttr":false,"docs":"Marks this element as checked. (**unmanaged**)","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"checkedChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user clicks on the switch to change the `checked` state. Contains the status in `event.detail`.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"Label of the switch"},{"name":"icon-off","docs":"Icon used for the unchecked state. The colors of the `color-scheme` will be used."},{"name":"icon-on","docs":"Icon used for the checked state. The colors of the `color-scheme` will be used."}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-tab/ino-tab.tsx","fileName":"ino-tab.tsx","tag":"ino-tab","readme":"# ino-tab\\n\\n\\n","overview":"Tabs organize and allow navigation between groups of content that are related and at the same hierarchical level. Each Tab governs the visibility of one group of content. It functions as a wrapper around the material [Tab](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab) component.","usage":{},"docs":"Tabs organize and allow navigation between groups of content that are related and at the same hierarchical level. Each Tab governs the visibility of one group of content. It functions as a wrapper around the material [Tab](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab) component.","docsTags":[],"encapsulation":"none","dependents":[],"dependencies":["ino-icon"],"dependencyGraph":{"ino-tab":["ino-icon"]},"props":[{"name":"a11yControls","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"a-1-1y-controls","reflectToAttr":true,"docs":"Contains the ID of the associated tab panel for accessibility purposes.\\nThis property is optional and used to link the tab to its content panel, adhering to WAI-ARIA practices for the tabpanel role.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"a11ySelected","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"a-1-1y-selected","reflectToAttr":true,"docs":"Reflects the selected state of the tab for accessibility purposes.\\nThis property is optional and primarily managed by the parent `ino-tab-bar` component, adhering to WAI-ARIA practices for the tab role.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"icon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"icon","reflectToAttr":false,"docs":"Indicates a leading icon in the tab.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"indicatorContentWidth","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"indicator-content-width","reflectToAttr":false,"docs":"Indicates that the tab only expands to the width of its content.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"[DEPRECATED] Please use the default slot instead.\\nIndicates a label text in the tab.","docsTags":[{"name":"deprecated"}],"deprecation":"","values":[{"type":"string"}],"optional":true,"required":false},{"name":"stacked","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"stacked","reflectToAttr":false,"docs":"Indicates that the tab icon and label should flow vertically instead of horizontally.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false}],"methods":[],"events":[{"event":"interacted","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emitted when the user interacts with the tab.\\nThis event is used by the ino-tab-bar.","docsTags":[]}],"styles":[],"slots":[],"parts":[],"listeners":[{"event":"MDCTab:interacted","capture":false,"passive":false}]},{"filePath":"src/components/ino-tab-bar/ino-tab-bar.tsx","fileName":"ino-tab-bar.tsx","tag":"ino-tab-bar","readme":"# ino-tab-bar\\n\\n\\n","overview":"Tabs organize and allow navigation between groups of content that are related and at the same hierarchical level. The Tab Bar contains the Tab Scroller and Tab components. It functions as a wrapper around the material [Tab Bar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab-bar) component.","usage":{},"docs":"Tabs organize and allow navigation between groups of content that are related and at the same hierarchical level. The Tab Bar contains the Tab Scroller and Tab components. It functions as a wrapper around the material [Tab Bar](https://github.com/material-components/material-components-web/tree/master/packages/mdc-tab-bar) component.","docsTags":[{"name":"slot","text":"default - One or more `ino-tab`"}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"activeTab","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"active-tab","reflectToAttr":false,"docs":"Activates the tab at the given index (**unmanaged**).","docsTags":[],"default":"0","values":[{"type":"number"}],"optional":true,"required":false},{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"auto-focus","reflectToAttr":false,"docs":"Autofocus of tab on activation.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"activeTabChange","detail":"any","bubbles":true,"complexType":{"original":"any","resolved":"any","references":{}},"cancelable":true,"composed":true,"docs":"Emits when a tab changes.\\nContains the index of the activated tab in `event.detail`","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"One or more `ino-tab`"}],"parts":[],"listeners":[{"event":"interacted","capture":false,"passive":false}]},{"filePath":"src/components/ino-table/ino-table.tsx","fileName":"ino-table.tsx","tag":"ino-table","readme":"# ino-table\\n\\n\\n","overview":"The ino-table is a custom table used to display sets of data across multiple columns.\\nIt currently supports different states (selected, active), sorting and loading indication.\\n\\n> The component is based on the [mdc-data-table](https://github.com/material-components/material-components-web/tree/master/packages/mdc-data-table).","usage":{},"docs":"The ino-table is a custom table used to display sets of data across multiple columns.\\nIt currently supports different states (selected, active), sorting and loading indication.\\n\\n> The component is based on the [mdc-data-table](https://github.com/material-components/material-components-web/tree/master/packages/mdc-data-table).","docsTags":[{"name":"slot","text":"default - Table content (data, not header)"},{"name":"slot","text":"header-row - `<tr>` element containing the table header cells (td, th, ino-table-header-cell)"},{"name":"slot","text":"loading-indicator - `<ino-progess-bar>` element used for an additional loading state."}],"encapsulation":"none","dependents":[],"dependencies":[],"dependencyGraph":{},"props":[{"name":"loading","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"loading","reflectToAttr":false,"docs":"True, if the table is loading data.\\n\\nUse this in combination with a `ino-progress-bar` having `slot=\\"loading-indicator\\"` to provide an\\nadditional horizontal loading bar.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"noHover","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"no-hover","reflectToAttr":false,"docs":"If true, disables row hover styling.\\n\\nUseful for simples tables with few rows or columns.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"sortColumnId","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"sort-column-id","reflectToAttr":false,"docs":"Identifier of the column currently sorted by.\\n\\nNeeds to match the column ids provided on `ino-table-header-cell` elements.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"sortDirection","type":"\\"asc\\" | \\"desc\\"","complexType":{"original":"SortDirection","resolved":"\\"asc\\" | \\"desc\\"","references":{"SortDirection":{"location":"import","path":"../../interface","id":"src/interface.d.ts::SortDirection"}}},"mutable":false,"attr":"sort-direction","reflectToAttr":false,"docs":"Direction of the column currently sorted by.","docsTags":[{"name":"See","text":"Set `sort-start` attribute on the respective column to change the sort order."}],"values":[{"value":"asc","type":"string"},{"value":"desc","type":"string"}],"optional":true,"required":false},{"name":"stickyHeader","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"sticky-header","reflectToAttr":false,"docs":"True, if table header stays visible on vertical scroll","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":true,"required":false}],"methods":[],"events":[{"event":"sortChange","detail":"SortDirectionChangeDetails","bubbles":true,"complexType":{"original":"SortDirectionChangeDetails","resolved":"SortDirectionChangeDetails","references":{"SortDirectionChangeDetails":{"location":"import","path":"../../interface","id":"src/interface.d.ts::SortDirectionChangeDetails"}}},"cancelable":true,"composed":true,"docs":"Emits that the sort direction or column id has changed.","docsTags":[]}],"styles":[{"name":"--ino-table-row-height","annotation":"prop","docs":"height of a table row"}],"slots":[{"name":"default","docs":"Table content (data, not header)"},{"name":"header-row","docs":"`<tr>` element containing the table header cells (td, th, ino-table-header-cell)"},{"name":"loading-indicator","docs":"`<ino-progess-bar>` element used for an additional loading state."}],"parts":[],"listeners":[{"event":"sortDirectionChange","capture":false,"passive":false}]},{"filePath":"src/components/ino-table-header-cell/ino-table-header-cell.tsx","fileName":"ino-table-header-cell.tsx","tag":"ino-table-header-cell","readme":"# ino-table-header-cell\\n\\n\\n","overview":"The `ino-table-header-cell` is a particular header cell to provide search and column sort behaviour on `ino-table`\'s.","usage":{},"docs":"The `ino-table-header-cell` is a particular header cell to provide search and column sort behaviour on `ino-table`\'s.","docsTags":[{"name":"slot","text":"default - The search content (input field, list) within the popover."}],"encapsulation":"none","dependents":[],"dependencies":["ino-popover","ino-icon","ino-icon-button"],"dependencyGraph":{"ino-table-header-cell":["ino-popover","ino-icon","ino-icon-button"],"ino-icon-button":["ino-icon"]},"props":[{"name":"autofocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"Marks the header as autofocused (used for searchable header cells).\\n\\nUse this in combination with the `data-ino-focus` attribute on\\nthe actual search target element to focus a specific input element.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"columnId","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"column-id","reflectToAttr":false,"docs":"A unique identifier of the column (used for sorting).","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"Name of the column.","docsTags":[],"values":[{"type":"string"}],"optional":false,"required":false},{"name":"notSortable","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"not-sortable","reflectToAttr":false,"docs":"If true, the cell is **not** sortable.\\nBy default, table header cells are sortable.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"searchIcon","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"search-icon","reflectToAttr":false,"docs":"Identifier of the search icon (default `search`).\\nUsed for date or list search columns.","docsTags":[],"default":"\'search\'","values":[{"type":"string"}],"optional":false,"required":false},{"name":"searched","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"searched","reflectToAttr":false,"docs":"True, if the column has been searched for this column.\\nPersistent state to indicate the user that this column\\nhas a search filter.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"sortDirection","type":"\\"asc\\" | \\"desc\\"","complexType":{"original":"SortDirection","resolved":"\\"asc\\" | \\"desc\\"","references":{"SortDirection":{"location":"import","path":"../../interface","id":"src/interface.d.ts::SortDirection"}}},"mutable":false,"attr":"sort-direction","reflectToAttr":false,"docs":"The current sort direction of the column.","docsTags":[],"values":[{"value":"asc","type":"string"},{"value":"desc","type":"string"}],"optional":true,"required":false},{"name":"sortStart","type":"\\"asc\\" | \\"desc\\"","complexType":{"original":"SortDirection","resolved":"\\"asc\\" | \\"desc\\"","references":{"SortDirection":{"location":"import","path":"../../interface","id":"src/interface.d.ts::SortDirection"}}},"mutable":false,"attr":"sort-start","reflectToAttr":false,"docs":"The initial sort direction state (default `desc`).\\n\\nBy default, all columns are sorted descending followed by ascending.\\nTo switch this order, set sort Start to asc.","docsTags":[],"default":"\'desc\'","values":[{"value":"asc","type":"string"},{"value":"desc","type":"string"}],"optional":false,"required":false}],"methods":[{"name":"setBlur","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setBlur() => Promise<void>","parameters":[],"docs":"Sets blur on the header cell. If searchable, closes the popover.","docsTags":[]},{"name":"setFocus","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setFocus() => Promise<void>","parameters":[],"docs":"Sets focus on the header cell.\\nIf searchable, opens the popover and focuses the `data-ino-focus` target.","docsTags":[]},{"name":"setSearchable","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"(searchable: boolean) => Promise<void>","parameters":[{"tags":[{"name":"param","text":"searchable true, if the cell should be searchable, false otherwise."}],"text":"true, if the cell should be searchable, false otherwise."}],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setSearchable(searchable: boolean) => Promise<void>","parameters":[],"docs":"Updates the search behaviour of this cell.","docsTags":[{"name":"param","text":"searchable true, if the cell should be searchable, false otherwise."}]}],"events":[{"event":"searchFocusChange","detail":"boolean","bubbles":true,"complexType":{"original":"boolean","resolved":"boolean","references":{}},"cancelable":true,"composed":true,"docs":"Emits that the search field focused (true) or blurred (false).","docsTags":[]},{"event":"sortDirectionChange","detail":"SortDirectionChangeDetails","bubbles":true,"complexType":{"original":"SortDirectionChangeDetails","resolved":"SortDirectionChangeDetails","references":{"SortDirectionChangeDetails":{"location":"import","path":"../../interface","id":"src/interface.d.ts::SortDirectionChangeDetails"}}},"cancelable":true,"composed":true,"docs":"Emits that the sort direction has been changed.","docsTags":[]}],"styles":[],"slots":[{"name":"default","docs":"The search content (input field, list) within the popover."}],"parts":[],"listeners":[]},{"filePath":"src/components/ino-textarea/ino-textarea.tsx","fileName":"ino-textarea.tsx","tag":"ino-textarea","readme":"# ino-textarea\\n\\n","overview":"A textarea component with styles. It uses a material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component for its styling.\\n\\n> **Note:** The textarea is always styled in an outlined manner. If you need to use a textarea in combination with other form inputs (`ino-input`), use their respective outline style.","usage":{},"docs":"A textarea component with styles. It uses a material [textfield](https://github.com/material-components/material-components-web/tree/master/packages/mdc-textfield) component for its styling.\\n\\n> **Note:** The textarea is always styled in an outlined manner. If you need to use a textarea in combination with other form inputs (`ino-input`), use their respective outline style.","docsTags":[],"encapsulation":"none","dependents":["ino-markdown-editor"],"dependencies":["ino-label"],"dependencyGraph":{"ino-textarea":["ino-label"],"ino-markdown-editor":["ino-textarea"]},"props":[{"name":"autoFocus","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autofocus","reflectToAttr":false,"docs":"The autofocus of this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"autogrow","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"autogrow","reflectToAttr":false,"docs":"An optional flag to allow the textarea adjust its height to display all the content.\\nThe `rows` attribute can also be used to specify a minimum height. Use CSS to specify\\na max-height for the textarea element. Once the height exceeds the max-height, autogrow\\nwill re-enable the vertical scrollbar.","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"cols","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"cols","reflectToAttr":false,"docs":"The number of cols of this textarea.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"disabled","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"disabled","reflectToAttr":false,"docs":"Disables this element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"The optional floating label of this input field.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"maxlength","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"maxlength","reflectToAttr":false,"docs":"The max length of this element.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"minlength","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"minlength","reflectToAttr":false,"docs":"The min length of this element.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"name","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"name","reflectToAttr":false,"docs":"The name of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"outline","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"outline","reflectToAttr":false,"docs":"Styles the input field as outlined element.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"placeholder","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"placeholder","reflectToAttr":false,"docs":"The placeholder of this element.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"required","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"required","reflectToAttr":false,"docs":"Marks this element as required.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"rows","type":"number","complexType":{"original":"number","resolved":"number","references":{}},"mutable":false,"attr":"rows","reflectToAttr":false,"docs":"The number of rows of this textarea.","docsTags":[],"values":[{"type":"number"}],"optional":true,"required":false},{"name":"showCharacterCounter","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-character-counter","reflectToAttr":false,"docs":"Displays the number of characters. The maxlength-property must be set.","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"showLabelHint","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"show-label-hint","reflectToAttr":false,"docs":"If true, an *optional* message is displayed if not required,\\notherwise a * marker is displayed if required","docsTags":[],"values":[{"type":"boolean"}],"optional":true,"required":false},{"name":"value","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"value","reflectToAttr":false,"docs":"The value of this element. (**unmanaged**)","docsTags":[],"default":"\'\'","values":[{"type":"string"}],"optional":true,"required":false}],"methods":[{"name":"setBlur","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setBlur() => Promise<void>","parameters":[],"docs":"Sets blur on the native `textarea`.\\nUse this method instead of the global `textarea.blur()`.","docsTags":[]},{"name":"setFocus","returns":{"type":"Promise<void>","docs":""},"complexType":{"signature":"() => Promise<void>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<void>"},"signature":"setFocus() => Promise<void>","parameters":[],"docs":"Sets focus on the native `textarea`.\\nUse this method instead of the global `textarea.focus()`.","docsTags":[]}],"events":[{"event":"inoBlur","detail":"void","bubbles":false,"complexType":{"original":"void","resolved":"void","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the textarea is blurred and validates email input","docsTags":[]},{"event":"valueChange","detail":"string","bubbles":true,"complexType":{"original":"string","resolved":"string","references":{}},"cancelable":true,"composed":true,"docs":"Emits when the user types something in. Contains typed input in `event.detail`","docsTags":[]}],"styles":[{"name":"--ino-textarea-caret-color","annotation":"prop","docs":"color of the caret"},{"name":"--ino-textarea-label-color","annotation":"prop","docs":"color of the label"},{"name":"--ino-textarea-outline-color","annotation":"prop","docs":"outline color of the textarea"}],"slots":[],"parts":[],"listeners":[{"event":"change","capture":false,"passive":false},{"event":"input","capture":false,"passive":false}]},{"filePath":"src/components/ino-tooltip/ino-tooltip.tsx","fileName":"ino-tooltip.tsx","tag":"ino-tooltip","readme":"# ino-tooltip\\n\\n\\n","overview":"A tooltip component that displays text when users hover over, focus on, or tap an element.\\n\\n> Note: A tooltip can only display plain text. For more complex dialogs, see the [Popover](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-popover--default-usage) component.","usage":{},"docs":"A tooltip component that displays text when users hover over, focus on, or tap an element.\\n\\n> Note: A tooltip can only display plain text. For more complex dialogs, see the [Popover](https://elements.inovex.de/dist/latest/storybook/?path=/story/notification-ino-popover--default-usage) component.","docsTags":[{"name":"slot","text":"default The text shown in the tooltip."}],"encapsulation":"none","dependents":["ino-fab"],"dependencies":[],"dependencyGraph":{"ino-fab":["ino-tooltip"]},"props":[{"name":"arrow","type":"boolean","complexType":{"original":"boolean","resolved":"boolean","references":{}},"mutable":false,"attr":"arrow","reflectToAttr":false,"docs":"Shows an arrow","docsTags":[],"default":"false","values":[{"type":"boolean"}],"optional":false,"required":false},{"name":"colorScheme","type":"\\"dark\\" | \\"light\\" | \\"primary\\"","complexType":{"original":"TippyThemes","resolved":"\\"dark\\" | \\"light\\" | \\"primary\\"","references":{"TippyThemes":{"location":"import","path":"../types","id":"src/components/types.ts::TippyThemes"}}},"mutable":false,"attr":"color-scheme","reflectToAttr":false,"docs":"Sets the color scheme of the tooltip.\\n\\nValid options include: `light`, `dark` or `primary`","docsTags":[],"default":"\'primary\'","values":[{"value":"dark","type":"string"},{"value":"light","type":"string"},{"value":"primary","type":"string"}],"optional":false,"required":false},{"name":"delay","type":"[number, number] | number","complexType":{"original":"number | [number, number]","resolved":"[number, number] | number","references":{}},"mutable":false,"attr":"delay","reflectToAttr":false,"docs":"The delay in milliseconds before `ino-tooltip` shows up or hides.\\n\\nIf only one number is given, the show and hide delay get the given delay duration.\\n\\nIf two numbers are given e.g. `[500, 200]` the show delay is 500ms and the hide delay is 200ms.\\n\\nDefaults to 0ms.","docsTags":[],"default":"0","values":[{"type":"[number, number]"},{"type":"number"}],"optional":true,"required":false},{"name":"for","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"for","reflectToAttr":false,"docs":"The target id the tooltip belongs to.\\nIf not given, the tooltip is attached to the parent component.","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"headerText","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"header-text","reflectToAttr":false,"docs":"Adds a optional header text to the `ino-tooltip`","docsTags":[],"values":[{"type":"string"}],"optional":true,"required":false},{"name":"label","type":"string","complexType":{"original":"string","resolved":"string","references":{}},"mutable":false,"attr":"label","reflectToAttr":false,"docs":"The text shown in the tooltip.\\n\\n[DEPRECATED] Please use the default slot instead","docsTags":[{"name":"deprecated"}],"deprecation":"","values":[{"type":"string"}],"optional":true,"required":false},{"name":"placement","type":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","complexType":{"original":"Placement","resolved":"\\"auto\\" | \\"auto-end\\" | \\"auto-start\\" | \\"bottom\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left\\" | \\"left-end\\" | \\"left-start\\" | \\"right\\" | \\"right-end\\" | \\"right-start\\" | \\"top\\" | \\"top-end\\" | \\"top-start\\"","references":{"Placement":{"location":"import","path":"tippy.js","id":"../../node_modules/tippy.js/index.d.ts::Placement"}}},"mutable":false,"attr":"placement","reflectToAttr":false,"docs":"The placement of the tooltip.\\nAccepted values: `top(-start, -end)`, `right(-start, -end)`,\\n`bottom(-start, -end)`, `left(-start, -end)`","docsTags":[],"default":"\'auto\'","values":[{"value":"auto","type":"string"},{"value":"auto-end","type":"string"},{"value":"auto-start","type":"string"},{"value":"bottom","type":"string"},{"value":"bottom-end","type":"string"},{"value":"bottom-start","type":"string"},{"value":"left","type":"string"},{"value":"left-end","type":"string"},{"value":"left-start","type":"string"},{"value":"right","type":"string"},{"value":"right-end","type":"string"},{"value":"right-start","type":"string"},{"value":"top","type":"string"},{"value":"top-end","type":"string"},{"value":"top-start","type":"string"}],"optional":false,"required":false},{"name":"trigger","type":"\\"click focus mouseenter\\" | \\"click focus\\" | \\"click mouseenter focus\\" | \\"click mouseenter\\" | \\"click\\" | \\"focus click mouseenter\\" | \\"focus click\\" | \\"focus mouseenter click\\" | \\"focus mouseenter\\" | \\"focus\\" | \\"mouseenter click focus\\" | \\"mouseenter click\\" | \\"mouseenter focus click\\" | \\"mouseenter focus\\" | \\"mouseenter\\"","complexType":{"original":"TooltipTrigger","resolved":"\\"click focus mouseenter\\" | \\"click focus\\" | \\"click mouseenter focus\\" | \\"click mouseenter\\" | \\"click\\" | \\"focus click mouseenter\\" | \\"focus click\\" | \\"focus mouseenter click\\" | \\"focus mouseenter\\" | \\"focus\\" | \\"mouseenter click focus\\" | \\"mouseenter click\\" | \\"mouseenter focus click\\" | \\"mouseenter focus\\" | \\"mouseenter\\"","references":{"TooltipTrigger":{"location":"import","path":"../types","id":"src/components/types.ts::TooltipTrigger"}}},"mutable":false,"attr":"trigger","reflectToAttr":false,"docs":"The trigger to show the tooltip - either `click`, `hover` or `focus`.\\nMultiple triggers possible by separating them with a space.","docsTags":[],"default":"\'mouseenter focus\'","values":[{"value":"click focus mouseenter","type":"string"},{"value":"click focus","type":"string"},{"value":"click mouseenter focus","type":"string"},{"value":"click mouseenter","type":"string"},{"value":"click","type":"string"},{"value":"focus click mouseenter","type":"string"},{"value":"focus click","type":"string"},{"value":"focus mouseenter click","type":"string"},{"value":"focus mouseenter","type":"string"},{"value":"focus","type":"string"},{"value":"mouseenter click focus","type":"string"},{"value":"mouseenter click","type":"string"},{"value":"mouseenter focus click","type":"string"},{"value":"mouseenter focus","type":"string"},{"value":"mouseenter","type":"string"}],"optional":false,"required":false}],"methods":[{"name":"getTippyInstance","returns":{"type":"Promise<any>","docs":""},"complexType":{"signature":"() => Promise<any>","parameters":[],"references":{"Promise":{"location":"global","id":"global::Promise"}},"return":"Promise<any>"},"signature":"getTippyInstance() => Promise<any>","parameters":[],"docs":"Returns the internally used tippy.js instance\\nFor more informations see: https://atomiks.github.io/tippyjs/","docsTags":[]}],"events":[],"styles":[],"slots":[{"name":"default The text shown in the tooltip.","docs":""}],"parts":[],"listeners":[]}],"typeLibrary":{"src/components/types.ts::KeyValue":{"declaration":"{\\n  key: string;\\n  value: string;\\n}","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::ButtonType":{"declaration":"export type ButtonType = \'button\' | \'submit\' | \'reset\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::ButtonVariants":{"declaration":"export type ButtonVariants = \'filled\' | \'outlined\' | \'text\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::ChipSurface":{"declaration":"export type ChipSurface = \'solid\' | \'outline\';","docstring":"","path":"src/components/types.ts"},"src/components/ino-datepicker/picker-factory.ts::PickerTypeKeys":{"declaration":"export type PickerTypeKeys = (typeof PickerTypes)[keyof typeof PickerTypes];","docstring":"","path":"src/components/ino-datepicker/picker-factory.ts"},"src/components/types.ts::DialogCloseAction":{"declaration":"string","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::DialogSubmitAction":{"declaration":"string","docstring":"","path":"src/components/types.ts"},"../../node_modules/tippy.js/index.d.ts::Placement":{"declaration":"export declare type Placement = AutoPlacement | BasePlacement | VariationPlacement;","docstring":"","path":"../../node_modules/tippy.js/index.d.ts"},"src/components/types.ts::Locations":{"declaration":"export type Locations = HorizontalLocation | VerticalLocation;","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::VerticalLocation":{"declaration":"export type VerticalLocation = \'top\' | \'bottom\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::HorizontalLocation":{"declaration":"export type HorizontalLocation = \'left\' | \'right\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::ImageDecodingTypes":{"declaration":"export type ImageDecodingTypes = \'async\' | \'auto\' | \'sync\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::InputType":{"declaration":"export type InputType =\\n  | \'color\'\\n  | \'email\'\\n  | \'number\'\\n  | \'password\'\\n  | \'search\'\\n  | \'tel\'\\n  | \'text\'\\n  | \'url\'\\n  | \'week\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::UserInputInterceptor":{"declaration":"(value: string) => string","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::ViewModeUnion":{"declaration":"\\"markdown\\" | \\"preview\\" | \\"readonly\\"","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::NavDrawerAnchor":{"declaration":"export type NavDrawerAnchor = \'left\' | \'right\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::NavDrawerVariant":{"declaration":"export type NavDrawerVariant = \'docked\' | \'dismissible\' | \'modal\' | \'mobile\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::NavDrawerLabels":{"declaration":"{\\n  content: string;\\n  footer: string;\\n  toggleBtn: string;\\n}","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::TippyThemes":{"declaration":"export type TippyThemes = \'light\' | \'dark\' | \'primary\';","docstring":"","path":"src/components/types.ts"},"../../node_modules/tippy.js/index.d.ts::Props":{"declaration":"export interface Props extends LifecycleHooks, RenderProps {\\n  animateFill: boolean;\\n  appendTo: \'parent\' | Element | ((ref: Element) => Element);\\n  aria: {\\n    content?: \'auto\' | \'describedby\' | \'labelledby\' | null;\\n    expanded?: \'auto\' | boolean;\\n  };\\n  delay: number | [number | null, number | null];\\n  duration: number | [number | null, number | null];\\n  followCursor: boolean | \'horizontal\' | \'vertical\' | \'initial\';\\n  getReferenceClientRect: null | GetReferenceClientRect;\\n  hideOnClick: boolean | \'toggle\';\\n  ignoreAttributes: boolean;\\n  inlinePositioning: boolean;\\n  interactive: boolean;\\n  interactiveBorder: number;\\n  interactiveDebounce: number;\\n  moveTransition: string;\\n  offset:\\n    | [number, number]\\n    | (({\\n        placement,\\n        popper,\\n        reference,\\n      }: {\\n        placement: Placement;\\n        popper: Popper.Rect;\\n        reference: Popper.Rect;\\n      }) => [number, number]);\\n  placement: Placement;\\n  plugins: Plugin<unknown>[];\\n  popperOptions: Partial<Popper.Options>;\\n  render:\\n    | ((\\n        instance: Instance\\n      ) => {\\n        popper: PopperElement;\\n        onUpdate?: (prevProps: Props, nextProps: Props) => void;\\n      })\\n    | null;\\n  showOnCreate: boolean;\\n  sticky: boolean | \'reference\' | \'popper\';\\n  touch: boolean | \'hold\' | [\'hold\', number];\\n  trigger: string;\\n  triggerTarget: Element | Element[] | null;\\n}","docstring":"","path":"../../node_modules/tippy.js/index.d.ts"},"src/components/types.ts::TooltipTrigger":{"declaration":"export type TooltipTrigger =\\n  | \'mouseenter\'\\n  | \'mouseenter focus\'\\n  | \'mouseenter click\'\\n  | \'mouseenter focus click\'\\n  | \'mouseenter click focus\'\\n  | \'focus\'\\n  | \'focus mouseenter\'\\n  | \'focus click\'\\n  | \'focus mouseenter click\'\\n  | \'focus click mouseenter\'\\n  | \'click\'\\n  | \'click mouseenter\'\\n  | \'click focus\'\\n  | \'click mouseenter focus\'\\n  | \'click focus mouseenter\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::Alignment":{"declaration":"export type Alignment = \'horizontal\' | \'vertical\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::SnackbarType":{"declaration":"export type SnackbarType = \'info\' | \'success\' | \'error\';","docstring":"","path":"src/components/types.ts"},"src/components/types.ts::SpinnerType":{"declaration":"export type SpinnerType = \'tile\' | \'bounce\' | \'circle\';","docstring":"","path":"src/components/types.ts"},"src/interface.d.ts::SortDirection":{"declaration":"export type SortDirection = \'asc\' | \'desc\';","docstring":"","path":"src/interface.d.ts"},"src/interface.d.ts::SortDirectionChangeDetails":{"declaration":"export interface SortDirectionChangeDetails {\\n  columnId: string;\\n  sortDirection: SortDirection;\\n}","docstring":"","path":"src/interface.d.ts"}}}')},"./package.json":module=>{"use strict";module.exports={i8:"9.0.0"}}},__webpack_require__=>{__webpack_require__.O(0,[1442],(()=>{return moduleId="./storybook-config-entry.js",__webpack_require__(__webpack_require__.s=moduleId);var moduleId}));__webpack_require__.O()}]);