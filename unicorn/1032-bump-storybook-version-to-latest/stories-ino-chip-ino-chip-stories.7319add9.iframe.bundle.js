(self.webpackChunk_inovex_de_elements_storybook=self.webpackChunk_inovex_de_elements_storybook||[]).push([[8574],{"./src/stories/ino-chip/ino-chip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FillOutline:()=>FillOutline,FillSolid:()=>FillSolid,Filter:()=>Filter,Icons:()=>Icons,NotClickable:()=>NotClickable,Remove:()=>Remove,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ino_chip_stories});var lit_html=__webpack_require__("../../node_modules/lit-html/lit-html.js"),StoryWrapper=__webpack_require__("./src/stories/StoryWrapper.ts"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ino_chip=__webpack_require__("../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-chip/ino-chip.scss"),ino_chip_default=__webpack_require__.n(ino_chip),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ino_chip_default(),options);ino_chip_default()&&ino_chip_default().locals&&ino_chip_default().locals;const InoChipMeta={title:"Buttons/ino-chip",component:"ino-chip",parameters:{actions:{handles:["chipClicked","chipRemoved"]}},render:args=>lit_html.dy`
    <ino-chip
      class="customizable-chip"
      disabled="${args.disabled}"
      fill="${args.fill}"
      removable="${args.removable}"
      selectable="${args.selectable}"
      selected="${args.selected}"
      value="${args.value}"
      clickable="${args.clickable}"
    >
      Label
    </ino-chip>
  `,args:{disabled:!1,fill:"solid",removable:!1,selectable:!1,selected:!1,clickable:!0,value:""}},ino_chip_stories=InoChipMeta,Default=(0,StoryWrapper.Z)({...InoChipMeta}),FillSolid=(0,StoryWrapper.Z)({...Default,docsFromProperty:"fill",args:{fill:"solid"}}),FillOutline=(0,StoryWrapper.Z)({...Default,docsFromProperty:"fill",args:{fill:"outline"}}),Icons=(0,StoryWrapper.Z)({...Default,render:()=>lit_html.dy`
    <div class="ino-chip-story">
      <ino-chip>
        Leading
        <ino-icon slot="icon-leading" icon="star"></ino-icon>
      </ino-chip>
      <ino-chip>
        Trailing
        <ino-icon slot="icon-trailing" icon="star"></ino-icon>
      </ino-chip>
      <ino-chip>
        <span>Leading & Trailing</span>
        <ino-icon slot="icon-leading" icon="star"></ino-icon>
        <ino-icon slot="icon-trailing" icon="star"></ino-icon>
      </ino-chip>
    </div>
  `});Icons.story={parameters:{docs:{storyDescription:"In order to include icons, use the `icon-leading` or `icon-trailing` slot"}}};const Filter=(0,StoryWrapper.Z)({...Default,render:()=>{const selectedChips=new Set;return lit_html.dy`
      <div class="ino-chip-story">
        ${["Chip 1","Chip 2","Chip 3"].map((value=>lit_html.dy` <ino-chip
            value="${value}"
            selectable
            @chipClicked="${ev=>(chip=>{if(!chip?.value)return;const isSelected=selectedChips.has(chip.value);chip.selected=!isSelected,isSelected?selectedChips.delete(chip.value):selectedChips.add(chip.value)})(ev.target)}"
            >${value}
          </ino-chip>`))}
      </div>
    `}});Filter.story={parameters:{docs:{storyDescription:"In order to use ino-chips as filter, use `selectable` on each element"}}};const Remove=(0,StoryWrapper.Z)({...Default,render:()=>lit_html.dy`
      <div class="ino-chip-story">
        ${["Chip 1","Chip 2","Chip 3"].map(((value,index)=>lit_html.dy` <ino-chip
            value="${value}"
            removable="${0!==index}"
            @chipRemoved="${ev=>ev.target.remove()}"
            >${value}
          </ino-chip>`))}
      </div>
    `});Remove.story={parameters:{docs:{storyDescription:"In order to make ino-chip-elements removable, add `removable`. This will add a close icon on the right side of this chip which emits the `removeChip` event on click."}}};const NotClickable=(0,StoryWrapper.Z)({...Default,docsFromProperty:"clickable",args:{clickable:!1}});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"Story({\n  ...InoChipMeta\n})",...Default.parameters?.docs?.source}}},FillSolid.parameters={...FillSolid.parameters,docs:{...FillSolid.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'fill',\n  args: {\n    fill: 'solid'\n  }\n})",...FillSolid.parameters?.docs?.source}}},FillOutline.parameters={...FillOutline.parameters,docs:{...FillOutline.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'fill',\n  args: {\n    fill: 'outline'\n  }\n})",...FillOutline.parameters?.docs?.source}}},Icons.parameters={...Icons.parameters,docs:{...Icons.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: () => html`\n    <div class="ino-chip-story">\n      <ino-chip>\n        Leading\n        <ino-icon slot="icon-leading" icon="star"></ino-icon>\n      </ino-chip>\n      <ino-chip>\n        Trailing\n        <ino-icon slot="icon-trailing" icon="star"></ino-icon>\n      </ino-chip>\n      <ino-chip>\n        <span>Leading & Trailing</span>\n        <ino-icon slot="icon-leading" icon="star"></ino-icon>\n        <ino-icon slot="icon-trailing" icon="star"></ino-icon>\n      </ino-chip>\n    </div>\n  `\n})',...Icons.parameters?.docs?.source},description:{story:"In order to include icons, use the `icon-leading` or `icon-trailing` slot",...Icons.parameters?.docs?.description}}},Filter.parameters={...Filter.parameters,docs:{...Filter.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  render: () => {\n    const values = ['Chip 1', 'Chip 2', 'Chip 3'];\n    const selectedChips = new Set<string>();\n    const handleClick = (chip: HTMLInoChipElement | undefined) => {\n      if (!chip?.value) {\n        return;\n      }\n      const isSelected = selectedChips.has(chip.value);\n      chip.selected = !isSelected;\n      if (isSelected) {\n        selectedChips.delete(chip.value);\n      } else {\n        selectedChips.add(chip.value);\n      }\n    };\n    return html`\n      <div class=\"ino-chip-story\">\n        ${values.map(value => html` <ino-chip\n            value=\"${value}\"\n            selectable\n            @chipClicked=\"${ev => handleClick(ev.target)}\"\n            >${value}\n          </ino-chip>`)}\n      </div>\n    `;\n  }\n})",...Filter.parameters?.docs?.source},description:{story:"In order to use ino-chips as filter, use `selectable` on each element",...Filter.parameters?.docs?.description}}},Remove.parameters={...Remove.parameters,docs:{...Remove.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: () => {\n    const chips = [\'Chip 1\', \'Chip 2\', \'Chip 3\'];\n    const handleClick = (chip: HTMLInoChipElement) => chip.remove();\n    return html`\n      <div class="ino-chip-story">\n        ${chips.map((value, index) => html` <ino-chip\n            value="${value}"\n            removable="${index !== 0}"\n            @chipRemoved="${ev => handleClick(ev.target)}"\n            >${value}\n          </ino-chip>`)}\n      </div>\n    `;\n  }\n})',...Remove.parameters?.docs?.source},description:{story:"In order to make ino-chip-elements removable, add `removable`. This will add a close icon on the right side of this chip which emits the `removeChip` event on click.",...Remove.parameters?.docs?.description}}},NotClickable.parameters={...NotClickable.parameters,docs:{...NotClickable.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'clickable',\n  args: {\n    clickable: false\n  }\n})",...NotClickable.parameters?.docs?.source}}};const __namedExportsOrder=["Default","FillSolid","FillOutline","Icons","Filter","Remove","NotClickable"]},"./src/stories/StoryWrapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>Story});var _elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./elements-stencil-docs.json"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/lodash/lodash.js");function Story(meta){if(meta.docsFromProperty){if(!meta.component)throw new Error("Component name needs to be provided");const doc=function findPropertyDocumentationInJsonDoc(tagName,property){const componentDocs=_elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__.components.find((doc=>doc.tag===tagName));if(!componentDocs)throw new Error(`Could not find docs for component ${tagName}.`);const propDocs=componentDocs.props.find((prop=>prop.name===property));if(!propDocs)throw new Error(`Could not find docs for property ${property}.`);return propDocs.docs}(meta.component,meta.docsFromProperty);return(0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)({},meta,{parameters:{docs:{description:{story:doc}}}})}return meta}},"../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-chip/ino-chip.scss":(module,exports,__webpack_require__)=>{(module.exports=__webpack_require__("../../node_modules/css-loader/lib/css-base.js")(!1)).push([module.id,".ino-chip-story{display:flex;gap:10px;padding:3px 0}",""])}}]);
//# sourceMappingURL=stories-ino-chip-ino-chip-stories.7319add9.iframe.bundle.js.map