(self.webpackChunk_inovex_de_elements_storybook=self.webpackChunk_inovex_de_elements_storybook||[]).push([[6247],{"./src/stories/ino-avatar/ino-avatar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorSecondary:()=>ColorSecondary,Default:()=>Default,Initials:()=>Initials,Interactive:()=>Interactive,LoadingAvatar:()=>LoadingAvatar,VariantDashed:()=>VariantDashed,VariantDashedInteractive:()=>VariantDashedInteractive,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ino_avatar_stories});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),lit_html=__webpack_require__("../../node_modules/lit-html/lit-html.js"),StoryWrapper=__webpack_require__("./src/stories/StoryWrapper.ts"),injectStylesIntoStyleTag=__webpack_require__("../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),ino_avatar=__webpack_require__("../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-avatar/ino-avatar.scss"),ino_avatar_default=__webpack_require__.n(ino_avatar),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(ino_avatar_default(),options);ino_avatar_default()&&ino_avatar_default().locals&&ino_avatar_default().locals;const avatar_namespaceObject=__webpack_require__.p+"static/media/avatar.016fbc44.jpg",InoAvatarMeta={title:"Graphic/ino-avatar",component:"ino-avatar",decorators:[story=>((0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)((()=>{const handleCheckedChange=e=>{const checkbox=e.target,parentDiv=checkbox.closest("div"),avatar=parentDiv?.querySelector("ino-avatar");checkbox.checked=e.detail,avatar.setAttribute("loading",checkbox.checked),checkbox.indeterminate&&(checkbox.indeterminate=!1)},checkboxes=document.querySelectorAll("ino-checkbox");return checkboxes.forEach((c=>c.addEventListener("checkedChange",handleCheckedChange))),()=>checkboxes.forEach((c=>c.removeEventListener("checkedChange",handleCheckedChange)))})),story())],render:args=>lit_html.dy`
    <ino-avatar
      initials="${args.initials}"
      interactive="${args.interactive}"
      variant="${args.variant}"
      src="${args.src}"
      color-secondary="${args.colorSecondary}"
      a11y-label="${args.a11yLabel}"
      alt="${args.alt}"
      .loading="${args.loading}"
    >
    </ino-avatar>
  `,args:{initials:"JD",interactive:!1,variant:"solid",src:avatar_namespaceObject,colorSecondary:!1,a11yLabel:"User avatar",alt:"Jane Doe",loading:void 0}},ino_avatar_stories=InoAvatarMeta,Default=(0,StoryWrapper.Z)({...InoAvatarMeta}),Interactive=(0,StoryWrapper.Z)({...Default,docsFromProperty:"interactive",args:{interactive:!0}}),ColorSecondary=(0,StoryWrapper.Z)({...Default,docsFromProperty:"colorSecondary",args:{colorSecondary:!0}}),VariantDashed=(0,StoryWrapper.Z)({...Default,docsFromProperty:"variant",args:{variant:"dashed"}}),VariantDashedInteractive=(0,StoryWrapper.Z)({...Default,docsFromProperty:"variant",args:{variant:"dashed",interactive:!0}}),Initials=(0,StoryWrapper.Z)({...Default,render:()=>lit_html.dy`
    <ino-avatar initials="JD" interactive="false" variant="solid" src="">
    </ino-avatar>
  `});Initials.story={parameters:{docs:{storyDescription:"The initials of the avatar if the `src` is not defined or `img` fails to load."}}};const WithIcon=(0,StoryWrapper.Z)({...Default,args:{initials:"JD",interactive:!1,variant:"solid",src:avatar_namespaceObject},render:args=>lit_html.dy`
    <ino-avatar
      initials="${args.initials}"
      interactive="${args.interactive}"
      variant="${args.variant}"
      src="${args.src}"
    >
      <ino-icon
        slot="icon-slot"
        style="--ino-icon-color: #6CF070;"
        icon="checkmark"
      ></ino-icon>
    </ino-avatar>
  `});WithIcon.story={parameters:{docs:{storyDescription:"Add icons to the ino-avatar element by adding a `slot` and an `icon`."}}};const LoadingAvatar=(0,StoryWrapper.Z)({...Default,docsFromProperty:"loading",render:args=>lit_html.dy`
    <div class="avatar-loading-container">
      <ino-avatar
        initials="${args.initials}"
        interactive="${args.interactive}"
        variant="${args.variant}"
        loading="true"
        src="${args.src}"
      >
      </ino-avatar>
      <ino-checkbox
        checked="true"
        selection="true"
        name="toggle-loading-checkbox"
        >Loading</ino-checkbox
      >
    </div>
  `});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"Story({\n  ...InoAvatarMeta\n})",...Default.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'interactive',\n  args: {\n    interactive: true\n  }\n})",...Interactive.parameters?.docs?.source}}},ColorSecondary.parameters={...ColorSecondary.parameters,docs:{...ColorSecondary.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'colorSecondary',\n  args: {\n    colorSecondary: true\n  }\n})",...ColorSecondary.parameters?.docs?.source}}},VariantDashed.parameters={...VariantDashed.parameters,docs:{...VariantDashed.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'variant',\n  args: {\n    variant: 'dashed'\n  }\n})",...VariantDashed.parameters?.docs?.source}}},VariantDashedInteractive.parameters={...VariantDashedInteractive.parameters,docs:{...VariantDashedInteractive.parameters?.docs,source:{originalSource:"Story({\n  ...Default,\n  docsFromProperty: 'variant',\n  args: {\n    variant: 'dashed',\n    interactive: true\n  }\n})",...VariantDashedInteractive.parameters?.docs?.source}}},Initials.parameters={...Initials.parameters,docs:{...Initials.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  render: () => html`\n    <ino-avatar initials="JD" interactive="false" variant="solid" src="">\n    </ino-avatar>\n  `\n})',...Initials.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  args: {\n    initials: \'JD\',\n    interactive: false,\n    variant: \'solid\',\n    src: avatarImg\n  },\n  render: args => html`\n    <ino-avatar\n      initials="${args.initials}"\n      interactive="${args.interactive}"\n      variant="${args.variant}"\n      src="${args.src}"\n    >\n      <ino-icon\n        slot="icon-slot"\n        style="--ino-icon-color: #6CF070;"\n        icon="checkmark"\n      ></ino-icon>\n    </ino-avatar>\n  `\n})',...WithIcon.parameters?.docs?.source},description:{story:"Add icons to the ino-avatar element by adding a `slot` and an `icon`.",...WithIcon.parameters?.docs?.description}}},LoadingAvatar.parameters={...LoadingAvatar.parameters,docs:{...LoadingAvatar.parameters?.docs,source:{originalSource:'Story({\n  ...Default,\n  docsFromProperty: \'loading\',\n  render: args => html`\n    <div class="avatar-loading-container">\n      <ino-avatar\n        initials="${args.initials}"\n        interactive="${args.interactive}"\n        variant="${args.variant}"\n        loading="true"\n        src="${args.src}"\n      >\n      </ino-avatar>\n      <ino-checkbox\n        checked="true"\n        selection="true"\n        name="toggle-loading-checkbox"\n        >Loading</ino-checkbox\n      >\n    </div>\n  `\n})',...LoadingAvatar.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Interactive","ColorSecondary","VariantDashed","VariantDashedInteractive","Initials","WithIcon","LoadingAvatar"]},"./src/stories/StoryWrapper.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>Story});var _elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./elements-stencil-docs.json"),lodash__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/lodash/lodash.js");function Story(meta){if(meta.docsFromProperty){if(!meta.component)throw new Error("Component name needs to be provided");const doc=function findPropertyDocumentationInJsonDoc(tagName,property){const componentDocs=_elements_stencil_docs__WEBPACK_IMPORTED_MODULE_0__.components.find((doc=>doc.tag===tagName));if(!componentDocs)throw new Error(`Could not find docs for component ${tagName}.`);const propDocs=componentDocs.props.find((prop=>prop.name===property));if(!propDocs)throw new Error(`Could not find docs for property ${property}.`);return propDocs.docs}(meta.component,meta.docsFromProperty);return(0,lodash__WEBPACK_IMPORTED_MODULE_1__.merge)({},meta,{parameters:{docs:{description:{story:doc}}}})}return meta}},"../../node_modules/css-loader/index.js!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[13].use[2]!./src/stories/ino-avatar/ino-avatar.scss":(module,exports,__webpack_require__)=>{(module.exports=__webpack_require__("../../node_modules/css-loader/lib/css-base.js")(!1)).push([module.id,".avatar-loading-container{display:flex;align-items:center;gap:1rem}",""])}}]);
//# sourceMappingURL=stories-ino-avatar-ino-avatar-stories.f2d3ffcc.iframe.bundle.js.map