{"version":3,"file":"js/4967-legacy.0ba0f6f5.js","mappings":"mSAQMA,G,QAAgB,2mBAEhBC,EAAO,WACX,WAAYC,GAAS,4BACnBC,EAAAA,EAAAA,GAAiBC,KAAMF,GAKvBE,KAAKC,YAAc,UAMnBD,KAAKE,UAAY,OAKjBF,KAAKG,QAAU,mBACfH,KAAKI,eAAiB,kBAAM,EAAKC,IAAMC,SAASC,eAAe,EAAKF,KAAO,EAAKG,GAAGC,aAAa,CAClG,CAyEI,OAzEH,iFACD,oGACQT,KAAKU,SAAQ,gDACpB,qDAHA,IAGA,iEACD,oGACQV,KAAKU,SAAQ,gDACpB,qDAHA,IAGA,qEACD,oGACQV,KAAKU,SAAQ,gDACpB,qDAHA,IAID,uEAIA,6GACSV,KAAKW,iBAAe,gDAC5B,qDAND,IAOA,uEACA,oGACQX,KAAKU,SAAQ,gDACpB,qDAHD,IAGC,6DACD,0GACQV,KAAKY,UAAS,OACgB,GAApCZ,KAAKa,OAASb,KAAKI,iBACdJ,KAAKa,OAAQ,CAAF,+BAER,IAAIC,SAAQ,SAACC,GAAO,OAAKC,WAAWD,EAAS,IAAK,IAAC,OACzDf,KAAKa,OAASb,KAAKI,iBAAiB,UAEjCJ,KAAKa,OAAQ,CAAF,qBACR,IAAII,MAAM,uBAAD,OAAwBjB,KAAKK,IAAG,2CAAyC,OAEpFa,EAAU,CACdC,QAASnB,KAAKQ,GACdY,SAAU,IACVlB,UAAWF,KAAKE,UAChBC,QAASH,KAAKG,SAEhBH,KAAKW,iBAAkBU,EAAAA,EAAAA,GAAMrB,KAAKa,OAAQK,GAC1ClB,KAAKa,OAAOS,iBAAiB,QAAStB,KAAKuB,cAAcC,KAAKxB,OAC9DA,KAAKa,OAAOS,iBAAiB,OAAQtB,KAAKyB,cAAcD,KAAKxB,OAAO,GAChEA,KAAKG,QAAQuB,SAAS,UACxB1B,KAAKa,OAAOS,iBAAiB,aAActB,KAAKyB,cAAcD,KAAKxB,OACpE,iDACF,qDAxBA,IAwBA,8DACD,wFACMA,KAAKW,gBAAiB,CAAF,+BAChBX,KAAKW,gBAAgBgB,UAAS,OACpC3B,KAAKa,OAAOe,oBAAoB,QAAS5B,KAAKuB,cAAcC,KAAKxB,OACjEA,KAAKa,OAAOe,oBAAoB,OAAQ5B,KAAKyB,cAAcD,KAAKxB,OAAO,GACvEA,KAAKa,OAAOe,oBAAoB,aAAc5B,KAAKyB,cAAcD,KAAKxB,OAAO,gDAEhF,qDARA,IAQA,2BACD,SAAc6B,GACG,QAAXA,EAAEC,MAAmB9B,KAAKG,QAAQuB,SAAS,UAC7C1B,KAAKW,gBAAgBoB,OAER,WAAXF,EAAEC,MACJ9B,KAAKW,gBAAgBqB,MAEzB,GAAC,2BACD,WACEhC,KAAKW,gBAAgBqB,MACvB,GAAC,oBACD,WACE,IAAMC,GAAcC,EAAAA,EAAAA,GAAW,6BAAD,OAA8BlC,KAAKC,cACjE,OAAQkC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOJ,IAAeE,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,wBAAyBC,KAAM,YAAaH,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,sBAAwBrC,KAAKuC,MAAQvC,KAAKuC,OAAQJ,EAAAA,EAAAA,GAAE,OAAQ,QACtL,GAAC,cACD,WAAW,OAAOK,EAAAA,EAAAA,GAAWxC,KAAO,IAAC,qBACrC,WAAwB,MAAO,CAC7B,UAAa,CAAC,oBACd,IAAO,CAAC,cACR,QAAW,CAAC,kBACX,KAAC,EA7FO,GA+FbH,EAAQ4C,MAAQ7C,C","sources":["webpack://elements-vue-example/../elements/dist/esm/ino-tooltip.entry.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-871ffba6.js';\nimport { c as classnames } from './index-796d4780.js';\nimport { t as tippy } from './tippy.esm-bfa8033e.js';\nimport './_commonjsHelpers-212d567a.js';\n\nconst inoTooltipCss = \"ino-tooltip .ino-tooltip__composer{font-size:0.8rem;text-align:center;letter-spacing:0;padding:4px 8px;border-radius:6px}ino-tooltip.ino-tooltip--color-scheme-primary .ino-tooltip__composer{font-family:var(--ino-font-family, Lato, Verdana, sans-serif);font-size:1rem;font-weight:400;z-index:9999;background:#5d60f7;color:#fff;box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.3)}ino-tooltip.ino-tooltip--color-scheme-transparent .ino-tooltip__composer{font-family:var(--ino-font-family, Lato, Verdana, sans-serif);font-size:1rem;font-weight:400;z-index:9999;background:#fff;color:#777777;box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.3)}\";\n\nconst Tooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Sets the color scheme of the tooltip\n     * Valid options include: `primary`, `transparent`\n     */\n    this.colorScheme = 'primary';\n    /**\n     * The placement of the tooltip.\n     * Accepted values: `top(-start, -end)`, `right(-start, -end)`,\n     * `bottom(-start, -end)`, `left(-start, -end)`\n     */\n    this.placement = 'auto';\n    /**\n     * The trigger to show the tooltip - either `click`, `hover` or `focus`.\n     * Multiple triggers possible by separating them with a space.\n     */\n    this.trigger = 'mouseenter focus';\n    this.retrieveTarget = () => this.for ? document.getElementById(this.for) : this.el.parentElement;\n  }\n  async placementChanged() {\n    await this.create();\n  }\n  async forChanged() {\n    await this.create();\n  }\n  async triggerChanged() {\n    await this.create();\n  }\n  /**\n   * Returns the internally used tippy.js instance\n   * For more informations see: https://atomiks.github.io/tippyjs/\n   */\n  async getTippyInstance() {\n    return this.tooltipInstance;\n  }\n  // Lifecycle\n  async componentDidLoad() {\n    await this.create();\n  }\n  async create() {\n    await this.dispose();\n    this.target = this.retrieveTarget();\n    if (!this.target) {\n      // Wait 1 sec for the host element to be rendered\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      this.target = this.retrieveTarget();\n    }\n    if (!this.target) {\n      throw new Error(`Target with the ID '${this.for}' could not be found in this document.`);\n    }\n    const options = {\n      content: this.el,\n      duration: 100,\n      placement: this.placement,\n      trigger: this.trigger,\n    };\n    this.tooltipInstance = tippy(this.target, options);\n    this.target.addEventListener('keyup', this.onEnterTarget.bind(this));\n    this.target.addEventListener('blur', this.onLeaveTarget.bind(this), true);\n    if (this.trigger.includes('hover')) {\n      this.target.addEventListener('mouseleave', this.onLeaveTarget.bind(this));\n    }\n  }\n  async dispose() {\n    if (this.tooltipInstance) {\n      await this.tooltipInstance.destroy();\n      this.target.removeEventListener('keyup', this.onEnterTarget.bind(this));\n      this.target.removeEventListener('blur', this.onLeaveTarget.bind(this), true);\n      this.target.removeEventListener('mouseleave', this.onLeaveTarget.bind(this));\n    }\n  }\n  onEnterTarget(e) {\n    if (e.code === 'Tab' && !this.trigger.includes('click')) {\n      this.tooltipInstance.show();\n    }\n    if (e.code === 'Escape') {\n      this.tooltipInstance.hide();\n    }\n  }\n  onLeaveTarget() {\n    this.tooltipInstance.hide();\n  }\n  render() {\n    const hostClasses = classnames(`ino-tooltip--color-scheme-${this.colorScheme}`);\n    return (h(Host, { class: hostClasses }, h(\"div\", { class: \"ino-tooltip__composer\", role: \"tooltip\" }, h(\"div\", { class: \"ino-tooltip__inner\" }, this.label ? this.label : h(\"slot\", null)))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"placement\": [\"placementChanged\"],\n    \"for\": [\"forChanged\"],\n    \"trigger\": [\"triggerChanged\"]\n  }; }\n};\nTooltip.style = inoTooltipCss;\n\nexport { Tooltip as ino_tooltip };\n"],"names":["inoTooltipCss","Tooltip","hostRef","registerInstance","this","colorScheme","placement","trigger","retrieveTarget","for","document","getElementById","el","parentElement","create","tooltipInstance","dispose","target","Promise","resolve","setTimeout","Error","options","content","duration","tippy","addEventListener","onEnterTarget","bind","onLeaveTarget","includes","destroy","removeEventListener","e","code","show","hide","hostClasses","classnames","h","Host","class","role","label","getElement","style"],"sourceRoot":""}