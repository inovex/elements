{"version":3,"file":"js/5057.23c130e1.js","mappings":"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","sources":["webpack://elements-vue-example/../elements/dist/esm/_commonjsHelpers-212d567a.js","webpack://elements-vue-example/../elements/dist/esm/component-e737cc33.js","webpack://elements-vue-example/../elements/dist/esm/index-796d4780.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire();\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { _ as __extends, a as __assign, M as MDCFoundation, c as MDCComponent } from './component-ff02c5a9.js';\nimport { m as matches, c as closest } from './ponyfill-495ec32d.js';\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar _a, _b;\nvar cssClasses = {\n    LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated',\n    LIST_ITEM_CLASS: 'mdc-list-item',\n    LIST_ITEM_DISABLED_CLASS: 'mdc-list-item--disabled',\n    LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',\n    LIST_ITEM_TEXT_CLASS: 'mdc-list-item__text',\n    LIST_ITEM_PRIMARY_TEXT_CLASS: 'mdc-list-item__primary-text',\n    ROOT: 'mdc-list',\n};\nvar evolutionClassNameMap = (_a = {},\n    _a[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-list-item--activated',\n    _a[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-list-item',\n    _a[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-list-item--disabled',\n    _a[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-list-item--selected',\n    _a[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-list-item__primary-text',\n    _a[\"\" + cssClasses.ROOT] = 'mdc-list',\n    _a);\nvar deprecatedClassNameMap = (_b = {},\n    _b[\"\" + cssClasses.LIST_ITEM_ACTIVATED_CLASS] = 'mdc-deprecated-list-item--activated',\n    _b[\"\" + cssClasses.LIST_ITEM_CLASS] = 'mdc-deprecated-list-item',\n    _b[\"\" + cssClasses.LIST_ITEM_DISABLED_CLASS] = 'mdc-deprecated-list-item--disabled',\n    _b[\"\" + cssClasses.LIST_ITEM_SELECTED_CLASS] = 'mdc-deprecated-list-item--selected',\n    _b[\"\" + cssClasses.LIST_ITEM_TEXT_CLASS] = 'mdc-deprecated-list-item__text',\n    _b[\"\" + cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS] = 'mdc-deprecated-list-item__primary-text',\n    _b[\"\" + cssClasses.ROOT] = 'mdc-deprecated-list',\n    _b);\nvar strings = {\n    ACTION_EVENT: 'MDCList:action',\n    ARIA_CHECKED: 'aria-checked',\n    ARIA_CHECKED_CHECKBOX_SELECTOR: '[role=\"checkbox\"][aria-checked=\"true\"]',\n    ARIA_CHECKED_RADIO_SELECTOR: '[role=\"radio\"][aria-checked=\"true\"]',\n    ARIA_CURRENT: 'aria-current',\n    ARIA_DISABLED: 'aria-disabled',\n    ARIA_ORIENTATION: 'aria-orientation',\n    ARIA_ORIENTATION_HORIZONTAL: 'horizontal',\n    ARIA_ROLE_CHECKBOX_SELECTOR: '[role=\"checkbox\"]',\n    ARIA_SELECTED: 'aria-selected',\n    ARIA_INTERACTIVE_ROLES_SELECTOR: '[role=\"listbox\"], [role=\"menu\"]',\n    ARIA_MULTI_SELECTABLE_SELECTOR: '[aria-multiselectable=\"true\"]',\n    CHECKBOX_RADIO_SELECTOR: 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    CHECKBOX_SELECTOR: 'input[type=\"checkbox\"]',\n    CHILD_ELEMENTS_TO_TOGGLE_TABINDEX: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a\\n  \",\n    DEPRECATED_SELECTOR: '.mdc-deprecated-list',\n    FOCUSABLE_CHILD_ELEMENTS: \"\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" button:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" a,\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + cssClasses.LIST_ITEM_CLASS + \" input[type=\\\"checkbox\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" button:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" a,\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"radio\\\"]:not(:disabled),\\n    .\" + deprecatedClassNameMap[cssClasses.LIST_ITEM_CLASS] + \" input[type=\\\"checkbox\\\"]:not(:disabled)\\n  \",\n    RADIO_SELECTOR: 'input[type=\"radio\"]',\n    SELECTED_ITEM_SELECTOR: '[aria-selected=\"true\"], [aria-current=\"true\"]',\n};\nvar numbers = {\n    UNSET_INDEX: -1,\n    TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS: 300\n};\nvar evolutionAttribute = 'evolution';\n\n/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * KEY provides normalized string values for keys.\n */\nvar KEY = {\n    UNKNOWN: 'Unknown',\n    BACKSPACE: 'Backspace',\n    ENTER: 'Enter',\n    SPACEBAR: 'Spacebar',\n    PAGE_UP: 'PageUp',\n    PAGE_DOWN: 'PageDown',\n    END: 'End',\n    HOME: 'Home',\n    ARROW_LEFT: 'ArrowLeft',\n    ARROW_UP: 'ArrowUp',\n    ARROW_RIGHT: 'ArrowRight',\n    ARROW_DOWN: 'ArrowDown',\n    DELETE: 'Delete',\n    ESCAPE: 'Escape',\n    TAB: 'Tab',\n};\nvar normalizedKeys = new Set();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nnormalizedKeys.add(KEY.BACKSPACE);\nnormalizedKeys.add(KEY.ENTER);\nnormalizedKeys.add(KEY.SPACEBAR);\nnormalizedKeys.add(KEY.PAGE_UP);\nnormalizedKeys.add(KEY.PAGE_DOWN);\nnormalizedKeys.add(KEY.END);\nnormalizedKeys.add(KEY.HOME);\nnormalizedKeys.add(KEY.ARROW_LEFT);\nnormalizedKeys.add(KEY.ARROW_UP);\nnormalizedKeys.add(KEY.ARROW_RIGHT);\nnormalizedKeys.add(KEY.ARROW_DOWN);\nnormalizedKeys.add(KEY.DELETE);\nnormalizedKeys.add(KEY.ESCAPE);\nnormalizedKeys.add(KEY.TAB);\nvar KEY_CODE = {\n    BACKSPACE: 8,\n    ENTER: 13,\n    SPACEBAR: 32,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    END: 35,\n    HOME: 36,\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    DELETE: 46,\n    ESCAPE: 27,\n    TAB: 9,\n};\nvar mappedKeyCodes = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nmappedKeyCodes.set(KEY_CODE.BACKSPACE, KEY.BACKSPACE);\nmappedKeyCodes.set(KEY_CODE.ENTER, KEY.ENTER);\nmappedKeyCodes.set(KEY_CODE.SPACEBAR, KEY.SPACEBAR);\nmappedKeyCodes.set(KEY_CODE.PAGE_UP, KEY.PAGE_UP);\nmappedKeyCodes.set(KEY_CODE.PAGE_DOWN, KEY.PAGE_DOWN);\nmappedKeyCodes.set(KEY_CODE.END, KEY.END);\nmappedKeyCodes.set(KEY_CODE.HOME, KEY.HOME);\nmappedKeyCodes.set(KEY_CODE.ARROW_LEFT, KEY.ARROW_LEFT);\nmappedKeyCodes.set(KEY_CODE.ARROW_UP, KEY.ARROW_UP);\nmappedKeyCodes.set(KEY_CODE.ARROW_RIGHT, KEY.ARROW_RIGHT);\nmappedKeyCodes.set(KEY_CODE.ARROW_DOWN, KEY.ARROW_DOWN);\nmappedKeyCodes.set(KEY_CODE.DELETE, KEY.DELETE);\nmappedKeyCodes.set(KEY_CODE.ESCAPE, KEY.ESCAPE);\nmappedKeyCodes.set(KEY_CODE.TAB, KEY.TAB);\nvar navigationKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this\n// by hand.\nnavigationKeys.add(KEY.PAGE_UP);\nnavigationKeys.add(KEY.PAGE_DOWN);\nnavigationKeys.add(KEY.END);\nnavigationKeys.add(KEY.HOME);\nnavigationKeys.add(KEY.ARROW_LEFT);\nnavigationKeys.add(KEY.ARROW_UP);\nnavigationKeys.add(KEY.ARROW_RIGHT);\nnavigationKeys.add(KEY.ARROW_DOWN);\n/**\n * normalizeKey returns the normalized string for a navigational action.\n */\nfunction normalizeKey(evt) {\n    var key = evt.key;\n    // If the event already has a normalized key, return it\n    if (normalizedKeys.has(key)) {\n        return key;\n    }\n    // tslint:disable-next-line:deprecation\n    var mappedKey = mappedKeyCodes.get(evt.keyCode);\n    if (mappedKey) {\n        return mappedKey;\n    }\n    return KEY.UNKNOWN;\n}\n\n/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];\n/**\n * Ensures that preventDefault is only called if the containing element\n * doesn't consume the event, and it will cause an unintended scroll.\n *\n * @param evt keyboard event to be prevented.\n */\nvar preventDefaultEvent = function (evt) {\n    var target = evt.target;\n    if (!target) {\n        return;\n    }\n    var tagName = (\"\" + target.tagName).toLowerCase();\n    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {\n        evt.preventDefault();\n    }\n};\n\n/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Initializes a state object for typeahead. Use the same reference for calls to\n * typeahead functions.\n *\n * @return The current state of the typeahead process. Each state reference\n *     represents a typeahead instance as the reference is typically mutated\n *     in-place.\n */\nfunction initState() {\n    var state = {\n        bufferClearTimeout: 0,\n        currentFirstChar: '',\n        sortedIndexCursor: 0,\n        typeaheadBuffer: '',\n    };\n    return state;\n}\n/**\n * Initializes typeahead state by indexing the current list items by primary\n * text into the sortedIndexByFirstChar data structure.\n *\n * @param listItemCount numer of items in the list\n * @param getPrimaryTextByItemIndex function that returns the primary text at a\n *     given index\n *\n * @return Map that maps the first character of the primary text to the full\n *     list text and it's index\n */\nfunction initSortedIndex(listItemCount, getPrimaryTextByItemIndex) {\n    var sortedIndexByFirstChar = new Map();\n    // Aggregate item text to index mapping\n    for (var i = 0; i < listItemCount; i++) {\n        var primaryText = getPrimaryTextByItemIndex(i).trim();\n        if (!primaryText) {\n            continue;\n        }\n        var firstChar = primaryText[0].toLowerCase();\n        if (!sortedIndexByFirstChar.has(firstChar)) {\n            sortedIndexByFirstChar.set(firstChar, []);\n        }\n        sortedIndexByFirstChar.get(firstChar).push({ text: primaryText.toLowerCase(), index: i });\n    }\n    // Sort the mapping\n    // TODO(b/157162694): Investigate replacing forEach with Map.values()\n    sortedIndexByFirstChar.forEach(function (values) {\n        values.sort(function (first, second) {\n            return first.index - second.index;\n        });\n    });\n    return sortedIndexByFirstChar;\n}\n/**\n * Given the next desired character from the user, it attempts to find the next\n * list option matching the buffer. Wraps around if at the end of options.\n *\n * @param opts Options and accessors\n *   - nextChar - the next character to match against items\n *   - sortedIndexByFirstChar - output of `initSortedIndex(...)`\n *   - focusedItemIndex - the index of the currently focused item\n *   - focusItemAtIndex - function that focuses a list item at given index\n *   - skipFocus - whether or not to focus the matched item\n *   - isItemAtIndexDisabled - function that determines whether an item at a\n *        given index is disabled\n * @param state The typeahead state instance. See `initState`.\n *\n * @return The index of the matched item, or -1 if no match.\n */\nfunction matchItem(opts, state) {\n    var nextChar = opts.nextChar, focusItemAtIndex = opts.focusItemAtIndex, sortedIndexByFirstChar = opts.sortedIndexByFirstChar, focusedItemIndex = opts.focusedItemIndex, skipFocus = opts.skipFocus, isItemAtIndexDisabled = opts.isItemAtIndexDisabled;\n    clearTimeout(state.bufferClearTimeout);\n    state.bufferClearTimeout = setTimeout(function () {\n        clearBuffer(state);\n    }, numbers.TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS);\n    state.typeaheadBuffer = state.typeaheadBuffer + nextChar;\n    var index;\n    if (state.typeaheadBuffer.length === 1) {\n        index = matchFirstChar(sortedIndexByFirstChar, focusedItemIndex, isItemAtIndexDisabled, state);\n    }\n    else {\n        index = matchAllChars(sortedIndexByFirstChar, isItemAtIndexDisabled, state);\n    }\n    if (index !== -1 && !skipFocus) {\n        focusItemAtIndex(index);\n    }\n    return index;\n}\n/**\n * Matches the user's single input character in the buffer to the\n * next option that begins with such character. Wraps around if at\n * end of options. Returns -1 if no match is found.\n */\nfunction matchFirstChar(sortedIndexByFirstChar, focusedItemIndex, isItemAtIndexDisabled, state) {\n    var firstChar = state.typeaheadBuffer[0];\n    var itemsMatchingFirstChar = sortedIndexByFirstChar.get(firstChar);\n    if (!itemsMatchingFirstChar) {\n        return -1;\n    }\n    // Has the same firstChar been recently matched?\n    // Also, did starting index remain the same between key presses?\n    // If both hold true, simply increment index.\n    if (firstChar === state.currentFirstChar &&\n        itemsMatchingFirstChar[state.sortedIndexCursor].index ===\n            focusedItemIndex) {\n        state.sortedIndexCursor =\n            (state.sortedIndexCursor + 1) % itemsMatchingFirstChar.length;\n        var newIndex = itemsMatchingFirstChar[state.sortedIndexCursor].index;\n        if (!isItemAtIndexDisabled(newIndex)) {\n            return newIndex;\n        }\n    }\n    // If we're here, it means one of the following happened:\n    // - either firstChar or startingIndex has changed, invalidating the\n    // cursor.\n    // - The next item of typeahead is disabled, so we have to look further.\n    state.currentFirstChar = firstChar;\n    var newCursorPosition = -1;\n    var cursorPosition;\n    // Find the first non-disabled item as a fallback.\n    for (cursorPosition = 0; cursorPosition < itemsMatchingFirstChar.length; cursorPosition++) {\n        if (!isItemAtIndexDisabled(itemsMatchingFirstChar[cursorPosition].index)) {\n            newCursorPosition = cursorPosition;\n            break;\n        }\n    }\n    // Advance cursor to first item matching the firstChar that is positioned\n    // after starting item. Cursor is unchanged from fallback if there's no\n    // such item.\n    for (; cursorPosition < itemsMatchingFirstChar.length; cursorPosition++) {\n        if (itemsMatchingFirstChar[cursorPosition].index > focusedItemIndex &&\n            !isItemAtIndexDisabled(itemsMatchingFirstChar[cursorPosition].index)) {\n            newCursorPosition = cursorPosition;\n            break;\n        }\n    }\n    if (newCursorPosition !== -1) {\n        state.sortedIndexCursor = newCursorPosition;\n        return itemsMatchingFirstChar[state.sortedIndexCursor].index;\n    }\n    return -1;\n}\n/**\n * Attempts to find the next item that matches all of the typeahead buffer.\n * Wraps around if at end of options. Returns -1 if no match is found.\n */\nfunction matchAllChars(sortedIndexByFirstChar, isItemAtIndexDisabled, state) {\n    var firstChar = state.typeaheadBuffer[0];\n    var itemsMatchingFirstChar = sortedIndexByFirstChar.get(firstChar);\n    if (!itemsMatchingFirstChar) {\n        return -1;\n    }\n    // Do nothing if text already matches\n    var startingItem = itemsMatchingFirstChar[state.sortedIndexCursor];\n    if (startingItem.text.lastIndexOf(state.typeaheadBuffer, 0) === 0 &&\n        !isItemAtIndexDisabled(startingItem.index)) {\n        return startingItem.index;\n    }\n    // Find next item that matches completely; if no match, we'll eventually\n    // loop around to same position\n    var cursorPosition = (state.sortedIndexCursor + 1) % itemsMatchingFirstChar.length;\n    var nextCursorPosition = -1;\n    while (cursorPosition !== state.sortedIndexCursor) {\n        var currentItem = itemsMatchingFirstChar[cursorPosition];\n        var matches = currentItem.text.lastIndexOf(state.typeaheadBuffer, 0) === 0;\n        var isEnabled = !isItemAtIndexDisabled(currentItem.index);\n        if (matches && isEnabled) {\n            nextCursorPosition = cursorPosition;\n            break;\n        }\n        cursorPosition = (cursorPosition + 1) % itemsMatchingFirstChar.length;\n    }\n    if (nextCursorPosition !== -1) {\n        state.sortedIndexCursor = nextCursorPosition;\n        return itemsMatchingFirstChar[state.sortedIndexCursor].index;\n    }\n    return -1;\n}\n/**\n * Whether or not the given typeahead instaance state is currently typing.\n *\n * @param state The typeahead state instance. See `initState`.\n */\nfunction isTypingInProgress(state) {\n    return state.typeaheadBuffer.length > 0;\n}\n/**\n * Clears the typeahaed buffer so that it resets item matching to the first\n * character.\n *\n * @param state The typeahead state instance. See `initState`.\n */\nfunction clearBuffer(state) {\n    state.typeaheadBuffer = '';\n}\n/**\n * Given a keydown event, it calculates whether or not to automatically focus a\n * list item depending on what was typed mimicing the typeahead functionality of\n * a standard <select> element that is open.\n *\n * @param opts Options and accessors\n *   - event - the KeyboardEvent to handle and parse\n *   - sortedIndexByFirstChar - output of `initSortedIndex(...)`\n *   - focusedItemIndex - the index of the currently focused item\n *   - focusItemAtIndex - function that focuses a list item at given index\n *   - isItemAtFocusedIndexDisabled - whether or not the currently focused item\n *      is disabled\n *   - isTargetListItem - whether or not the event target is a list item\n * @param state The typeahead state instance. See `initState`.\n *\n * @returns index of the item matched by the keydown. -1 if not matched.\n */\nfunction handleKeydown(opts, state) {\n    var event = opts.event, isTargetListItem = opts.isTargetListItem, focusedItemIndex = opts.focusedItemIndex, focusItemAtIndex = opts.focusItemAtIndex, sortedIndexByFirstChar = opts.sortedIndexByFirstChar, isItemAtIndexDisabled = opts.isItemAtIndexDisabled;\n    var isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n    var isArrowUp = normalizeKey(event) === 'ArrowUp';\n    var isArrowRight = normalizeKey(event) === 'ArrowRight';\n    var isArrowDown = normalizeKey(event) === 'ArrowDown';\n    var isHome = normalizeKey(event) === 'Home';\n    var isEnd = normalizeKey(event) === 'End';\n    var isEnter = normalizeKey(event) === 'Enter';\n    var isSpace = normalizeKey(event) === 'Spacebar';\n    if (event.ctrlKey || event.metaKey || isArrowLeft || isArrowUp ||\n        isArrowRight || isArrowDown || isHome || isEnd || isEnter) {\n        return -1;\n    }\n    var isCharacterKey = !isSpace && event.key.length === 1;\n    if (isCharacterKey) {\n        preventDefaultEvent(event);\n        var matchItemOpts = {\n            focusItemAtIndex: focusItemAtIndex,\n            focusedItemIndex: focusedItemIndex,\n            nextChar: event.key.toLowerCase(),\n            sortedIndexByFirstChar: sortedIndexByFirstChar,\n            skipFocus: false,\n            isItemAtIndexDisabled: isItemAtIndexDisabled,\n        };\n        return matchItem(matchItemOpts, state);\n    }\n    if (!isSpace) {\n        return -1;\n    }\n    if (isTargetListItem) {\n        preventDefaultEvent(event);\n    }\n    var typeaheadOnListItem = isTargetListItem && isTypingInProgress(state);\n    if (typeaheadOnListItem) {\n        var matchItemOpts = {\n            focusItemAtIndex: focusItemAtIndex,\n            focusedItemIndex: focusedItemIndex,\n            nextChar: ' ',\n            sortedIndexByFirstChar: sortedIndexByFirstChar,\n            skipFocus: false,\n            isItemAtIndexDisabled: isItemAtIndexDisabled,\n        };\n        // space participates in typeahead matching if in rapid typing mode\n        return matchItem(matchItemOpts, state);\n    }\n    return -1;\n}\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nfunction isNumberArray(selectedIndex) {\n    return selectedIndex instanceof Array;\n}\nvar MDCListFoundation = /** @class */ (function (_super) {\n    __extends(MDCListFoundation, _super);\n    function MDCListFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCListFoundation.defaultAdapter), adapter)) || this;\n        _this.wrapFocus = false;\n        _this.isVertical = true;\n        _this.isSingleSelectionList = false;\n        _this.selectedIndex = numbers.UNSET_INDEX;\n        _this.focusedItemIndex = numbers.UNSET_INDEX;\n        _this.useActivatedClass = false;\n        _this.useSelectedAttr = false;\n        _this.ariaCurrentAttrValue = null;\n        _this.isCheckboxList = false;\n        _this.isRadioList = false;\n        _this.hasTypeahead = false;\n        // Transiently holds current typeahead prefix from user.\n        _this.typeaheadState = initState();\n        _this.sortedIndexByFirstChar = new Map();\n        return _this;\n    }\n    Object.defineProperty(MDCListFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCListFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClassForElementIndex: function () { return undefined; },\n                focusItemAtIndex: function () { return undefined; },\n                getAttributeForElementIndex: function () { return null; },\n                getFocusedElementIndex: function () { return 0; },\n                getListItemCount: function () { return 0; },\n                hasCheckboxAtIndex: function () { return false; },\n                hasRadioAtIndex: function () { return false; },\n                isCheckboxCheckedAtIndex: function () { return false; },\n                isFocusInsideList: function () { return false; },\n                isRootFocused: function () { return false; },\n                listItemAtIndexHasClass: function () { return false; },\n                notifyAction: function () { return undefined; },\n                removeClassForElementIndex: function () { return undefined; },\n                setAttributeForElementIndex: function () { return undefined; },\n                setCheckedCheckboxOrRadioAtIndex: function () { return undefined; },\n                setTabIndexForListItemChildren: function () { return undefined; },\n                getPrimaryTextAtIndex: function () { return ''; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCListFoundation.prototype.layout = function () {\n        if (this.adapter.getListItemCount() === 0) {\n            return;\n        }\n        // TODO(b/172274142): consider all items when determining the list's type.\n        if (this.adapter.hasCheckboxAtIndex(0)) {\n            this.isCheckboxList = true;\n        }\n        else if (this.adapter.hasRadioAtIndex(0)) {\n            this.isRadioList = true;\n        }\n        else {\n            this.maybeInitializeSingleSelection();\n        }\n        if (this.hasTypeahead) {\n            this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex();\n        }\n    };\n    /** Returns the index of the item that was last focused. */\n    MDCListFoundation.prototype.getFocusedItemIndex = function () {\n        return this.focusedItemIndex;\n    };\n    /** Toggles focus wrapping with keyboard navigation. */\n    MDCListFoundation.prototype.setWrapFocus = function (value) {\n        this.wrapFocus = value;\n    };\n    /**\n     * Toggles orientation direction for keyboard navigation (true for vertical,\n     * false for horizontal).\n     */\n    MDCListFoundation.prototype.setVerticalOrientation = function (value) {\n        this.isVertical = value;\n    };\n    /** Toggles single-selection behavior. */\n    MDCListFoundation.prototype.setSingleSelection = function (value) {\n        this.isSingleSelectionList = value;\n        if (value) {\n            this.maybeInitializeSingleSelection();\n            this.selectedIndex = this.getSelectedIndexFromDOM();\n        }\n    };\n    /**\n     * Automatically determines whether the list is single selection list. If so,\n     * initializes the internal state to match the selected item.\n     */\n    MDCListFoundation.prototype.maybeInitializeSingleSelection = function () {\n        var selectedItemIndex = this.getSelectedIndexFromDOM();\n        if (selectedItemIndex === numbers.UNSET_INDEX)\n            return;\n        var hasActivatedClass = this.adapter.listItemAtIndexHasClass(selectedItemIndex, cssClasses.LIST_ITEM_ACTIVATED_CLASS);\n        if (hasActivatedClass) {\n            this.setUseActivatedClass(true);\n        }\n        this.isSingleSelectionList = true;\n        this.selectedIndex = selectedItemIndex;\n    };\n    /** @return Index of the first selected item based on the DOM state. */\n    MDCListFoundation.prototype.getSelectedIndexFromDOM = function () {\n        var selectedIndex = numbers.UNSET_INDEX;\n        var listItemsCount = this.adapter.getListItemCount();\n        for (var i = 0; i < listItemsCount; i++) {\n            var hasSelectedClass = this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_SELECTED_CLASS);\n            var hasActivatedClass = this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_ACTIVATED_CLASS);\n            if (!(hasSelectedClass || hasActivatedClass)) {\n                continue;\n            }\n            selectedIndex = i;\n            break;\n        }\n        return selectedIndex;\n    };\n    /**\n     * Sets whether typeahead is enabled on the list.\n     * @param hasTypeahead Whether typeahead is enabled.\n     */\n    MDCListFoundation.prototype.setHasTypeahead = function (hasTypeahead) {\n        this.hasTypeahead = hasTypeahead;\n        if (hasTypeahead) {\n            this.sortedIndexByFirstChar = this.typeaheadInitSortedIndex();\n        }\n    };\n    /**\n     * @return Whether typeahead is currently matching a user-specified prefix.\n     */\n    MDCListFoundation.prototype.isTypeaheadInProgress = function () {\n        return this.hasTypeahead &&\n            isTypingInProgress(this.typeaheadState);\n    };\n    /** Toggle use of the \"activated\" CSS class. */\n    MDCListFoundation.prototype.setUseActivatedClass = function (useActivated) {\n        this.useActivatedClass = useActivated;\n    };\n    /**\n     * Toggles use of the selected attribute (true for aria-selected, false for\n     * aria-checked).\n     */\n    MDCListFoundation.prototype.setUseSelectedAttribute = function (useSelected) {\n        this.useSelectedAttr = useSelected;\n    };\n    MDCListFoundation.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    MDCListFoundation.prototype.setSelectedIndex = function (index, _a) {\n        var _b = _a === void 0 ? {} : _a, forceUpdate = _b.forceUpdate;\n        if (!this.isIndexValid(index)) {\n            return;\n        }\n        if (this.isCheckboxList) {\n            this.setCheckboxAtIndex(index);\n        }\n        else if (this.isRadioList) {\n            this.setRadioAtIndex(index);\n        }\n        else {\n            this.setSingleSelectionAtIndex(index, { forceUpdate: forceUpdate });\n        }\n    };\n    /**\n     * Focus in handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusIn = function (listItemIndex) {\n        if (listItemIndex >= 0) {\n            this.focusedItemIndex = listItemIndex;\n            this.adapter.setAttributeForElementIndex(listItemIndex, 'tabindex', '0');\n            this.adapter.setTabIndexForListItemChildren(listItemIndex, '0');\n        }\n    };\n    /**\n     * Focus out handler for the list items.\n     */\n    MDCListFoundation.prototype.handleFocusOut = function (listItemIndex) {\n        var _this = this;\n        if (listItemIndex >= 0) {\n            this.adapter.setAttributeForElementIndex(listItemIndex, 'tabindex', '-1');\n            this.adapter.setTabIndexForListItemChildren(listItemIndex, '-1');\n        }\n        /**\n         * Between Focusout & Focusin some browsers do not have focus on any\n         * element. Setting a delay to wait till the focus is moved to next element.\n         */\n        setTimeout(function () {\n            if (!_this.adapter.isFocusInsideList()) {\n                _this.setTabindexToFirstSelectedOrFocusedItem();\n            }\n        }, 0);\n    };\n    /**\n     * Key handler for the list.\n     */\n    MDCListFoundation.prototype.handleKeydown = function (event, isRootListItem, listItemIndex) {\n        var _this = this;\n        var isArrowLeft = normalizeKey(event) === 'ArrowLeft';\n        var isArrowUp = normalizeKey(event) === 'ArrowUp';\n        var isArrowRight = normalizeKey(event) === 'ArrowRight';\n        var isArrowDown = normalizeKey(event) === 'ArrowDown';\n        var isHome = normalizeKey(event) === 'Home';\n        var isEnd = normalizeKey(event) === 'End';\n        var isEnter = normalizeKey(event) === 'Enter';\n        var isSpace = normalizeKey(event) === 'Spacebar';\n        // Have to check both upper and lower case, because having caps lock on\n        // affects the value.\n        var isLetterA = event.key === 'A' || event.key === 'a';\n        if (this.adapter.isRootFocused()) {\n            if (isArrowUp || isEnd) {\n                event.preventDefault();\n                this.focusLastElement();\n            }\n            else if (isArrowDown || isHome) {\n                event.preventDefault();\n                this.focusFirstElement();\n            }\n            if (this.hasTypeahead) {\n                var handleKeydownOpts = {\n                    event: event,\n                    focusItemAtIndex: function (index) {\n                        _this.focusItemAtIndex(index);\n                    },\n                    focusedItemIndex: -1,\n                    isTargetListItem: isRootListItem,\n                    sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n                    isItemAtIndexDisabled: function (index) {\n                        return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS);\n                    },\n                };\n                handleKeydown(handleKeydownOpts, this.typeaheadState);\n            }\n            return;\n        }\n        var currentIndex = this.adapter.getFocusedElementIndex();\n        if (currentIndex === -1) {\n            currentIndex = listItemIndex;\n            if (currentIndex < 0) {\n                // If this event doesn't have a mdc-list-item ancestor from the\n                // current list (not from a sublist), return early.\n                return;\n            }\n        }\n        if ((this.isVertical && isArrowDown) ||\n            (!this.isVertical && isArrowRight)) {\n            preventDefaultEvent(event);\n            this.focusNextElement(currentIndex);\n        }\n        else if ((this.isVertical && isArrowUp) || (!this.isVertical && isArrowLeft)) {\n            preventDefaultEvent(event);\n            this.focusPrevElement(currentIndex);\n        }\n        else if (isHome) {\n            preventDefaultEvent(event);\n            this.focusFirstElement();\n        }\n        else if (isEnd) {\n            preventDefaultEvent(event);\n            this.focusLastElement();\n        }\n        else if (isLetterA && event.ctrlKey && this.isCheckboxList) {\n            event.preventDefault();\n            this.toggleAll(this.selectedIndex === numbers.UNSET_INDEX ?\n                [] :\n                this.selectedIndex);\n        }\n        else if (isEnter || isSpace) {\n            if (isRootListItem) {\n                // Return early if enter key is pressed on anchor element which triggers\n                // synthetic MouseEvent event.\n                var target = event.target;\n                if (target && target.tagName === 'A' && isEnter) {\n                    return;\n                }\n                preventDefaultEvent(event);\n                if (this.adapter.listItemAtIndexHasClass(currentIndex, cssClasses.LIST_ITEM_DISABLED_CLASS)) {\n                    return;\n                }\n                if (!this.isTypeaheadInProgress()) {\n                    if (this.isSelectableList()) {\n                        this.setSelectedIndexOnAction(currentIndex);\n                    }\n                    this.adapter.notifyAction(currentIndex);\n                }\n            }\n        }\n        if (this.hasTypeahead) {\n            var handleKeydownOpts = {\n                event: event,\n                focusItemAtIndex: function (index) {\n                    _this.focusItemAtIndex(index);\n                },\n                focusedItemIndex: this.focusedItemIndex,\n                isTargetListItem: isRootListItem,\n                sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n                isItemAtIndexDisabled: function (index) { return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS); },\n            };\n            handleKeydown(handleKeydownOpts, this.typeaheadState);\n        }\n    };\n    /**\n     * Click handler for the list.\n     */\n    MDCListFoundation.prototype.handleClick = function (index, toggleCheckbox) {\n        if (index === numbers.UNSET_INDEX) {\n            return;\n        }\n        if (this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS)) {\n            return;\n        }\n        if (this.isSelectableList()) {\n            this.setSelectedIndexOnAction(index, toggleCheckbox);\n        }\n        this.adapter.notifyAction(index);\n    };\n    /**\n     * Focuses the next element on the list.\n     */\n    MDCListFoundation.prototype.focusNextElement = function (index) {\n        var count = this.adapter.getListItemCount();\n        var nextIndex = index + 1;\n        if (nextIndex >= count) {\n            if (this.wrapFocus) {\n                nextIndex = 0;\n            }\n            else {\n                // Return early because last item is already focused.\n                return index;\n            }\n        }\n        this.focusItemAtIndex(nextIndex);\n        return nextIndex;\n    };\n    /**\n     * Focuses the previous element on the list.\n     */\n    MDCListFoundation.prototype.focusPrevElement = function (index) {\n        var prevIndex = index - 1;\n        if (prevIndex < 0) {\n            if (this.wrapFocus) {\n                prevIndex = this.adapter.getListItemCount() - 1;\n            }\n            else {\n                // Return early because first item is already focused.\n                return index;\n            }\n        }\n        this.focusItemAtIndex(prevIndex);\n        return prevIndex;\n    };\n    MDCListFoundation.prototype.focusFirstElement = function () {\n        this.focusItemAtIndex(0);\n        return 0;\n    };\n    MDCListFoundation.prototype.focusLastElement = function () {\n        var lastIndex = this.adapter.getListItemCount() - 1;\n        this.focusItemAtIndex(lastIndex);\n        return lastIndex;\n    };\n    MDCListFoundation.prototype.focusInitialElement = function () {\n        var initialIndex = this.getFirstSelectedOrFocusedItemIndex();\n        this.focusItemAtIndex(initialIndex);\n        return initialIndex;\n    };\n    /**\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    MDCListFoundation.prototype.setEnabled = function (itemIndex, isEnabled) {\n        if (!this.isIndexValid(itemIndex)) {\n            return;\n        }\n        if (isEnabled) {\n            this.adapter.removeClassForElementIndex(itemIndex, cssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.setAttributeForElementIndex(itemIndex, strings.ARIA_DISABLED, 'false');\n        }\n        else {\n            this.adapter.addClassForElementIndex(itemIndex, cssClasses.LIST_ITEM_DISABLED_CLASS);\n            this.adapter.setAttributeForElementIndex(itemIndex, strings.ARIA_DISABLED, 'true');\n        }\n    };\n    MDCListFoundation.prototype.setSingleSelectionAtIndex = function (index, _a) {\n        var _b = _a === void 0 ? {} : _a, forceUpdate = _b.forceUpdate;\n        if (this.selectedIndex === index && !forceUpdate) {\n            return;\n        }\n        var selectedClassName = cssClasses.LIST_ITEM_SELECTED_CLASS;\n        if (this.useActivatedClass) {\n            selectedClassName = cssClasses.LIST_ITEM_ACTIVATED_CLASS;\n        }\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.removeClassForElementIndex(this.selectedIndex, selectedClassName);\n        }\n        this.setAriaForSingleSelectionAtIndex(index);\n        this.setTabindexAtIndex(index);\n        if (index !== numbers.UNSET_INDEX) {\n            this.adapter.addClassForElementIndex(index, selectedClassName);\n        }\n        this.selectedIndex = index;\n    };\n    /**\n     * Sets aria attribute for single selection at given index.\n     */\n    MDCListFoundation.prototype.setAriaForSingleSelectionAtIndex = function (index) {\n        // Detect the presence of aria-current and get the value only during list\n        // initialization when it is in unset state.\n        if (this.selectedIndex === numbers.UNSET_INDEX) {\n            this.ariaCurrentAttrValue =\n                this.adapter.getAttributeForElementIndex(index, strings.ARIA_CURRENT);\n        }\n        var isAriaCurrent = this.ariaCurrentAttrValue !== null;\n        var ariaAttribute = isAriaCurrent ? strings.ARIA_CURRENT : strings.ARIA_SELECTED;\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, ariaAttribute, 'false');\n        }\n        if (index !== numbers.UNSET_INDEX) {\n            var ariaAttributeValue = isAriaCurrent ? this.ariaCurrentAttrValue : 'true';\n            this.adapter.setAttributeForElementIndex(index, ariaAttribute, ariaAttributeValue);\n        }\n    };\n    /**\n     * Returns the attribute to use for indicating selection status.\n     */\n    MDCListFoundation.prototype.getSelectionAttribute = function () {\n        return this.useSelectedAttr ? strings.ARIA_SELECTED : strings.ARIA_CHECKED;\n    };\n    /**\n     * Toggles radio at give index. Radio doesn't change the checked state if it\n     * is already checked.\n     */\n    MDCListFoundation.prototype.setRadioAtIndex = function (index) {\n        var selectionAttribute = this.getSelectionAttribute();\n        this.adapter.setCheckedCheckboxOrRadioAtIndex(index, true);\n        if (this.selectedIndex !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, selectionAttribute, 'false');\n        }\n        this.adapter.setAttributeForElementIndex(index, selectionAttribute, 'true');\n        this.selectedIndex = index;\n    };\n    MDCListFoundation.prototype.setCheckboxAtIndex = function (index) {\n        var selectionAttribute = this.getSelectionAttribute();\n        for (var i = 0; i < this.adapter.getListItemCount(); i++) {\n            var isChecked = false;\n            if (index.indexOf(i) >= 0) {\n                isChecked = true;\n            }\n            this.adapter.setCheckedCheckboxOrRadioAtIndex(i, isChecked);\n            this.adapter.setAttributeForElementIndex(i, selectionAttribute, isChecked ? 'true' : 'false');\n        }\n        this.selectedIndex = index;\n    };\n    MDCListFoundation.prototype.setTabindexAtIndex = function (index) {\n        if (this.focusedItemIndex === numbers.UNSET_INDEX && index !== 0) {\n            // If some list item was selected set first list item's tabindex to -1.\n            // Generally, tabindex is set to 0 on first list item of list that has no\n            // preselected items.\n            this.adapter.setAttributeForElementIndex(0, 'tabindex', '-1');\n        }\n        else if (this.focusedItemIndex >= 0 && this.focusedItemIndex !== index) {\n            this.adapter.setAttributeForElementIndex(this.focusedItemIndex, 'tabindex', '-1');\n        }\n        // Set the previous selection's tabindex to -1. We need this because\n        // in selection menus that are not visible, programmatically setting an\n        // option will not change focus but will change where tabindex should be 0.\n        if (!(this.selectedIndex instanceof Array) &&\n            this.selectedIndex !== index) {\n            this.adapter.setAttributeForElementIndex(this.selectedIndex, 'tabindex', '-1');\n        }\n        if (index !== numbers.UNSET_INDEX) {\n            this.adapter.setAttributeForElementIndex(index, 'tabindex', '0');\n        }\n    };\n    /**\n     * @return Return true if it is single selectin list, checkbox list or radio\n     *     list.\n     */\n    MDCListFoundation.prototype.isSelectableList = function () {\n        return this.isSingleSelectionList || this.isCheckboxList ||\n            this.isRadioList;\n    };\n    MDCListFoundation.prototype.setTabindexToFirstSelectedOrFocusedItem = function () {\n        var targetIndex = this.getFirstSelectedOrFocusedItemIndex();\n        this.setTabindexAtIndex(targetIndex);\n    };\n    MDCListFoundation.prototype.getFirstSelectedOrFocusedItemIndex = function () {\n        // Action lists retain focus on the most recently focused item.\n        if (!this.isSelectableList()) {\n            return Math.max(this.focusedItemIndex, 0);\n        }\n        // Single-selection lists focus the selected item.\n        if (typeof this.selectedIndex === 'number' &&\n            this.selectedIndex !== numbers.UNSET_INDEX) {\n            return this.selectedIndex;\n        }\n        // Multiple-selection lists focus the first selected item.\n        if (isNumberArray(this.selectedIndex) && this.selectedIndex.length > 0) {\n            return this.selectedIndex.reduce(function (minIndex, currentIndex) { return Math.min(minIndex, currentIndex); });\n        }\n        // Selection lists without a selection focus the first item.\n        return 0;\n    };\n    MDCListFoundation.prototype.isIndexValid = function (index) {\n        var _this = this;\n        if (index instanceof Array) {\n            if (!this.isCheckboxList) {\n                throw new Error('MDCListFoundation: Array of index is only supported for checkbox based list');\n            }\n            if (index.length === 0) {\n                return true;\n            }\n            else {\n                return index.some(function (i) { return _this.isIndexInRange(i); });\n            }\n        }\n        else if (typeof index === 'number') {\n            if (this.isCheckboxList) {\n                throw new Error(\"MDCListFoundation: Expected array of index for checkbox based list but got number: \" + index);\n            }\n            return this.isIndexInRange(index) ||\n                this.isSingleSelectionList && index === numbers.UNSET_INDEX;\n        }\n        else {\n            return false;\n        }\n    };\n    MDCListFoundation.prototype.isIndexInRange = function (index) {\n        var listSize = this.adapter.getListItemCount();\n        return index >= 0 && index < listSize;\n    };\n    /**\n     * Sets selected index on user action, toggles checkbox / radio based on\n     * toggleCheckbox value. User interaction should not toggle list item(s) when\n     * disabled.\n     */\n    MDCListFoundation.prototype.setSelectedIndexOnAction = function (index, toggleCheckbox) {\n        if (toggleCheckbox === void 0) { toggleCheckbox = true; }\n        if (this.isCheckboxList) {\n            this.toggleCheckboxAtIndex(index, toggleCheckbox);\n        }\n        else {\n            this.setSelectedIndex(index);\n        }\n    };\n    MDCListFoundation.prototype.toggleCheckboxAtIndex = function (index, toggleCheckbox) {\n        var selectionAttribute = this.getSelectionAttribute();\n        var isChecked = this.adapter.isCheckboxCheckedAtIndex(index);\n        if (toggleCheckbox) {\n            isChecked = !isChecked;\n            this.adapter.setCheckedCheckboxOrRadioAtIndex(index, isChecked);\n        }\n        this.adapter.setAttributeForElementIndex(index, selectionAttribute, isChecked ? 'true' : 'false');\n        // If none of the checkbox items are selected and selectedIndex is not\n        // initialized then provide a default value.\n        var selectedIndexes = this.selectedIndex === numbers.UNSET_INDEX ?\n            [] :\n            this.selectedIndex.slice();\n        if (isChecked) {\n            selectedIndexes.push(index);\n        }\n        else {\n            selectedIndexes = selectedIndexes.filter(function (i) { return i !== index; });\n        }\n        this.selectedIndex = selectedIndexes;\n    };\n    MDCListFoundation.prototype.focusItemAtIndex = function (index) {\n        this.adapter.focusItemAtIndex(index);\n        this.focusedItemIndex = index;\n    };\n    MDCListFoundation.prototype.toggleAll = function (currentlySelectedIndexes) {\n        var count = this.adapter.getListItemCount();\n        // If all items are selected, deselect everything.\n        if (currentlySelectedIndexes.length === count) {\n            this.setCheckboxAtIndex([]);\n        }\n        else {\n            // Otherwise select all enabled options.\n            var allIndexes = [];\n            for (var i = 0; i < count; i++) {\n                if (!this.adapter.listItemAtIndexHasClass(i, cssClasses.LIST_ITEM_DISABLED_CLASS) ||\n                    currentlySelectedIndexes.indexOf(i) > -1) {\n                    allIndexes.push(i);\n                }\n            }\n            this.setCheckboxAtIndex(allIndexes);\n        }\n    };\n    /**\n     * Given the next desired character from the user, adds it to the typeahead\n     * buffer. Then, attempts to find the next option matching the buffer. Wraps\n     * around if at the end of options.\n     *\n     * @param nextChar The next character to add to the prefix buffer.\n     * @param startingIndex The index from which to start matching. Only relevant\n     *     when starting a new match sequence. To start a new match sequence,\n     *     clear the buffer using `clearTypeaheadBuffer`, or wait for the buffer\n     *     to clear after a set interval defined in list foundation. Defaults to\n     *     the currently focused index.\n     * @return The index of the matched item, or -1 if no match.\n     */\n    MDCListFoundation.prototype.typeaheadMatchItem = function (nextChar, startingIndex, skipFocus) {\n        var _this = this;\n        if (skipFocus === void 0) { skipFocus = false; }\n        var opts = {\n            focusItemAtIndex: function (index) {\n                _this.focusItemAtIndex(index);\n            },\n            focusedItemIndex: startingIndex ? startingIndex : this.focusedItemIndex,\n            nextChar: nextChar,\n            sortedIndexByFirstChar: this.sortedIndexByFirstChar,\n            skipFocus: skipFocus,\n            isItemAtIndexDisabled: function (index) { return _this.adapter.listItemAtIndexHasClass(index, cssClasses.LIST_ITEM_DISABLED_CLASS); }\n        };\n        return matchItem(opts, this.typeaheadState);\n    };\n    /**\n     * Initializes the MDCListTextAndIndex data structure by indexing the current\n     * list items by primary text.\n     *\n     * @return The primary texts of all the list items sorted by first character.\n     */\n    MDCListFoundation.prototype.typeaheadInitSortedIndex = function () {\n        return initSortedIndex(this.adapter.getListItemCount(), this.adapter.getPrimaryTextAtIndex);\n    };\n    /**\n     * Clears the typeahead buffer.\n     */\n    MDCListFoundation.prototype.clearTypeaheadBuffer = function () {\n        clearBuffer(this.typeaheadState);\n    };\n    return MDCListFoundation;\n}(MDCFoundation));\n\n/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCList = /** @class */ (function (_super) {\n    __extends(MDCList, _super);\n    function MDCList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCList.prototype, \"vertical\", {\n        set: function (value) {\n            this.foundation.setVerticalOrientation(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"listElements\", {\n        get: function () {\n            return Array.from(this.root.querySelectorAll(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS]));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"wrapFocus\", {\n        set: function (value) {\n            this.foundation.setWrapFocus(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"typeaheadInProgress\", {\n        /**\n         * @return Whether typeahead is currently matching a user-specified prefix.\n         */\n        get: function () {\n            return this.foundation.isTypeaheadInProgress();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"hasTypeahead\", {\n        /**\n         * Sets whether typeahead functionality is enabled on the list.\n         * @param hasTypeahead Whether typeahead is enabled.\n         */\n        set: function (hasTypeahead) {\n            this.foundation.setHasTypeahead(hasTypeahead);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"singleSelection\", {\n        set: function (isSingleSelectionList) {\n            this.foundation.setSingleSelection(isSingleSelectionList);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCList.prototype, \"selectedIndex\", {\n        get: function () {\n            return this.foundation.getSelectedIndex();\n        },\n        set: function (index) {\n            this.foundation.setSelectedIndex(index);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCList.attachTo = function (root) {\n        return new MDCList(root);\n    };\n    MDCList.prototype.initialSyncWithDOM = function () {\n        this.isEvolutionEnabled =\n            evolutionAttribute in this.root.dataset;\n        if (this.isEvolutionEnabled) {\n            this.classNameMap = evolutionClassNameMap;\n        }\n        else if (matches(this.root, strings.DEPRECATED_SELECTOR)) {\n            this.classNameMap = deprecatedClassNameMap;\n        }\n        else {\n            this.classNameMap =\n                Object.values(cssClasses)\n                    .reduce(function (obj, className) {\n                    obj[className] = className;\n                    return obj;\n                }, {});\n        }\n        this.handleClick = this.handleClickEvent.bind(this);\n        this.handleKeydown = this.handleKeydownEvent.bind(this);\n        this.focusInEventListener = this.handleFocusInEvent.bind(this);\n        this.focusOutEventListener = this.handleFocusOutEvent.bind(this);\n        this.listen('keydown', this.handleKeydown);\n        this.listen('click', this.handleClick);\n        this.listen('focusin', this.focusInEventListener);\n        this.listen('focusout', this.focusOutEventListener);\n        this.layout();\n        this.initializeListType();\n        this.ensureFocusable();\n    };\n    MDCList.prototype.destroy = function () {\n        this.unlisten('keydown', this.handleKeydown);\n        this.unlisten('click', this.handleClick);\n        this.unlisten('focusin', this.focusInEventListener);\n        this.unlisten('focusout', this.focusOutEventListener);\n    };\n    MDCList.prototype.layout = function () {\n        var direction = this.root.getAttribute(strings.ARIA_ORIENTATION);\n        this.vertical = direction !== strings.ARIA_ORIENTATION_HORIZONTAL;\n        var itemSelector = \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \":not([tabindex])\";\n        var childSelector = strings.FOCUSABLE_CHILD_ELEMENTS;\n        // List items need to have at least tabindex=-1 to be focusable.\n        var itemEls = this.root.querySelectorAll(itemSelector);\n        if (itemEls.length) {\n            Array.prototype.forEach.call(itemEls, function (el) {\n                el.setAttribute('tabindex', '-1');\n            });\n        }\n        // Child button/a elements are not tabbable until the list item is focused.\n        var focusableChildEls = this.root.querySelectorAll(childSelector);\n        if (focusableChildEls.length) {\n            Array.prototype.forEach.call(focusableChildEls, function (el) {\n                el.setAttribute('tabindex', '-1');\n            });\n        }\n        if (this.isEvolutionEnabled) {\n            this.foundation.setUseSelectedAttribute(true);\n        }\n        this.foundation.layout();\n    };\n    /**\n     * Extracts the primary text from a list item.\n     * @param item The list item element.\n     * @return The primary text in the element.\n     */\n    MDCList.prototype.getPrimaryText = function (item) {\n        var _a;\n        var primaryText = item.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_PRIMARY_TEXT_CLASS]);\n        if (this.isEvolutionEnabled || primaryText) {\n            return (_a = primaryText === null || primaryText === void 0 ? void 0 : primaryText.textContent) !== null && _a !== void 0 ? _a : '';\n        }\n        var singleLineText = item.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_TEXT_CLASS]);\n        return (singleLineText && singleLineText.textContent) || '';\n    };\n    /**\n     * Initialize selectedIndex value based on pre-selected list items.\n     */\n    MDCList.prototype.initializeListType = function () {\n        var _this = this;\n        this.isInteractive =\n            matches(this.root, strings.ARIA_INTERACTIVE_ROLES_SELECTOR);\n        if (this.isEvolutionEnabled && this.isInteractive) {\n            var selection = Array.from(this.root.querySelectorAll(strings.SELECTED_ITEM_SELECTOR), function (listItem) { return _this.listElements.indexOf(listItem); });\n            if (matches(this.root, strings.ARIA_MULTI_SELECTABLE_SELECTOR)) {\n                this.selectedIndex = selection;\n            }\n            else if (selection.length > 0) {\n                this.selectedIndex = selection[0];\n            }\n            return;\n        }\n        var checkboxListItems = this.root.querySelectorAll(strings.ARIA_ROLE_CHECKBOX_SELECTOR);\n        var radioSelectedListItem = this.root.querySelector(strings.ARIA_CHECKED_RADIO_SELECTOR);\n        if (checkboxListItems.length) {\n            var preselectedItems = this.root.querySelectorAll(strings.ARIA_CHECKED_CHECKBOX_SELECTOR);\n            this.selectedIndex = Array.from(preselectedItems, function (listItem) { return _this.listElements.indexOf(listItem); });\n        }\n        else if (radioSelectedListItem) {\n            this.selectedIndex = this.listElements.indexOf(radioSelectedListItem);\n        }\n    };\n    /**\n     * Updates the list item at itemIndex to the desired isEnabled state.\n     * @param itemIndex Index of the list item\n     * @param isEnabled Sets the list item to enabled or disabled.\n     */\n    MDCList.prototype.setEnabled = function (itemIndex, isEnabled) {\n        this.foundation.setEnabled(itemIndex, isEnabled);\n    };\n    /**\n     * Given the next desired character from the user, adds it to the typeahead\n     * buffer. Then, attempts to find the next option matching the buffer. Wraps\n     * around if at the end of options.\n     *\n     * @param nextChar The next character to add to the prefix buffer.\n     * @param startingIndex The index from which to start matching. Defaults to\n     *     the currently focused index.\n     * @return The index of the matched item.\n     */\n    MDCList.prototype.typeaheadMatchItem = function (nextChar, startingIndex) {\n        return this.foundation.typeaheadMatchItem(nextChar, startingIndex, /** skipFocus */ true);\n    };\n    MDCList.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClassForElementIndex: function (index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.add(_this.classNameMap[className]);\n                }\n            },\n            focusItemAtIndex: function (index) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.focus();\n                }\n            },\n            getAttributeForElementIndex: function (index, attr) {\n                return _this.listElements[index].getAttribute(attr);\n            },\n            getFocusedElementIndex: function () {\n                return _this.listElements.indexOf(document.activeElement);\n            },\n            getListItemCount: function () { return _this.listElements.length; },\n            getPrimaryTextAtIndex: function (index) {\n                return _this.getPrimaryText(_this.listElements[index]);\n            },\n            hasCheckboxAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(strings.CHECKBOX_SELECTOR);\n            },\n            hasRadioAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                return !!listItem.querySelector(strings.RADIO_SELECTOR);\n            },\n            isCheckboxCheckedAtIndex: function (index) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(strings.CHECKBOX_SELECTOR);\n                return toggleEl.checked;\n            },\n            isFocusInsideList: function () {\n                return _this.root !== document.activeElement &&\n                    _this.root.contains(document.activeElement);\n            },\n            isRootFocused: function () { return document.activeElement === _this.root; },\n            listItemAtIndexHasClass: function (index, className) {\n                return _this.listElements[index].classList.contains(_this.classNameMap[className]);\n            },\n            notifyAction: function (index) {\n                _this.emit(strings.ACTION_EVENT, { index: index }, /** shouldBubble */ true);\n            },\n            removeClassForElementIndex: function (index, className) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.classList.remove(_this.classNameMap[className]);\n                }\n            },\n            setAttributeForElementIndex: function (index, attr, value) {\n                var element = _this.listElements[index];\n                if (element) {\n                    element.setAttribute(attr, value);\n                }\n            },\n            setCheckedCheckboxOrRadioAtIndex: function (index, isChecked) {\n                var listItem = _this.listElements[index];\n                var toggleEl = listItem.querySelector(strings.CHECKBOX_RADIO_SELECTOR);\n                toggleEl.checked = isChecked;\n                var event = document.createEvent('Event');\n                event.initEvent('change', true, true);\n                toggleEl.dispatchEvent(event);\n            },\n            setTabIndexForListItemChildren: function (listItemIndex, tabIndexValue) {\n                var element = _this.listElements[listItemIndex];\n                var selector = strings.CHILD_ELEMENTS_TO_TOGGLE_TABINDEX;\n                Array.prototype.forEach.call(element.querySelectorAll(selector), function (el) {\n                    el.setAttribute('tabindex', tabIndexValue);\n                });\n            },\n        };\n        return new MDCListFoundation(adapter);\n    };\n    /**\n     * Ensures that at least one item is focusable if the list is interactive and\n     * doesn't specify a suitable tabindex.\n     */\n    MDCList.prototype.ensureFocusable = function () {\n        if (this.isEvolutionEnabled && this.isInteractive) {\n            if (!this.root.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \"[tabindex=\\\"0\\\"]\")) {\n                var index = this.initialFocusIndex();\n                if (index !== -1) {\n                    this.listElements[index].tabIndex = 0;\n                }\n            }\n        }\n    };\n    MDCList.prototype.initialFocusIndex = function () {\n        if (this.selectedIndex instanceof Array && this.selectedIndex.length > 0) {\n            return this.selectedIndex[0];\n        }\n        if (typeof this.selectedIndex === 'number' &&\n            this.selectedIndex !== numbers.UNSET_INDEX) {\n            return this.selectedIndex;\n        }\n        var el = this.root.querySelector(\".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \":not(.\" + this.classNameMap[cssClasses.LIST_ITEM_DISABLED_CLASS] + \")\");\n        if (el === null) {\n            return -1;\n        }\n        return this.getListItemIndex(el);\n    };\n    /**\n     * Used to figure out which list item this event is targetting. Or returns -1\n     * if there is no list item\n     */\n    MDCList.prototype.getListItemIndex = function (el) {\n        var nearestParent = closest(el, \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS] + \", .\" + this.classNameMap[cssClasses.ROOT]);\n        // Get the index of the element if it is a list item.\n        if (nearestParent &&\n            matches(nearestParent, \".\" + this.classNameMap[cssClasses.LIST_ITEM_CLASS])) {\n            return this.listElements.indexOf(nearestParent);\n        }\n        return -1;\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleFocusInEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        this.foundation.handleFocusIn(index);\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleFocusOutEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        this.foundation.handleFocusOut(index);\n    };\n    /**\n     * Used to figure out which element was focused when keydown event occurred\n     * before sending the event to the foundation.\n     */\n    MDCList.prototype.handleKeydownEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        var target = evt.target;\n        this.foundation.handleKeydown(evt, target.classList.contains(this.classNameMap[cssClasses.LIST_ITEM_CLASS]), index);\n    };\n    /**\n     * Used to figure out which element was clicked before sending the event to\n     * the foundation.\n     */\n    MDCList.prototype.handleClickEvent = function (evt) {\n        var index = this.getListItemIndex(evt.target);\n        var target = evt.target;\n        // Toggle the checkbox only if it's not the target of the event, or the\n        // checkbox will have 2 change events.\n        var toggleCheckbox = !matches(target, strings.CHECKBOX_RADIO_SELECTOR);\n        this.foundation.handleClick(index, toggleCheckbox);\n    };\n    return MDCList;\n}(MDCComponent));\n\nexport { KEY as K, MDCList as M, MDCListFoundation as a, normalizeKey as b, cssClasses as c, numbers as n };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { c as createCommonjsModule } from './_commonjsHelpers-212d567a.js';\n\nvar classnames = createCommonjsModule(function (module) {\n/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n});\n\nexport { classnames as c };\n"],"names":["commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","Error","_a","_b","cssClasses","LIST_ITEM_ACTIVATED_CLASS","LIST_ITEM_CLASS","LIST_ITEM_DISABLED_CLASS","LIST_ITEM_SELECTED_CLASS","LIST_ITEM_TEXT_CLASS","LIST_ITEM_PRIMARY_TEXT_CLASS","ROOT","evolutionClassNameMap","deprecatedClassNameMap","strings","ACTION_EVENT","ARIA_CHECKED","ARIA_CHECKED_CHECKBOX_SELECTOR","ARIA_CHECKED_RADIO_SELECTOR","ARIA_CURRENT","ARIA_DISABLED","ARIA_ORIENTATION","ARIA_ORIENTATION_HORIZONTAL","ARIA_ROLE_CHECKBOX_SELECTOR","ARIA_SELECTED","ARIA_INTERACTIVE_ROLES_SELECTOR","ARIA_MULTI_SELECTABLE_SELECTOR","CHECKBOX_RADIO_SELECTOR","CHECKBOX_SELECTOR","CHILD_ELEMENTS_TO_TOGGLE_TABINDEX","DEPRECATED_SELECTOR","FOCUSABLE_CHILD_ELEMENTS","RADIO_SELECTOR","SELECTED_ITEM_SELECTOR","numbers","UNSET_INDEX","TYPEAHEAD_BUFFER_CLEAR_TIMEOUT_MS","evolutionAttribute","KEY","UNKNOWN","BACKSPACE","ENTER","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","DELETE","ESCAPE","TAB","normalizedKeys","Set","add","KEY_CODE","mappedKeyCodes","Map","set","navigationKeys","normalizeKey","evt","key","has","mappedKey","get","keyCode","ELEMENTS_KEY_ALLOWED_IN","preventDefaultEvent","target","tagName","toLowerCase","indexOf","preventDefault","initState","state","bufferClearTimeout","currentFirstChar","sortedIndexCursor","typeaheadBuffer","initSortedIndex","listItemCount","getPrimaryTextByItemIndex","sortedIndexByFirstChar","i","primaryText","trim","firstChar","push","text","index","forEach","values","sort","first","second","matchItem","opts","nextChar","focusItemAtIndex","focusedItemIndex","skipFocus","isItemAtIndexDisabled","clearTimeout","setTimeout","clearBuffer","length","matchFirstChar","matchAllChars","itemsMatchingFirstChar","newIndex","cursorPosition","newCursorPosition","startingItem","lastIndexOf","nextCursorPosition","currentItem","matches","isEnabled","isTypingInProgress","handleKeydown","event","isTargetListItem","isArrowLeft","isArrowUp","isArrowRight","isArrowDown","isHome","isEnd","isEnter","isSpace","ctrlKey","metaKey","isCharacterKey","matchItemOpts","typeaheadOnListItem","isNumberArray","selectedIndex","Array","MDCListFoundation","_super","adapter","_this","this","__assign","defaultAdapter","wrapFocus","isVertical","isSingleSelectionList","useActivatedClass","useSelectedAttr","ariaCurrentAttrValue","isCheckboxList","isRadioList","hasTypeahead","typeaheadState","__extends","defineProperty","enumerable","configurable","addClassForElementIndex","getAttributeForElementIndex","getFocusedElementIndex","getListItemCount","hasCheckboxAtIndex","hasRadioAtIndex","isCheckboxCheckedAtIndex","isFocusInsideList","isRootFocused","listItemAtIndexHasClass","notifyAction","removeClassForElementIndex","setAttributeForElementIndex","setCheckedCheckboxOrRadioAtIndex","setTabIndexForListItemChildren","getPrimaryTextAtIndex","layout","maybeInitializeSingleSelection","typeaheadInitSortedIndex","getFocusedItemIndex","setWrapFocus","value","setVerticalOrientation","setSingleSelection","getSelectedIndexFromDOM","selectedItemIndex","hasActivatedClass","setUseActivatedClass","listItemsCount","hasSelectedClass","setHasTypeahead","isTypeaheadInProgress","useActivated","setUseSelectedAttribute","useSelected","getSelectedIndex","setSelectedIndex","forceUpdate","isIndexValid","setCheckboxAtIndex","setRadioAtIndex","setSingleSelectionAtIndex","handleFocusIn","listItemIndex","handleFocusOut","setTabindexToFirstSelectedOrFocusedItem","isRootListItem","isLetterA","focusLastElement","focusFirstElement","handleKeydownOpts","currentIndex","focusNextElement","focusPrevElement","toggleAll","isSelectableList","setSelectedIndexOnAction","handleClick","toggleCheckbox","count","nextIndex","prevIndex","lastIndex","focusInitialElement","initialIndex","getFirstSelectedOrFocusedItemIndex","setEnabled","itemIndex","selectedClassName","setAriaForSingleSelectionAtIndex","setTabindexAtIndex","isAriaCurrent","ariaAttribute","ariaAttributeValue","getSelectionAttribute","selectionAttribute","isChecked","targetIndex","reduce","minIndex","Math","min","max","some","isIndexInRange","listSize","toggleCheckboxAtIndex","selectedIndexes","slice","filter","currentlySelectedIndexes","allIndexes","typeaheadMatchItem","startingIndex","clearTypeaheadBuffer","MDCFoundation","MDCList","apply","arguments","foundation","from","root","querySelectorAll","classNameMap","attachTo","initialSyncWithDOM","isEvolutionEnabled","dataset","obj","className","handleClickEvent","bind","handleKeydownEvent","focusInEventListener","handleFocusInEvent","focusOutEventListener","handleFocusOutEvent","listen","initializeListType","ensureFocusable","destroy","unlisten","direction","getAttribute","vertical","itemSelector","childSelector","itemEls","el","setAttribute","focusableChildEls","getPrimaryText","item","querySelector","textContent","singleLineText","isInteractive","selection","listItem","listElements","checkboxListItems","radioSelectedListItem","preselectedItems","getDefaultFoundation","element","classList","focus","attr","document","activeElement","toggleEl","checked","contains","emit","remove","createEvent","initEvent","dispatchEvent","tabIndexValue","selector","initialFocusIndex","tabIndex","getListItemIndex","nearestParent","closest","MDCComponent","classnames","hasOwn","classNames","classes","arg","argType","isArray","inner","toString","includes","join","default"],"sourceRoot":""}