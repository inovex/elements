{"version":3,"file":"js/4967.47a68295.js","mappings":";;;;AAQA,MAAMA,EAAgB,0mBAEhBC,EAAU,MACdC,YAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GAKvBE,KAAKC,YAAc,UAMnBD,KAAKE,UAAY,OAKjBF,KAAKG,QAAU,mBAWfH,KAAKI,MAAQ,EACbJ,KAAKK,eAAiB,IAAML,KAAKM,IAAMC,SAASC,eAAeR,KAAKM,KAAON,KAAKS,GAAGC,aACrF,CACAC,0BACE,IAAIC,EAC4B,QAA/BA,EAAKZ,KAAKa,uBAAoC,IAAPD,GAAyBA,EAAGE,SAAS,CAC3EZ,UAAWF,KAAKE,WAEpB,CACAS,yBACQX,KAAKe,QACb,CACAC,gBACE,IAAIJ,EAC4B,QAA/BA,EAAKZ,KAAKa,uBAAoC,IAAPD,GAAyBA,EAAGE,SAAS,CAC3EV,MAAOJ,KAAKI,OAEhB,CACAO,6BACQX,KAAKe,QACb,CAKAJ,yBACE,OAAOX,KAAKa,eACd,CAEAF,+BACQX,KAAKe,QACb,CACAJ,eAQE,SAPMX,KAAKiB,UACXjB,KAAKkB,OAASlB,KAAKK,iBACdL,KAAKkB,eAEF,IAAIC,SAASC,GAAYC,WAAWD,EAAS,OACnDpB,KAAKkB,OAASlB,KAAKK,mBAEhBL,KAAKkB,OACR,MAAM,IAAII,MAAO,uBAAsBtB,KAAKM,6CAE9C,MAAMiB,EAAU,CACdC,QAASxB,KAAKS,GACdgB,SAAU,IACVrB,MAAOJ,KAAKI,MACZF,UAAWF,KAAKE,UAChBC,QAASH,KAAKG,QACduB,OAAO,GAET1B,KAAKa,iBAAkBc,EAAAA,EAAAA,GAAM3B,KAAKkB,OAAQK,GAC1CvB,KAAKkB,OAAOU,iBAAiB,QAAS5B,KAAK6B,cAAcC,KAAK9B,OAC9DA,KAAKkB,OAAOU,iBAAiB,OAAQ5B,KAAK+B,cAAcD,KAAK9B,OAAO,GAChEA,KAAKG,QAAQ6B,SAAS,UACxBhC,KAAKkB,OAAOU,iBAAiB,aAAc5B,KAAK+B,cAAcD,KAAK9B,MAEvE,CACAW,gBACMX,KAAKa,wBACDb,KAAKa,gBAAgBoB,UAC3BjC,KAAKkB,OAAOgB,oBAAoB,QAASlC,KAAK6B,cAAcC,KAAK9B,OACjEA,KAAKkB,OAAOgB,oBAAoB,OAAQlC,KAAK+B,cAAcD,KAAK9B,OAAO,GACvEA,KAAKkB,OAAOgB,oBAAoB,aAAclC,KAAK+B,cAAcD,KAAK9B,OAE1E,CACA6B,cAAcM,GACG,QAAXA,EAAEC,MAAmBpC,KAAKG,QAAQ6B,SAAS,UAC7ChC,KAAKa,gBAAgBwB,OAER,WAAXF,EAAEC,MACJpC,KAAKa,gBAAgByB,MAEzB,CACAP,gBACE/B,KAAKa,gBAAgByB,MACvB,CACAC,SACE,MAAMC,GAAcC,EAAAA,EAAAA,GAAY,6BAA4BzC,KAAKC,eACjE,OAAQyC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,CAAEC,MAAOJ,IAAeE,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,wBAAyBC,KAAM,YAAaH,EAAAA,EAAAA,GAAE,MAAO,CAAEE,MAAO,sBAAwB5C,KAAK8C,MAAQ9C,KAAK8C,OAAQJ,EAAAA,EAAAA,GAAE,OAAQ,QACtL,CACIjC,SAAO,OAAOsC,EAAAA,EAAAA,GAAW/C,KAAO,CACzBgD,sBAAa,MAAO,CAC7B,UAAa,CAAC,qBACd,IAAO,CAAC,cACR,MAAS,CAAC,iBACV,QAAW,CAAC,kBACX,GAELpD,EAAQqD,MAAQtD,C","sources":["webpack://elements-vue-example/../elements/dist/esm/ino-tooltip.entry.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-1044de65.js';\nimport { c as classnames } from './index-796d4780.js';\nimport { t as tippy } from './tippy.esm-c42ad4a2.js';\nimport './_commonjsHelpers-212d567a.js';\n\nconst inoTooltipCss = \"ino-tooltip .ino-tooltip__composer{font-size:0.8rem;text-align:center;letter-spacing:0;padding:4px 8px;border-radius:6px}ino-tooltip.ino-tooltip--color-scheme-primary .ino-tooltip__composer{font-family:var(--ino-font-family, Lato, Verdana, sans-serif);font-size:1rem;font-weight:400;z-index:9999;background:#5d60f7;color:#fff;box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.3)}ino-tooltip.ino-tooltip--color-scheme-transparent .ino-tooltip__composer{font-family:var(--ino-font-family, Lato, Verdana, sans-serif);font-size:1rem;font-weight:400;z-index:9999;background:#fff;color:#777777;box-shadow:0 0 8px 0 rgba(0, 0, 0, 0.3)}\";\n\nconst Tooltip = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Sets the color scheme of the tooltip\n     * Valid options include: `primary`, `transparent`\n     */\n    this.colorScheme = 'primary';\n    /**\n     * The placement of the tooltip.\n     * Accepted values: `top(-start, -end)`, `right(-start, -end)`,\n     * `bottom(-start, -end)`, `left(-start, -end)`\n     */\n    this.placement = 'auto';\n    /**\n     * The trigger to show the tooltip - either `click`, `hover` or `focus`.\n     * Multiple triggers possible by separating them with a space.\n     */\n    this.trigger = 'mouseenter focus';\n    /**\n     * The delay in milliseconds before `ino-tooltip` shows up or hides.\n     *\n     * If only one number is given, the show and hide delay get the given delay duration.\n     *\n     * If two numbers are given e.g. `[500, 200]` the show delay is 500ms and the hide delay is 200ms.\n     *\n     * Defaults to 0ms.\n     *\n     */\n    this.delay = 0;\n    this.retrieveTarget = () => this.for ? document.getElementById(this.for) : this.el.parentElement;\n  }\n  async onPlacementChange() {\n    var _a;\n    (_a = this.tooltipInstance) === null || _a === void 0 ? void 0 : _a.setProps({\n      placement: this.placement\n    });\n  }\n  async forChanged() {\n    await this.create();\n  }\n  onDelayChange() {\n    var _a;\n    (_a = this.tooltipInstance) === null || _a === void 0 ? void 0 : _a.setProps({\n      delay: this.delay\n    });\n  }\n  async triggerChanged() {\n    await this.create();\n  }\n  /**\n   * Returns the internally used tippy.js instance\n   * For more informations see: https://atomiks.github.io/tippyjs/\n   */\n  async getTippyInstance() {\n    return this.tooltipInstance;\n  }\n  // Lifecycle\n  async componentDidLoad() {\n    await this.create();\n  }\n  async create() {\n    await this.dispose();\n    this.target = this.retrieveTarget();\n    if (!this.target) {\n      // Wait 1 sec for the host element to be rendered\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      this.target = this.retrieveTarget();\n    }\n    if (!this.target) {\n      throw new Error(`Target with the ID '${this.for}' could not be found in this document.`);\n    }\n    const options = {\n      content: this.el,\n      duration: 100,\n      delay: this.delay,\n      placement: this.placement,\n      trigger: this.trigger,\n      arrow: true,\n    };\n    this.tooltipInstance = tippy(this.target, options);\n    this.target.addEventListener('keyup', this.onEnterTarget.bind(this));\n    this.target.addEventListener('blur', this.onLeaveTarget.bind(this), true);\n    if (this.trigger.includes('hover')) {\n      this.target.addEventListener('mouseleave', this.onLeaveTarget.bind(this));\n    }\n  }\n  async dispose() {\n    if (this.tooltipInstance) {\n      await this.tooltipInstance.destroy();\n      this.target.removeEventListener('keyup', this.onEnterTarget.bind(this));\n      this.target.removeEventListener('blur', this.onLeaveTarget.bind(this), true);\n      this.target.removeEventListener('mouseleave', this.onLeaveTarget.bind(this));\n    }\n  }\n  onEnterTarget(e) {\n    if (e.code === 'Tab' && !this.trigger.includes('click')) {\n      this.tooltipInstance.show();\n    }\n    if (e.code === 'Escape') {\n      this.tooltipInstance.hide();\n    }\n  }\n  onLeaveTarget() {\n    this.tooltipInstance.hide();\n  }\n  render() {\n    const hostClasses = classnames(`ino-tooltip--color-scheme-${this.colorScheme}`);\n    return (h(Host, { class: hostClasses }, h(\"div\", { class: \"ino-tooltip__composer\", role: \"tooltip\" }, h(\"div\", { class: \"ino-tooltip__inner\" }, this.label ? this.label : h(\"slot\", null)))));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"placement\": [\"onPlacementChange\"],\n    \"for\": [\"forChanged\"],\n    \"delay\": [\"onDelayChange\"],\n    \"trigger\": [\"triggerChanged\"]\n  }; }\n};\nTooltip.style = inoTooltipCss;\n\nexport { Tooltip as ino_tooltip };\n"],"names":["inoTooltipCss","Tooltip","constructor","hostRef","registerInstance","this","colorScheme","placement","trigger","delay","retrieveTarget","for","document","getElementById","el","parentElement","async","_a","tooltipInstance","setProps","create","onDelayChange","dispose","target","Promise","resolve","setTimeout","Error","options","content","duration","arrow","tippy","addEventListener","onEnterTarget","bind","onLeaveTarget","includes","destroy","removeEventListener","e","code","show","hide","render","hostClasses","classnames","h","Host","class","role","label","getElement","watchers","style"],"sourceRoot":""}