{"version":3,"file":"js/9502.15811eb7.js","mappings":";;;;AAGA,SAASA,IAIP,MAAO,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,EACpD,CACA,SAASC,EAAeC,EAAIC,GAC1B,OAAOD,EAAGE,cAAe,UAASD,MACpC,CAOA,SAASE,EAAeH,EAAIC,GAC1B,IAAIG,EACJ,OAAOH,EACHD,EAAGK,iBAAkB,UAASJ,OAAcK,OAAS,EACmD,KAAnE,QAAnCF,EAAKJ,EAAGE,cAAc,eAA4B,IAAPE,OAAgB,EAASA,EAAGG,mBAAmBD,OAClG,CAMA,SAASE,EAAcR,GACrB,IAAII,EAC4C,QAA/CA,EAAKJ,EAAGE,cAAc,2BAAwC,IAAPE,GAAyBA,EAAGK,OACtF,CACA,SAASC,EAAaC,GACpBA,EAAMC,kBACND,EAAME,gBACR,C;;;;AC9BA,MAAMC,EAAa,8pHAEbC,EAAO,MACXC,YAAYC,IACVC,EAAAA,EAAAA,GAAiBC,KAAMF,GAMvBE,KAAKC,UAAY,MACnB,CACAC,oBACMF,KAAKnB,GAAGsB,cAAcC,IAG1BJ,KAAKK,kBACP,CACAA,mBACEL,KAAKnB,GAAGsB,cAAcC,GAAM,iBAAe7B,EAAAA,EAAAA,MAC7C,CACA+B,yBACE,IAAIrB,EACJ,MAAMsB,QAAyC,QAAzBtB,EAAKe,KAAKQ,iBAA8B,IAAPvB,OAAgB,EAASA,EAAGwB,oBAC9EF,GAGLA,EAAMG,SAAS,CACbC,QAASA,KAAMtB,EAAAA,EAAAA,GAAcW,KAAKnB,KAEtC,CACA+B,SACE,OAAQC,EAAAA,EAAAA,GAAEC,EAAAA,EAAM,MAAMD,EAAAA,EAAAA,GAAE,cAAe,CAAEE,IAAMlC,GAAQmB,KAAKQ,UAAY3B,EAAK,eAAgB,cAAemC,aAAa,EAAMC,IAAKjB,KAAKnB,GAAGsB,cAAcC,GAAIH,UAAWD,KAAKC,UAAWiB,QAAS,UAAWL,EAAAA,EAAAA,GAAE,WAAY,CAAEM,KAAM,OAAQ,cAAe,OAAQ,mBAAoB,WAAYC,SAAU,OAAQP,EAAAA,EAAAA,GAAE,OAAQ,QAChU,CACIhC,SAAO,OAAOwC,EAAAA,EAAAA,GAAWrB,KAAO,GAEtCJ,EAAK0B,MAAQ3B,C","sources":["webpack://elements-vue-example/../elements/dist/esm/component-utils-ba71b2e3.js","webpack://elements-vue-example/../elements/dist/esm/ino-menu.entry.js"],"sourcesContent":["/*!\n * Crafted with ❤ by inovex GmbH\n */\nfunction generateUniqueId() {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return '_' + Math.random().toString(36).substr(2, 9);\n}\nfunction getSlotContent(el, slotName) {\n  return el.querySelector(`[slot=\"${slotName}\"]`);\n}\n/**\n * Checks if the given element has at least one child node at the given slot\n * @param el The element which has a (named) slot inside\n * @param slotName The name of the slot to check. If not provided default slot is used.\n * @return `true` if a child at the slot exists, otherwise `false`\n */\nfunction hasSlotContent(el, slotName) {\n  var _a;\n  return slotName\n    ? el.querySelectorAll(`[slot=\"${slotName}\"]`).length > 0\n    : ((_a = el.querySelector('slot')) === null || _a === void 0 ? void 0 : _a.assignedElements().length) === 0;\n}\n/**\n * Focuses the first element that has the `data-ino-focus` attribute.\n *\n * @param el The host element to search in\n */\nfunction focusIfExists(el) {\n  var _a;\n  (_a = el.querySelector('[data-ino-focus]')) === null || _a === void 0 ? void 0 : _a.focus();\n}\nfunction preventEvent(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nexport { getSlotContent as a, focusIfExists as f, generateUniqueId as g, hasSlotContent as h, preventEvent as p };\n","/*!\n * Crafted with ❤ by inovex GmbH\n */\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-871ffba6.js';\nimport { g as generateUniqueId, f as focusIfExists } from './component-utils-ba71b2e3.js';\n\nconst inoMenuCss = \".mdc-menu-surface{display:none;position:absolute;box-sizing:border-box;max-width:calc(100vw - 32px);max-width:var(--mdc-menu-max-width, calc(100vw - 32px));max-height:calc(100vh - 32px);max-height:var(--mdc-menu-max-height, calc(100vh - 32px));margin:0;padding:0;transform:scale(1);transform-origin:top left;opacity:0;overflow:auto;will-change:transform, opacity;z-index:8;transition:opacity 0.03s linear, transform 0.12s cubic-bezier(0, 0, 0.2, 1), height 250ms cubic-bezier(0, 0, 0.2, 1);box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);background-color:#fff;background-color:var(--mdc-theme-surface, #fff);color:#000;color:var(--mdc-theme-on-surface, #000);border-radius:4px;border-radius:var(--mdc-shape-medium, 4px);transform-origin-left:top left;transform-origin-right:top right}.mdc-menu-surface:focus{outline:none}.mdc-menu-surface--animating-open{display:inline-block;transform:scale(0.8);opacity:0}.mdc-menu-surface--open{display:inline-block;transform:scale(1);opacity:1}.mdc-menu-surface--animating-closed{display:inline-block;opacity:0;transition:opacity 0.075s linear}[dir=rtl] .mdc-menu-surface,.mdc-menu-surface[dir=rtl]{transform-origin-left:top right;transform-origin-right:top left;}.mdc-menu-surface--anchor{position:relative;overflow:visible}.mdc-menu-surface--fixed{position:fixed}.mdc-menu-surface--fullwidth{width:100%}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:#fff;background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-menu{min-width:112px;min-width:var(--mdc-menu-min-width, 112px)}.mdc-menu .mdc-deprecated-list-item__meta{color:rgba(0, 0, 0, 0.87)}.mdc-menu .mdc-deprecated-list-item__graphic{color:rgba(0, 0, 0, 0.87)}.mdc-menu .mdc-deprecated-list{color:rgba(0, 0, 0, 0.87)}.mdc-menu .mdc-deprecated-list,.mdc-menu .mdc-list{position:relative}.mdc-menu .mdc-deprecated-list .mdc-elevation-overlay,.mdc-menu .mdc-list .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-menu .mdc-deprecated-list-divider{margin:8px 0}.mdc-menu .mdc-deprecated-list-item{user-select:none}.mdc-menu .mdc-deprecated-list-item--disabled{cursor:auto}.mdc-menu a.mdc-deprecated-list-item .mdc-deprecated-list-item__text,.mdc-menu a.mdc-deprecated-list-item .mdc-deprecated-list-item__graphic{pointer-events:none}.mdc-menu__selection-group{padding:0;fill:currentColor}.mdc-menu__selection-group .mdc-deprecated-list-item{padding-left:56px;padding-right:16px}[dir=rtl] .mdc-menu__selection-group .mdc-deprecated-list-item,.mdc-menu__selection-group .mdc-deprecated-list-item[dir=rtl]{padding-left:16px;padding-right:56px;}.mdc-menu__selection-group .mdc-menu__selection-group-icon{left:16px;right:initial;display:none;position:absolute;top:50%;transform:translateY(-50%)}[dir=rtl] .mdc-menu__selection-group .mdc-menu__selection-group-icon,.mdc-menu__selection-group .mdc-menu__selection-group-icon[dir=rtl]{left:initial;right:16px;}.mdc-menu-item--selected .mdc-menu__selection-group-icon{display:inline}ino-menu ino-popover{border-radius:inherit}\";\n\nconst Menu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Determines the position of the opened menu.\n     * Usually, the default value (`auto`) will work just fine.\n     * Use this if the positioning is off for some reason.\n     */\n    this.placement = 'auto';\n  }\n  connectedCallback() {\n    if (this.el.parentElement.id) {\n      return;\n    }\n    this.generateParentId();\n  }\n  generateParentId() {\n    this.el.parentElement.id = `elements-menu${generateUniqueId()}`;\n  }\n  async componentDidLoad() {\n    var _a;\n    const tippy = await ((_a = this.popoverEl) === null || _a === void 0 ? void 0 : _a.getTippyInstance());\n    if (!tippy) {\n      return;\n    }\n    tippy.setProps({\n      onMount: () => focusIfExists(this.el),\n    });\n  }\n  render() {\n    return (h(Host, null, h(\"ino-popover\", { ref: (el) => (this.popoverEl = el), \"color-scheme\": \"transparent\", interactive: true, for: this.el.parentElement.id, placement: this.placement, trigger: 'click' }, h(\"ino-list\", { role: \"menu\", \"aria-hidden\": \"true\", \"aria-orientation\": \"vertical\", tabindex: \"-1\" }, h(\"slot\", null)))));\n  }\n  get el() { return getElement(this); }\n};\nMenu.style = inoMenuCss;\n\nexport { Menu as ino_menu };\n"],"names":["generateUniqueId","Math","random","toString","substr","getSlotContent","el","slotName","querySelector","hasSlotContent","_a","querySelectorAll","length","assignedElements","focusIfExists","focus","preventEvent","event","stopPropagation","preventDefault","inoMenuCss","Menu","constructor","hostRef","registerInstance","this","placement","connectedCallback","parentElement","id","generateParentId","async","tippy","popoverEl","getTippyInstance","setProps","onMount","render","h","Host","ref","interactive","for","trigger","role","tabindex","getElement","style"],"sourceRoot":""}