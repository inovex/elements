name: Quality Control

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  qc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Track master branch to make nx affected work
        run: |
          git branch --track main origin/master
      - name: Install dependencies
        uses: ./.github/workflows/dependencies-install

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npx playwright -V | awk '{ print $2 }')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
      - name: Setup Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: yarn playwright install --with-deps

      - name: Check format
        run: yarn format
      - name: Check lint
        run: yarn lint
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Build all projects
        run: yarn build
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Test all projects
        run: yarn test
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Upload build artifacts for canary release
        uses: ./.github/workflows/artifacts-upload
        with:
          upload-core-artifacts: true
          upload-example-artifacts: ${{ github.ref == 'refs/heads/master' }}
          upload-storybook-artifact: true

  unicorn:
    needs: qc
    uses: ./.github/workflows/deploy-unicorn.yml
