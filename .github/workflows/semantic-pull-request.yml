name: 'Lint PR'

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize

jobs:
  main:
    name: Confirm semantic PR title
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load valid commit scopes from repo
        id: scopes
        run: |
          node commit-scope-enum.js
          delimiter="EOF"
          echo "OUT<<${delimiter}" >> $GITHUB_OUTPUT
          cat commit-scopes.txt >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed.
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
            deps
            dev-deps
          # Configure which scopes are allowed.
          scopes: ${{ steps.scopes.outputs.OUT }}
          # Configure that a scope must always be provided.
          requireScope: false
          # Configure which scopes are disallowed in PR titles. For instance by setting
          # the value below, `chore(release): ...` and `ci(e2e,release): ...` will be rejected.
          # disallowScopes: ...
          # Configure additional validation for the subject based on a regex.
          # This example ensures the subject doesn't start with an uppercase character.
          subjectPattern: ^(?![A-Z]).+$
          # If `subjectPattern` is configured, you can use this property to override
          # the default error message that is shown when the pattern doesn't match.
          # The variables `subject` and `title` can be used within the message.
          subjectPatternError: |
            The subject "{subject}" should not start with an uppercase character.
          # If the PR contains one of these labels, the validation is skipped.
          # Multiple labels can be separated by newlines.
          # If you want to rerun the validation when labels change, you might want
          # to use the `labeled` and `unlabeled` event triggers in your workflow.
          ignoreLabels: |
            bot
            ignore-semantic-pull-request
