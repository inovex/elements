name: 'Deploy Pre-Release'

on:
  push:
    branches:
      - master
    tags-ignore:
      - v*
    paths:
      - packages/elements/**
      # ignore test specific files
      - '!packages/elements/**/*.spec.ts'
      - '!packages/elements/**/*.e2e.ts'
      - '!packages/elements/src/util/e2etests-setup.ts'
      - '!packages/elements/src/util/test-utils.ts'
      - '!packages/elements/setupSpecTests.ts'
      - '!packages/elements/scripts/**' # ignore changes to internal scripts
      - packages/elements-angular/**
      - packages/elements-react/**
      - packages/elements-vue/**

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      hasTag: ${{ steps.checkForTag.outputs.hasTag }}
    steps:
      - uses: actions/checkout@v4
      - id: checkForTag
        name: Ensure that that prerelease not executed for releases with tags
        run: git describe --exact-match HEAD || echo "hasTag=false" >> "$GITHUB_OUTPUT"
  prerelease:
    runs-on: ubuntu-latest
    needs:
      - check
    if: ${{ needs.check.outputs.hasTag == 'false' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Track master branch to make nx affected work
        run: git branch --track main origin/master
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: https://registry.npmjs.org
          scope: '@inovex.de' # important for yarn
          always-auth: true
      - uses: ./.github/workflows/dependencies-install
      - name: Setup Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor}}@users.noreply.github.com"
      - name: Set npm loglevel
        run: npm config set loglevel warn
      - name: Build libs
        run: yarn run nx run-many -t build -p elements,elements-angular,elements-react,elements-vue
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Version & Release
        shell: bash
        run: yarn nx run workspace:publish:prerelease
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
