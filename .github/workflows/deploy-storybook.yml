name: 'Deploy Storybook'

on:
  workflow_call:
    inputs:
      version:
        description: Latest elements version in format v[0-9].[0-9].[0-9]
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: Latest elements version in format v[0-9].[0-9].[0-9]
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(${{ inputs.version }}, 'v')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/dependencies-install
      - name: Build Storybook
        run: yarn nx run storybook:build
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Upload Storybook artifact ⬆️
        uses: actions/upload-artifact@v4
        with:
          name: storybook
          path: packages/storybook/dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pages branch
        uses: actions/checkout@v4
        with:
          ref: pages
      - name: Download Storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook
          path: version/${{ inputs.version }}
      - name: Provide latest symlink
        if: ${{ ! contains( inputs.version, '-' ) }} # only link to latest for releases (e.g. v7.0.0), not pre-releases (e.g. v.7.0.0-1)
        run: cd version && rm -f latest && ln -s ${{ inputs.version }} latest
        shell: bash

      # Crawls the version dir on current pages branch HEAD.
      # Jq extracts the directory name of the versions and transfers it to an array of the form ["0.1.1", "0.2.1"].
      - name: Update Hosted Versions
        run: find ./version/* -type d -maxdepth 0 | cut -c 11- | jq -R -s -c 'split("\n")[:-1]' > ./hosted-versions.json

      - name: Deploy to Github Pages 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: pages
          commit-message: Deploying version ${{ inputs.version }} 🚀
          folder: '.'
          clean: false # Important to keep other versions.
