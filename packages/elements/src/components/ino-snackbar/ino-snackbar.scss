@use '@material/snackbar/mdc-snackbar';
@use '../styles/fonts';
@use '../styles/colors';
@use '../styles/mixins';

$snackbar-types: "error", "warning";

ino-snackbar {
  --snackbar-warning-border-color: var(--ino-snackbar-warning-border-color, #{colors.$warning});
  --snackbar-error-border-color: var(--ino-snackbar-error-border-color, #{colors.$error});
}

ino-snackbar {

  &[ino-alignment="right"] .mdc-snackbar--leading {
    justify-content: flex-end;
  }

  .mdc-snackbar__surface {
    background-color: colors.$primary-contrast;
    padding: 16px;
    display: flex;
    align-items: stretch;
    align-content: stretch;
    flex-flow: row wrap;

    border-radius: 4px;

    .mdc-snackbar__actions {
      flex-grow: 1;
    }

    .mdc-snackbar__label {
      display: inline;
      color: colors.ino-color(dark);
      @include fonts.ino-font-size(s);
      word-break: break-all;
      flex-grow: 3;
      max-width: 400px;
      min-width: 150px;
    }

    .ino-button {
      flex-grow: 1;
    }

    ino-icon-button .mdc-icon-button::before {
      top: 12px;
      left: 12px;
    }
  }

  &:not([ino-action-text]), &[ino-action-text=""] {

    .mdc-snackbar__surface {
      background-color: lighten(colors.$primary-light, 5%);

      .mdc-snackbar__label {
        color: white;
      }

      ino-icon-button ino-icon {
        --icon-color: white;
      }
    }
  }
}

@each $type in $snackbar-types {
  ino-snackbar[ino-type="#{$type}"] {
    .mdc-snackbar__surface {
      border: 2px solid var(--snackbar-#{$type}-border-color);
    }
  }
}
