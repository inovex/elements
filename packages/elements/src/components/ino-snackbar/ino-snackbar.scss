@use 'base/mdc-customize';
@use '@material/snackbar/mdc-snackbar';
@use 'base/typography';
@use 'base/theme';
@use 'base/animation';

$snackbar-types: 'error', 'warning';

ino-snackbar {
  --snackbar-warning-border-color: var(--ino-snackbar-warning-border-color, #{theme.color(warning)});
  --snackbar-error-border-color: var(--ino-snackbar-error-border-color, #{theme.color(error)});
}

ino-snackbar {
  &[ino-alignment='right'] .mdc-snackbar--leading {
    justify-content: flex-end;
  }

  .mdc-snackbar__surface {
    background-color: theme.color(primary, contrast);
    padding: 16px;
    display: flex;
    align-items: stretch;
    align-content: stretch;
    flex-flow: row wrap;

    border-radius: 4px;

    .mdc-snackbar__actions {
      flex-grow: 1;
    }

    .mdc-snackbar__label {
      display: inline;
      color: theme.color(dark);
      font-size: typography.font-size(s);
      word-break: break-all;
      flex-grow: 3;
      max-width: 400px;
      min-width: 150px;
    }

    .ino-button {
      flex-grow: 1;
    }

    ino-icon-button .mdc-icon-button::before {
      top: 12px;
      left: 12px;
    }
  }

  &:not([ino-action-text]),
  &[ino-action-text=''] {
    .mdc-snackbar__surface {
      background-color: lighten(theme.color(primary, light), 5%);

      .mdc-snackbar__label {
        color: white;
      }

      ino-icon-button ino-icon {
        --icon-color: white;
      }
    }
  }
}

@each $type in $snackbar-types {
  ino-snackbar[ino-type='#{$type}'] {
    .mdc-snackbar__surface {
      border: 2px solid var(--snackbar-#{$type}-border-color);
    }
  }
}

ino-snackbar[ino-type='primary'] .mdc-snackbar__surface {
  border: none;
}
