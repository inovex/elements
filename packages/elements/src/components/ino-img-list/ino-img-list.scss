@use '../styles/mdc-customize';
@use "@material/image-list/mdc-image-list";
@use "@material/image-list";
@use "@material/feature-targeting/functions" as feature-targeting-functions;
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;

/**
 * Since we are using css variables to allow the consumer to change the number
 * of columns by setting the variable accordingly, we had to slightly modify
 * the mixin provided by google mdc as the original mixin did not support the
 * use of css variables.
 */
@mixin standard-columns(
  $cols,
  $gutter-size: 4px,
  $query: feature-targeting-functions.all()
) {
  $feat-structure: feature-targeting-functions.create-target($query, structure);

  .mdc-image-list__item {
    @include feature-targeting-mixins.targets($feat-structure) {
      width: calc(100% / #{$cols} - (#{$gutter-size} + 1px / #{$cols}));
      margin: $gutter-size / 2;
    }
  }
}

ino-img-list {
  /**
   * @prop --ino-img-list-cols: sets the number of columns
   */
  --img-list-cols: var(--ino-img-list-cols, 3);
}

ino-img-list {

  ul:not(.mdc-image-list--masonry) {
    @include standard-columns(var(--img-list-cols));
  }

  ul.mdc-image-list--masonry {
    @include image-list.masonry-columns(var(--img-list-cols));
  }
}

