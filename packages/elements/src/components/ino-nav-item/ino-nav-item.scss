@use '../base/mdc-customize';
@use '@material/list/mdc-list';
@use '../base/new-theme' as theme;
@use '../base/typography-new' as typography;

$submenu-background: (
  1 : theme.$n-1,
  2 : theme.$n-2,
  3 : theme.$n-3
);

@mixin style-sub-menu($level) {
  & ino-list-item .mdc-deprecated-list-item {
    padding-left: calc($level * 16px) + 16px;
    background-color: map-get($submenu-background, $level);
    height: 50px;
  }
  
  // Recursive call until max sub-menu level is reached
  $max-level: 3;
  @if (($level + 1) <= $max-level) {
    & [slot="sub-menu"] {
      @include style-sub-menu($level + 1);
    }
  }
}

$submenu-animation: cubic-bezier(1, 0, 0, 1);

ino-nav-item {
  /**
   * @prop --ino-nav-item-color: Inactive color of icon.
   * @prop --ino-nav-item-color-active: Active color of icon.
   * @prop --ino-nav-item-background-color: Inactive color of the background of one item.
   * @prop --ino-nav-item-background-color-active: Active color of the background of one item.
   */

  --nav-item-color: var(--ino-nav-item-color, #{theme.$n-11});
  --nav-item-color-active: var(--ino-nav-item-color-active, #{theme.$p-5});
  --nav-item-background-color: var(
    --ino-nav-item-background-color,
    theme.$white
  );
  --nav-item-background-color-active: var(
    --ino-nav-item-background-color-active,
    #{theme.$n-2}
  );

  .mdc-deprecated-list-item,
  ino-list-item .mdc-deprecated-list-item {
    padding: 0 16px;
    height: 60px;
    //background-color: var(--nav-item-background-color);
    color: var(--nav-item-color);
    font-size: 16px; // 2px bigger than typo(label-l)
    font-weight: 500; // same as typo(label-l)

    &__text {
      display: block !important;
    }

    &__secondary-text {
      @include typography.typo(label-l);
      display: block !important;
    }

    // icon
    ::slotted(ino-icon),
    ino-icon,
    .ino-list-item__icon {
      --icon-width: 24px;
      --icon-height: 24px;
      --icon-color: var(--nav-item-color);
    }

    // graphic
    .ino-nav-item--leading-slot,
    .ino-nav-item--trailing-slot {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-content: center;
    }

    // sub-menu arrow
    .ino-nav-item--trailing-slot ino-icon {
        --icon-width: 16px;
        --icon-height: 16px;
        --icon-color: var(--nav-item-color);
        transition: transform 290ms $submenu-animation;
    }

    &.mdc-deprecated-list-item--activated {
      transition: border-left 0.1s ease-in-out;
      //background-color: var(--nav-item-background-color-active);
      border-left: 2px solid var(--nav-item-color-active);
      color: var(--nav-item-color-active);

      .mdc-deprecated-list-item__ripple {
        display: none;
      }

      // icon
      ::slotted(ino-icon),
      ino-icon,
      .ino-list-item__icon {
        --icon-color: var(--nav-item-color-active);
      }
    }
  }
}

// Styles for mobile-nav-item
ino-nav-item .mobile-nav-item {
  .mdc-deprecated-list-item,
  ino-list-item .mdc-deprecated-list-item {
    &__graphic {
      margin-right: 0px;
    }

    // icon
    ::slotted(ino-icon),
    ino-icon,
    .ino-list-item__icon {
      --icon-width: 18px;
      --icon-height: 18px;
    }
  }
}

// styles the sub-menu nav-items 
// beginning from sub-menu-level 1
ino-nav-item [slot="sub-menu"] {
  @include style-sub-menu(1);
  max-height: 0;
  overflow: hidden;
  transition: max-height 450ms $submenu-animation;

  ul {
    padding: 0;
  }
}

// styles sub-menu open state
ino-nav-item.ino-nav-item--sub-menu-open {
  & > ino-list-item .ino-nav-item--trailing-slot ino-icon {
    transform: rotate(180deg);
  }

  & > [slot="sub-menu"] {
    max-height: 10000px;
  }
}
