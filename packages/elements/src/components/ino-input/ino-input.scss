@use '@material/textfield/mdc-text-field';
@use '@material/textfield';
@use '@material/textfield/icon';
@use '@material/textfield/helper-text/mdc-text-field-helper-text';
@use '@material/textfield/icon/mdc-text-field-icon';
@use 'styles/colors';
@use 'styles/fonts';

$default-text-field: 'not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)';
$placeholder-color: rgba(0, 0, 0, 0.6);

@mixin hideNativeNumberInputArrows() {
  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type=number] {
    -moz-appearance: textfield;
  }
}

ino-input {

  display: block;
  @include icon.icon-core-styles;


  & > .ino-input__composer {
    text-align: left;
    width: 100%;
    box-sizing: border-box;
  }

  @include fonts.ino-font(sans-serif, m, regular);

  &:hover {
    @include textfield.fill-color(transparent);
  }

  .mdc-text-field {

    @include textfield.focused-outline-color(colors.ino-color(primary, base));

    ino-icon {
      --icon-color: #{$placeholder-color};
    }

    &--focused:not(.mdc-text-field--invalid) {
      @include textfield.label-color(colors.ino-color(primary, base));
      @include textfield.caret-color(colors.ino-color(primary, base));
      @include textfield.line-ripple-color(colors.ino-color(primary, base));

      ino-icon {
        --icon-color: #{colors.ino-color(primary, base)};
      }
    }

    &--invalid ino-icon {
      --icon-color: var(--mdc-theme-error, #b00020);
    }

    &--disabled {
      background-color: transparent;
    }

    & + .mdc-text-field-helper-line {
      padding: 0;
    }

    // Placeholder color
    &:not(.mdc-text-field--disabled) {
      & input::placeholder {
        color: $placeholder-color;
      }
    }

    &:#{$default-text-field} {
      @include textfield.fill-color(transparent);

      // change background von greyish to transparent
      &:before {
        background-color: transparent;
      }

      &:not([class*='--with-leading-icon']) {
        & .mdc-text-field__input {
          padding-left: 0;
        }
      }

      .mdc-text-field__icon {
        cursor: auto;
        pointer-events: auto;
        bottom: 2px;
      }

      &[class*='--with-leading-icon'] {
        $padding-to-left: 38px;

        input {
          padding-left: $padding-to-left;
        }

        .mdc-floating-label,
        .mdc-floating-label--float-above {
          left: $padding-to-left;
        }
      }

      .mdc-text-field__icon {
        top: 61%;

        &--leading {
          left: 6px;
        }

        &--trailing {
          right: 6px;
        }
      }

      .mdc-text-field__input {
        padding-bottom: 0;
        padding-top: 20px;
      }
    }

    .mdc-text-field__icon {
      ino-icon {
        --icon-height: 1em;
        --icon-width: 1em;
      }

      &.unit {
        font-size: 16px;
      }
    }
  }


  // Custom number arrows
  &[type='number'] {

    @include hideNativeNumberInputArrows();

    .arrow-container {
      position: relative;
      display: flex;
      flex-direction: column;
      right: 5px;
      top: 50%;
      height: 50%;

      .ino-num-arrows {
        --ino-icon-height: 5px;
        padding: 2px 0;
        cursor: pointer;

        &.up {
          transform: scaleY(-1);
        }
      }
    }

    .mdc-text-field--outlined .arrow-container {
      top: 36%;
    }

    .mdc-text-field:#{$default-text-field}, .mdc-text-field.mdc-text-field--outlined {
      .mdc-text-field__icon.mdc-text-field__icon--trailing {
        right: 25px;
      }
    }
  }
}
