@use '../styles/mdc-customize';
@use "@material/list";
@use "@material/list/mdc-list";
@use '../styles/colors';

ino-option {
  /**
   * @prop --ino-option-selected-background-color: Background color if selected
   * @prop --ino-option-selected-background-color-hover: Background color on hover if selected
   * @prop --ino-option-selected-background-color-focus: Background color on focus if selected
   * @prop --ino-option-selected-background-color-active: Background color if active and selected
   * @prop --ino-option-deselected-background-color: Background color if deselected
   * @prop --ino-option-deselected-background-color-hover: Background color on hover if deselected
   * @prop --ino-option-deselected-background-color-focus: Background color on focus if deselected
   * @prop --ino-option-deselected-background-color-active: Background color if active and deselected
   */
  --option-selected-background-color: var(--ino-option-selected-background-color, #{rgba(colors.ino-color(primary, base), 0.05)});
  --option-selected-background-color-hover: var(--ino-option-selected-background-color-hover, #{rgba(colors.ino-color(primary, base), 0.1)});
  --option-selected-background-color-focus: var(--ino-option-selected-background-color-focus, #{rgba(colors.ino-color(primary, base), 0.15)});
  --option-selected-background-color-active: var(--ino-option-selected-background-color-active, #{rgba(colors.ino-color(primary, base), 0.3)});
  // the following CSS variables do not have a default value as the component uses the default colors set
  // by the MDC library if the value of the variable is empty
  --option-deselected-background-color: var(--ino-option-deselected-background-color);
  --option-deselected-background-color-hover: var(--ino-option-deselected-background-color-hover, #{rgba(black, 0.1)});
  --option-deselected-background-color-focus: var(--ino-option-deselected-background-color-focus, #{rgba(black, 0.15)});
  --option-deselected-background-color-active: var(--ino-option-deselected-background-color-active, #{rgba(black, 0.3)});
}

ino-option {

  @include list.item-disabled-text-opacity(0.5);

  .mdc-list-item--disabled {
    pointer-events: none;
  }

  .mdc-list-item {

    padding-top: 6px;
    padding-bottom: 6px;
    height: auto;

    background-color: var(--option-deselected-background-color);

    &:hover {
      background-color: var(--option-deselected-background-color-hover);
    }

    &:focus {
      background-color: var(--option-deselected-background-color-focus);
    }

    &:active {
      background-color: var(--option-deselected-background-color-active);
    }

    &.mdc-list-item--selected, &.mdc-list-item--activated {
      background-color: var(--option-selected-background-color);

      &::before, &::after {
        display: none;
      }

      &:hover {
        background-color: var(--option-selected-background-color-hover);
      }

      &:focus {
        background-color: var(--option-selected-background-color-focus);
      }

      &:active {
        background-color: var(--option-selected-background-color-active);
      }
    }
  }
}
