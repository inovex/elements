@use '../base/mdc-customize';
@use '@material/fab/mdc-fab';
@use '@material/fab';
@use '../base/new-theme' as theme;
@use '../base/animation';
@use '../base/typography-new' as typography;

@include fab.core-styles;

$edge-positions: none, top-left, top-right, bottom-right, bottom-left;

$edged-borders: (
  none: 50%,
  top-left: 0 50% 50% 50%,
  top-right: 50% 0 50% 50%,
  bottom-right: 50% 50% 0 50%,
  bottom-left: 50% 50% 50% 0,
);

$extended-edged-borders: (
  none: 28px,
  top-left: 2px 28px 28px 28px,
  top-right: 28px 2px 28px 28px,
  bottom-right: 28px 28px 2px 28px,
  bottom-left: 28px 28px 28px 2px,
);

@mixin setEdgedBorders($position) {
  &:not(.mdc-fab--extended) {
    border-radius: map_get($edged-borders, $position);
    @include animation.button-rounding(
      map_get($edged-borders, none),
      map_get($edged-borders, $position),
      fab-#{$position}-default
    );

    &:focus:not(:active) {
      @include animation.button-rounding(map_get($edged-borders, $position), 50%, fab-#{$position}-focus);
    }
  }

  &.mdc-fab--extended {
    border-radius: map_get($extended-edged-borders, $position);
    height: 56px;
    padding: 15.5px 20px;
    gap: 12px;
    box-shadow: none;

    @include animation.button-rounding(
      map_get($extended-edged-borders, none),
      map_get($extended-edged-borders, $position),
      fab-#{$position}-extended
    );

    &:focus:not(:active) {
      @include animation.button-rounding(
        map_get($extended-edged-borders, $position),
        28px,
        fab-#{$position}-extended-focus
      );
    }
  }

  &.mdc-fab--extended.mdc-fab--shadow {
    box-shadow: 0px 4px 10px 0.1px #1801e140, 0px 0.5px 4px 0.2px #00124d80;

    &:hover,
    &:focus:not(:active) {
      box-shadow: 0px 4px 10px 0.1px #1801e140, 0px 0.5px 4px 0.2px #00124d80;
    }
    &:active,
    &:focus:active {
      box-shadow: none;
    }
  }
}

ino-fab {
  /**
   * @prop --ino-fab-color: Text color
   * @prop --fab-background-color: Background color
   * @prop --fab-background-color-hover: Background color on hover
   * @prop --fab-background-color-active: Background color if active
   * @prop --fab-icon-color: Color of the slotted icon
   * @prop --fab-color-disabled: Text color if disabled
   * @prop --fab-background-color-disabled: Background color if disabled
   * @prop --fab-icon-color-disabled: Color of the slotted icon if disabled
   */
  --fab-color: var(--ino-fab-color, white);
  --fab-background-color: var(--ino-fab-background-color, #{theme.$p-5});
  --fab-background-color-hover: var(--ino-fab-background-color-hover, #5274ff);
  --fab-background-color-active: var(--ino-fab-background-color-active, #{theme.$p-5});
  --fab-icon-color: var(--ino-fab-icon-color, #{theme.$white});
  --fab-color-disabled: var(--ino-fab-color-disabled, #{theme.$white});
  --ino-fab-color-focused: var(--ino-fab-color-focused, #{theme.$p-3});
  --fab-background-color-disabled: var(--ino-background-color-disabled, #{theme.$n-4});
  --fab-icon-color-disabled: var(--ino-fab-icon-color-disabled, #{theme.$white});

  // colors
  .mdc-fab {
    @include typography.typo(title-l);
    @include fab.icon-size(26px, 26px);
    font-weight: 700;
    text-transform: none;
    box-shadow: none;
    border: 4px solid var(--ino-fab-color-focused);

    &:focus:not(:active)::before {
      outline: 4px solid theme.$p-3;
    }

    .material-icons.mdc-fab__icon {
      margin: 0;
    }

    ino-icon {
      --icon-color: var(--fab-icon-color);
      --icon-width: 26px;
      --icon-height: 26px;
    }

    &.mdc-fab--shadow {
      box-shadow: 0px 4px 10px 0.1px #1801e140, 0px 0.5px 4px 0.2px #00124d80;

      &:hover,
      &:focus:not(:active) {
        box-shadow: 0px 4px 10px 0.1px #1801e140, 0px 0.5px 4px 0.2px #00124d80;
      }
    }

    &.mdc-fab--small {
      width: 40px;
      height: 40px;

      ino-icon {
        --icon-width: 20px;
        --icon-height: 20px;
      }
    }

    &.mdc-fab--large {
      height: 96px;
      width: 96px;

      ino-icon {
        --icon-width: 40px;
        --icon-height: 40px;
      }
    }

    &:focus:active {
      border: 4px solid var(--ino-fab-color-focused);
    }

    &:active,
    &:focus:active {
      box-shadow: none;
    }

    &.mdc-ripple-upgraded--background-focused {
      box-shadow: none;
      border: 4px solid var(--ino-fab-color-focused);
    }

    @include fab.ink-color(var(--fab-color));
    @include fab.container-color(var(--fab-background-color));

    &:hover {
      @include fab.container-color(var(--fab-background-color-hover));
      box-shadow: none;
    }

    &:active,
    &:after {
      @include fab.container-color(var(--fab-background-color-active));
    }

    &:disabled {
      @include fab.ink-color(var(--fab-color-disabled));
      @include fab.container-color(var(--fab-background-color-disabled));
      pointer-events: none;

      ino-icon {
        --icon-color: var(--fab-icon-color-disabled);
      }
    }
  }

  // Generate ino-edge-position classes
  @each $position in $edge-positions {
    &.ino-fab--edge-position-#{$position} .mdc-fab:not(.mdc-fab--small) {
      @include setEdgedBorders($position);
    }
  }
}
